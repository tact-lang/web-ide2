========================================================================
fromCell/fromSlice for Struct
========================================================================
primitive Int;

fun AnyStruct_fromCell(cell: Cell): S {}
fun AnyStruct_fromSlice(slice: Slice): S {}

struct Foo {}

fun test() {
    Foo.<caret>;
}
------------------------------------------------------------------------
2  fromCell(cell: Cell): S
2  fromSlice(slice: Slice): S
14 call  Use as function argument
14 do  Create do-until loop
14 if  Create if statement
14 let  Create variable
14 not  Negate expression
14 repeat  Create repeat loop

========================================================================
fromCell/fromSlice for message
========================================================================
primitive Int;

fun AnyMessage_fromCell(cell: Cell): M {}
fun AnyMessage_fromSlice(slice: Slice): M {}

message Foo {}

fun test() {
    Foo.<caret>;
}
------------------------------------------------------------------------
2  fromCell(cell: Cell): M
2  fromSlice(slice: Slice): M
14 call  Use as function argument
14 do  Create do-until loop
14 if  Create if statement
14 let  Create variable
14 not  Negate expression
14 repeat  Create repeat loop
