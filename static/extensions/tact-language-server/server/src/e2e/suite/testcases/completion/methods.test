========================================================================
Completion for method on T?
========================================================================
primitive Int;

extends fun foo(self: Int) {}
extends fun fooOpt(self: Int?) {}

fun test() {
    let a = 10;
    a.<caret>;
}
------------------------------------------------------------------------
2  foo(self: Int)
2  fooOpt(self: Int?)
14 call  Use as function argument
14 do  Create do-until loop
14 if  Create if statement
14 let  Create variable
14 not  Negate expression
14 repeat  Create repeat loop

========================================================================
Completion of struct field of self type
========================================================================
primitive Int;

struct Data {
    active: Bool;
}

extends fun some(self: Data) {
    return <caret>
}
------------------------------------------------------------------------
13 false
13 null
13 true
13 codeOf Contract   Cell
13 initOf Contract(params)   StateInit
5  self   Data
9  self.active:    of Data
2  some(self: Data)
21 Data{}

========================================================================
Completion of struct method of self type
========================================================================
primitive Int;

struct Data {
    active: Bool;
}

extends fun other(self: Data) {}

extends fun some(self: Data) {
    return <caret>
}
------------------------------------------------------------------------
13 false
13 null
13 true
13 codeOf Contract   Cell
13 initOf Contract(params)   StateInit
5  self   Data
9  self.active:    of Data
2  other(self: Data)
2  some(self: Data)
21 Data{}
