{"version":3,"file":"server.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;;;;;;;;;;;;;;;;ACnE8C;AAC9C;;;;;;;;;;;;;;;;;;;;;;ACD0D;AACF;AACd;AACf;AACsB;AACjD,cAAc,4CAAM;AACc;AAClC;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAa;AAC7B,IAAI,8DAAQ;AACZ;AACA;AACA;AACA,qCAAqC,mEAAS;AAC9C;AACA,4CAA4C,cAAc,eAAe,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2EAA2E;AACxG,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;AC1DA;AACa;AAC2C;AACjD;AACP,UAAU,kEAAY;AACtB,eAAe,kEAAY;AAC3B,gBAAgB,kEAAY;AAC5B,cAAc,kEAAY;AAC1B,UAAU,kEAAY;AACtB;AACA,aAAa,kEAAY;AACzB,UAAU,kEAAY;AACtB,eAAe,kEAAY;AAC3B,mBAAmB,kEAAY;AAC/B;AACA,UAAU,kEAAY;AACtB,WAAW,kEAAY;AACvB,cAAc,kEAAY;AAC1B,YAAY,kEAAY;AACxB,UAAU,kEAAY;AACtB,UAAU,kEAAY;AACtB,WAAW,kEAAY;AACvB,gBAAgB,kEAAY;AAC5B,YAAY,kEAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kEAAY;AAC9B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvC8B;AAC9B;AAC4E;AAC5E;AACA;AACA;AACA,qFAA0B;AAC1B;AACmC;AACI;AACM;AACJ;AACzC,eAAe,8CAAO,OAAO,qDAAW,MAAM,2DAAW,gBAAgB,mDAAS,MAAM,yDAAS;AACjG;AACA,CAAC;AACM;AACP;AACA;AACA;;;;;;;;;;;AClBY;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA,eAAe,mBAAO,CAAC,8DAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;;;AAGA;AACA;AACA,wCAAwC,GAAG,IAAI;AAC/C;AACA;AACA;;AAEA;AACA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B,uCAAuC,GAAG;AAC1C,YAAY,GAAG,yBAAyB;AACxC;AACA;AACA,8BAA8B;AAC9B,cAAc,GAAG;AACjB;;AAEA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC,6BAA6B,eAAe;AAC5C;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,UAAU,EAAE;AACZ,6BAA6B;AAC7B,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,cAAc,KAAK,QAAQ,EAAE,IAAI,EAAE;AACnC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,sBAAsB,cAAc;AACpC;AACA;AACA;;AAEA,oBAAoB,cAAc;AAClC,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACzMY;;AAEZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACrBA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,cAAc;AACdvD;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,oDAAU;;AAEnC,OAAO,YAAY;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AC9QA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,sCAAI;AACpC;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,MAAM;AACN;AACA;AACA;AACA,KAAK,6BAA6B;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACnSA;AACA;AACA;AACA;;AAEA;AACA,CAAC,+FAAwC;AACzC,EAAE;AACF,CAAC,yFAAqC;AACtC;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,kBAAM;;AAE3B;AACA;AACA;;AAEA,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,8DAAgB;;AAE/C;AACA,EAAE,cAAc;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,4BAA4B;;AAEpC;AACA;AACA,iDAAiD,EAAE;AACnD,sBAAsB,WAAW,IAAI,MAAM;;AAE3C;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,oDAAU;;AAEnC,OAAO,YAAY;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACtQa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;;;;;;;;;;;ACZa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,4BAA4B,iDAAiD;;AAE7E;AACA,OAAO;AACP,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACpHY;;AAEZ,gBAAgB,mBAAO,CAAC,+CAAQ;;AAEhC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;;AAEA;AACA,MAAM,IAA6B;AACnC;AACA;;AAEA;AACA,OAAO,EAGJ;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;AC/HY;;AAEb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACVa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACTY;;AAEZ,aAAa,mBAAO,CAAC,4DAAe;;AAEpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxPY;;AAEZ;;AAEA,YAAY,mBAAO,CAAC,kFAA0B;AAC9C,cAAc,mBAAO,CAAC,sEAAuB;AAC7C,aAAa,mBAAO,CAAC,0EAAsB;;AAE3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,uCAAuC;AACnE;;AAEA;AACA;AACA,wBAAwB,uDAAuD;AAC/E;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,sBAAsB,6CAA6C;AACnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACnLA,0BAA0B,mBAAO,CAAC,4GAA0C;;AAE5E,sBAAsB;;AAEtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,oEAAoE;AACzE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,qDAAqD;AACnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,+BAA+B;AAC7C;;AAEA;AACA;AACA;;;;;;;;;;;ACpEA,cAAc;AACd;AACA,GAAG;AACH;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,kHAA6C;AACvE,eAAe,mBAAO,CAAC,gIAAoD;AAC3E,WAAW,mBAAO,CAAC,wHAAgD;AACnE,kBAAkB,mBAAO,CAAC,oHAA8C;AACxE,WAAW,mBAAO,CAAC,oGAAsC;;AAEzD;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,wBAAwB;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,wBAAwB;AACtE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,wBAAwB;AACrE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjEY;;AAEZ;;AAEA;;AAEA,eAAe,mBAAO,CAAC,0EAAsB;AAC7C,aAAa,mBAAO,CAAC,wFAAgC;AACrD,UAAU,mBAAO,CAAC,4GAA0C;AAC5D,0BAA0B,mBAAO,CAAC,4GAA0C;AAC5E,kBAAkB,mBAAO,CAAC,8FAAmC;AAC7D,aAAa,mBAAO,CAAC,oEAAsB;AAC3C,mBAAmB,mBAAO,CAAC,8EAA2B;AACtD,kBAAkB,mBAAO,CAAC,gFAA4B;AACtD,aAAa,mBAAO,CAAC,oFAA8B;AACnD,wBAAwB,mBAAO,CAAC,4FAA+B;;AAE/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,gDAAgD;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,+BAA+B;AACpD;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA,6BAA6B,iCAAiC;AAC9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kEAAkE;;AAElE;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;ACtzBY;;AAEZ,2GAAkC;;;;;;;;;;;ACFlC;;AAEA,cAAc,mBAAO,CAAC,kHAA6C;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACvCA;;AAEA,cAAc,mBAAO,CAAC,kHAA6C;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC7CA,aAAa,mBAAO,CAAC,8CAAQ;AAC7B,qBAAqB,mBAAO,CAAC,wFAA6B;AAC1D,yBAAyB,mBAAO,CAAC,oHAA8C;AAC/E,wBAAwB,mBAAO,CAAC,kHAA6C;;AAE7E,kBAAkB;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,iDAAiD;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,yCAAyC;AACzD;;AAEA;AACA,uBAAuB,8BAA8B;AACrD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,yCAAyC;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,MAAM;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5JA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA,sBAAsB;AACtB,aAAa,IAAI;AACjB,YAAY,IAAI;;AAEhB;AACA,cAAc,6BAA6B;AAC3C;;AAEA;AACA;AACA;;;;;;;;;;;ACVA,eAAe,mBAAO,CAAC,gIAAoD;;AAE3E,cAAc,KAAK,wCAAwC;AAC3D,gBAAgB,IAAI;;AAEpB;;AAEA;AACA;AACA,uCAAuC,wBAAwB;AAC/D;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AChBA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,iDAAiD;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,+BAA+B;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,gCAAgC;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACpDA,eAAe,mBAAO,CAAC,gIAAoD;AAC3E,wBAAwB,mBAAO,CAAC,sHAA+C;AAC/E,oBAAoB,mBAAO,CAAC,8DAAgB;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,0CAA0C;AACjD,OAAO,0CAA0C;AACjD;AACA;AACA,OAAO,gDAAgD;AACvD;AACA,OAAO,yCAAyC;AAChD;AACA;AACA,OAAO,0CAA0C;AACjD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,8BAA8B;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC/GA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACjDA,sBAAsB,mBAAO,CAAC,kHAA6C;;AAE3E,cAAc,KAAK,8CAA8C;;AAEjE,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qDAAqD,IAAI;AACzD;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACrBA,sBAAsB,mBAAO,CAAC,sHAA+C;AAC7E,oBAAoB,mBAAO,CAAC,gHAA4C;AACxE,YAAY,mBAAO,CAAC,gGAAoC;AACxD,mBAAmB,mBAAO,CAAC,kHAA6C;;AAExE,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;ACzCA,sBAAsB,mBAAO,CAAC,kHAA6C;AAC3E,oBAAoB,mBAAO,CAAC,4GAA0C;AACtE,YAAY,mBAAO,CAAC,4FAAkC;AACtD,mBAAmB,mBAAO,CAAC,8GAA2C;AACtE,gBAAgB,mBAAO,CAAC,oGAAsC;;AAE9D;;AAEA;AACA;AACA,KAAK,YAAY,oCAAoC;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;ACrBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,+DAA+D;AAC/D,MAAM;AACN;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC1BA;AACA;;AAEA,qBAAqB,mBAAO,CAAC,kGAAyB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACpEA;;AAEA,aAAa,mBAAO,CAAC,4DAAe;AACpC,kBAAkB,mBAAO,CAAC,4FAAsB;AAChD,0BAA0B,mBAAO,CAAC,gHAAgC;AAClE,WAAW,mBAAO,CAAC,gGAAwB;AAC3C,kBAAkB,mBAAO,CAAC,4FAAsB;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC9CA;;AAEA,aAAa,mBAAO,CAAC,oFAA8B;;AAEnD,qCAAqC;AACrC,iCAAiC,IAAI,UAAU,IAAI,UAAU,KAAK,EAAE;;AAEpE;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC7BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACdA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AClBA;;AAEA,aAAa,mBAAO,CAAC,4DAAe;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C,0BAA0B;AACxE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;ACxDA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACxBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC7BA;;AAEA,qBAAqB,mBAAO,CAAC,4FAAmB;AAChD,qBAAqB,mBAAO,CAAC,8FAAoB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B;AAC3B,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;AC1IY;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC5BA;;AAEA,0BAA0B,mBAAO,CAAC,4GAA0C;AAC5E,YAAY,mBAAO,CAAC,gHAA4C;AAChE,kBAAkB,mBAAO,CAAC,sGAAuC;AACjE,oBAAoB,mBAAO,CAAC,gGAAoC;AAChE,iBAAiB,mBAAO,CAAC,0FAAiC;AAC1D,cAAc,mBAAO,CAAC,kFAA6B;AACnD,iBAAiB,mBAAO,CAAC,0FAAiC;;AAE1D,cAAc;;AAEd;AACA;AACA,cAAc;AACd,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,eAAe,eAAe;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzbA,wHAAwC;;;;;;;;;;;ACAxC;;AAEA,YAAY,mBAAO,CAAC,4CAAO;;AAE3B,YAAY;;AAEZ,eAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc;AACd,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AClDA;;AAEA,cAAc,mBAAO,CAAC,gFAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA,UAAU;;AAEV;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACtKA,yHAAoC;;;;;;;;;;;ACApC,iBAAiB,mBAAO,CAAC,oGAAsC;AAC/D,wBAAwB,mBAAO,CAAC,kHAA6C;AAC7E,mBAAmB,mBAAO,CAAC,wGAAwC;AACnE,yBAAyB,mBAAO,CAAC,sHAA+C;AAChF,yBAAyB,mBAAO,CAAC,oHAA8C;AAC/E,wBAAwB,mBAAO,CAAC,kHAA6C;;AAE7E,WAAW;AACX,cAAc;AACd,YAAY;AACZ,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB,oBAAoB;AACpB,qBAAqB;;AAErB;;AAEA;AACA,YAAY;;AAEZ;AACA;;AAEA,oCAAoC;AACppkBA;;AAEA,wBAAwB,mBAAO,CAAC,wGAAwC;AACxE,oBAAoB,mBAAO,CAAC,gGAAoC;AAChE,iBAAiB,mBAAO,CAAC,0FAAiC;AAC1D,cAAc,mBAAO,CAAC,kFAA6B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,OAAO,eAAe,eAAeoC;;;;;;;;;;;ACApC,YAAY;AACZ,SAAS;AACT;;AAEA,kBAAkB,mBAAO,CAAC,sGAAuC;;AAEjE,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AC/jBA,uHAAoC;;;;;;;;;;;ACApC,gCAAgC,mBAAO,CAAC,wIAAwD;AAChG,mBAAmB,mBAAO,CAAC,sGAAuC;AAClE,iBAAiB,mBAAO,CAAC,0FAAiC;;AAE1D,qBAAqB;;AAErB,YAAY,IAAI;;AAEhB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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O,CAAC,8FAA8B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB,eAAe;AACf,gBAAgB;AAChB,YAAY;AACZ,mBAAmB;AACnB,kBAAkB;AAClB,cAAc;AACd,YAAY;;;;;;;;;;;;AC9HA;;AAEZ,8CAA6C,CAAC,YAAY,EAAC;;AAE3D,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,mBAAmB,mBAAO,CAAC,6FAA8B;;AAEzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA,gBAAgB;;;;;;;;;;;;ACpEJ;;AAEZ,8CAA6C,CAAC,YAAY,EAAC;;AAE3D,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,mBAAmB,mBAAO,CAAC,6FAA8B;AACzD,uBAAuB,mBAAO,CAAC,uGAAmC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;;;;;;;;;;;;AC5OJ;;AAEZ,8CAA6C,CAAC,YAAY,EAAC;;AAE3D,cAAc,mBAAO,CAAC,iFAAwB;AAC9C,mBAAmB,mBAAO,CAAC,6FAA8B;AACzD,uBAAuB,mBAAO,CAAC,uGAAmC;;AAElE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;;;;;;;;;;;;AC3DJ;;AAEZ,8CAA6C,CAAC,YAAY,EAAC;;AAE3D,aAAa,mBAAO,CAAC,+EAAuB;AAC5C,cAAc,mBAAO,CAAC,yEAAoB;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB;AAChB,cAAc;AACd,YAAY;;;;;;;;;;;;ACxMA;;AAEZ,cAAc,mBAAO,CAAC,oFAAyB;AAC/C,eAAe,mBAAO,CAAC,sFAA0B;AACjD,WAAW,mBAAO,CAAC,8EAAsB;AACzC,WAAW,mBAAO,CAAC,8EAAsB;AACzC,wBAAwB,mBAAO,CAAC,8FAA8B;AAC9D,sBAAsB,mBAAO,CAAC,0FAA4B;AAC1D,eAAe,mBAAO,CAAC,0EAAoB;AAC3C,iBAAiB,mBAAO,CAAC,oEAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnCY;;AAEZ,kBAAkB,mBAAO,CAAC,gFAAuB;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACZY;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtFY;;AAEZ,kBAAkB,mBAAO,CAAC,mFAAyB;AACnD,oBAAoB,mBAAO,CAAC,uFAA2B;AACvD,wBAAwB,mBAAO,CAAC,+FAA+B;AAC/D,gBAAgB,mBAAO,CAAC,+EAAuB;AAC/C,iBAAiB,mBAAO,CAAC,iFAAwB;AACjD,cAAc,mBAAO,CAAC,yEAAoB;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzLY;;AAEZ,iBAAiB,mBAAO,CAAC,2FAA6B;AACtD,wBAAwB,mBAAO,CAAC,yGAAoC;AACpE,iBAAiB,mBAAO,CAAC,2FAA6B;AACtD,mBAAmB,mBAAO,CAAC,+FAA+B;;AAE1D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5HY;;AAEZ,oBAAoB,mBAAO,CAAC,iGAAgC;AAC5D,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AClEY;;AAEZ,uBAAuB,mBAAO,CAAC,uGAAmC;;AAElE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjCY;;AAEZ,mBAAmB,mBAAO,CAAC,uFAAiC;AAC5D,wBAAwB,mBAAO,CAAC,yGAAoC;AACpE,iBAAiB,mBAAO,CAAC,2FAA6B;AACtD,oBAAoB,mBAAO,CAAC,mGAAiC;;AAE7D;AACA,6DAA6D;AAC7D;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7FY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,gCAAgC,mBAAO,CAAC,+HAA+C;AACvF,iBAAiB,mBAAO,CAAC,iFAAwB;AACjD,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/KY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,oBAAoB,mBAAO,CAAC,uFAA2B;AACvD,iBAAiB,mBAAO,CAAC,iFAAwB;AACjD,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvEY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;;AAEvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjKY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,iBAAiB,mBAAO,CAAC,iFAAwB;AACjD,kBAAkB,mBAAO,CAAC,iFAAwB;AAClD,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AClGY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,gCAAgC,mBAAO,CAAC,+HAA+C;AACvF,0BAA0B,mBAAO,CAAC,mGAAiC;AACnE,yBAAyB,mBAAO,CAAC,+FAA0B;AAC3D,mBAAmB,mBAAO,CAAC,mFAAoB;AAC/C,mBAAmB,mBAAO,CAAC,mFAAoB;AAC/C,wBAAwB,mBAAO,CAAC,6FAAyB;AACzD,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClHY;;AAEZ,mBAAmB,mBAAO,CAAC,+FAA+B;AAC1D,gCAAgC,mBAAO,CAAC,+HAA+C;AACvF,yBAAyB,mBAAO,CAAC,6GAAsC;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AClIY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,oBAAoB,mBAAO,CAAC,iGAAgC;;AAE5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvFY;;AAEZ,oBAAoB,mBAAO,CAAC,iGAAgC;;AAE5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7BY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC1EY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,oBAAoB,mBAAO,CAAC,iGAAgC;AAC5D,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/BY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;;AAEvE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9BY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,gCAAgC,mBAAO,CAAC,+HAA+C;AACvF,oBAAoB,mBAAO,CAAC,iGAAgC;AAC5D,oBAAoB,mBAAO,CAAC,uFAA2B;AACvD,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChIY;;AAEZ,iBAAiB,mBAAO,CAAC,2FAA6B;AACtD,wBAAwB,mBAAO,CAAC,yGAAoC;AACpE,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,gCAAgC,mBAAO,CAAC,+HAA+C;AACvF,oBAAoB,mBAAO,CAAC,iGAAgC;AAC5D,mBAAmB,mBAAO,CAAC,+FAA+B;AAC1D,qBAAqB,mBAAO,CAAC,mGAAiC;AAC9D,mBAAmB,mBAAO,CAAC,+FAA+B;AAC1D,uBAAuB,mBAAO,CAAC,6FAAyB;;AAExreY;;AAEZ,iBAAiB,mBAAO,CAAC,2FAA6B;AACtD,wBAAwB,mBAAO,CAAC,yGAAoC;AACpE,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,gCAAgC,mBAAO,CAAC,+HAA+C;AACvF,oBAAoB,mBAAO,CAAC,iGAAgC;AAC5D,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AClbY;;AAEZ,gCAAgC,mBAAO,CAAC,+HAA+C;AACvF,kBAAkB,mBAAO,CAAC,mFAAyB;AACnD,oBAAoB,mBAAO,CAAC,uFAA2B;AACvD,0BAA0B,mBAAO,CAAC,mGAAiC;AACnE,iBAAiB,mBAAO,CAAC,iFAAwB;AACjD,cAAc,mBAAO,CAAC,yEAAoB;AAC1C,yBAAyB,mBAAO,CAAC,+FAA0B;AAC3D,mBAAmB,mBAAO,CAAC,mFAAoB;AAC/C,mBAAmB,mBAAO,CAAC,mFAAoB;AAC/C,wBAAwB,mBAAO,CAAC,6FAAyB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzUY;;AAEZ,eAAe,mBAAO,CAAC,2EAAgB;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7CY;;AAEZ,eAAe,mBAAO,CAAC,2EAAgB;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClCY;;AAEZ,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBY;;AAEZ,iBAAiB,mBAAO,CAAC,2FAA6B;AACtD,oBAAoB,mBAAO,CAAC,iGAAgC;AAC5D,iBAAiB,mBAAO,CAAC,iFAAwB;AACjD,iBAAiB,mBAAO,CAAC,iFAAwB;AACjD,mBAAmB,mBAAO,CAAC,mFAAoB;AAC/C,uBAAuB,mBAAO,CAAC,6FAAyB;AACxD,oBAAoB,mBAAO,CAAC,qFAAqB;;AAEjD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrNY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClBY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,cAAc,mBAAO,CAAC,yEAAoB;AAC1C,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpHY;;AAEZ,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,oBAAoB,mBAAO,CAAC,iGAAgC;AAC5D,mBAAmB,mBAAO,CAAC,mFAAoB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpDY;;AAEZ,oBAAoB,mBAAO,CAAC,iFAAqB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACbY;;AAEZ,aAAa,mBAAO,CAAC,+EAAuB;;AAE5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrCY;;AAEZ,gCAAgC,mBAAO,CAAC,+HAA+C;AACvF,yBAAyB,mBAAO,CAAC,2GAAqC;AACtE,wBAAwB,mBAAO,CAAC,yGAAoC;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACxBY;;AAEZ,qBAAqB,mBAAO,CAAC,mGAAiC;AAC9D,oBAAoB,mBAAO,CAAC,iFAAqB;AACjD,eAAe,mBAAO,CAAC,qEAAe;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uEAAuE;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AChDY;;AAEZ,aAAa,mBAAO,CAAC,+EAAuB;AAC5C,yBAAyB,mBAAO,CAAC,6GAAsC;AACvE,kBAAkB,mBAAO,CAAC,6EAAmB;AAC7C,oBAAoB,mBAAO,CAAC,iFAAqB;AACjD,eAAe,mBAAO,CAAC,qEAAe;AACtC,iBAAiB,mBAAO,CAAC,2EAAkB;AAC3C,sBAAsB,mBAAO,CAAC,qFAAuB;AACrD,cAAc,mBAAO,CAAC,mEAAc;AACpC,kBAAkB,mBAAO,CAAC,6EAAmB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;;AAEN;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3TY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACVY;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACXY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBY;;AAEZ,iBAAiB,mBAAO,CAAC,2EAAkB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACVY;;AAEZ,mBAAmB,mBAAO,CAAC,+FAA+B;;AAE1D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACZY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACnBY;;AAEZ,mBAAmB,mBAAO,CAAC,+FAA+B;;AAE1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACzBY;;AAEZ,mBAAmB,mBAAO,CAAC,+FAA+B;;AAE1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACvCY;;AAEZ,aAAa,mBAAO,CAAC,+EAAuB;;AAE5C;AACA,kBAAkB;AAClB;;AAEA;;;;;;;;;;;;ACRY;;AAEZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACfY;;AAEZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC1BY;;AAEZ,aAAa,mBAAO,CAAC,+EAAuB;AAC5C,oBAAoB,mBAAO,CAAC,iFAAqB;AACjD,cAAc,mBAAO,CAAC,mEAAc;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACtMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACjKY;;AAEZ,wBAAwB,mBAAO,CAAC,wEAAoB;;AAEpD;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZY;;AAEZ,aAAa,mBAAO,CAAC,0FAA8B;AACnD,mBAAmB,mBAAO,CAAC,8FAAmC;AAC9D,iBAAiB,mBAAO,CAAC,0FAAiC;AAC1D;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrCY;;AAEZ,aAAa,mBAAO,CAAC,gGAAiC;AACtD,mBAAmB,mBAAO,CAAC,oGAAsC;AACjE,iBAAiB,mBAAO,CAAC,gGAAoC;;AAE7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBY;;AAEZ,aAAa,mBAAO,CAAC,gFAAyB;AAC9C,mBAAmB,mBAAO,CAAC,oFAA8B;AACzD,iBAAiB,mBAAO,CAAC,gFAA4B;;AAErD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCY;;AAEZ;;AAEA,mBAAmB,mBAAO,CAAC,kFAA0B;;AAErD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrEa;AACb,WAAW,mBAAO,CAAC,cAAI;AACvB,YAAY,mBAAO,CAAC,gBAAK;AACzB,gBAAgB,mBAAO,CAAC,kDAAU;;AAElC,OAAO,KAAK;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,gCAAgC,IAAI;AACxE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA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Aa,mBAAO,CAAC,8CAAQ;AAC7B,YAAY,mBAAO,CAAC,0DAAc;AAClC,aAAa,mBAAO,CAAC,8CAAQ;AAC7B,YAAY,mBAAO,CAAC,4CAAO;;AAE3B;AACA;;AAEA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,0DAA0D;AAC1D;;AAEA;;AAEA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,+BAA+B,WAAW;;AAE1C;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3cY;;AAEZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC5EY;;AAEZ,YAAY;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACjDA;AACA;AACA;AACA;;;;;;;;;;;;ACHY;;AAEZ;;AAEA,cAAc,mBAAO,CAAC,sEAAuB;AAC7C,YAAY,mBAAO,CAAC,iEAAS;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC5FY;;AAEZ,gBAAgB,mBAAO,CAAC,4FAA+B;;AAEvD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,yBAAyB;AACrC,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC7FY;;AAEZ,sFAAiC;;;;;;;;;;;;ACFrB;;AAEZ,QAAQ,mBAAO,CAAC,sDAAW;AAC3B,WAAW,mBAAO,CAAC,sDAAW;AAC9B,aAAa,mBAAO,CAAC,oDAAW;;AAEhC;;AAEA,YAAY;;AAEZ;AACA,KAAK,0BAA0B;AAC/B;AACA;;AAEA;;AAEA;AACA,gDAAgD,2BAA2B;;AAE3E;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,gDAAgD,2BAA2B;;AAE3E;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,eAAe;AACf,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5KY;;AAEZ,eAAe,mBAAO,CAAC,4DAAe;AACtC,YAAY,mBAAO,CAAC,mDAAW;;AAE/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;AC7CY;;AAEZ,wDAAgC;;;;;;;;;;;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AAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA,aAAa,YAAY;AACzB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;;;;;;;;;;;AC/FlB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B,GAAG,yBAAyB,GAAG,uBAAuB,GAAG,4BAA4B,GAAG,kCAAkC,GAAG,oCAAoC,GAAG,2CAA2C,GAAG,sCAAsC,GAAG,0BAA0B,GAAG,uBAAuB,GAAG,wBAAwB,GAAG,4BAA4B,GAAG,4BAA4B,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,aAAa,GAAG,kBAAkB,GAAG,oBAAoB,GAAG,qBAAqB;AACviB,cAAc,mBAAO,CAAC,8DAAO;AAC7B,WAAW,mBAAO,CAAC,4DAAM;AACzB,mBAAmB,mBAAO,CAAC,wEAAY;AACvC,oBAAoB,mBAAO,CAAC,0EAAa;AACzC,iBAAiB,mBAAO,CAAC,oEAAU;AACnC,uBAAuB,mBAAO,CAAC,gFAAgB;AAC/C;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF,2CAA2C,KAAK;AACzI;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC,0EAA0E,oCAAoC,KAAK;AACpH;AACA;AACA;AACA;AACA,oEAAoE,IAAI;AACxE,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,uBAAuB,UAAU,qBAAqB;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,uBAAuB;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,uBAAuB;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oHAAoH,uBAAuB,uBAAuB,cAAc;AAChL;AACA;AACA,oHAAoH,uBAAuB;AAC3I;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,uBAAuB,uBAAuB,cAAc;AACxK;AACA;AACA,4GAA4G,uBAAuB;AACnI;AACA;AACA;AACA;AACA,8GAA8G,sBAAsB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,oDAAoD;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,uBAAuB,yBAAyB,cAAc;AACxH;AACA;AACA,0DAA0D,uBAAuB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB,UAAU,qBAAqB;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oCAAoC;AACtF;AACA;AACA;AACA;AACA,iEAAiE,gBAAgB;AACjF;AACA;AACA,iEAAiE,gBAAgB,UAAU,qBAAqB,sBAAsB,eAAe;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe,yBAAyB,cAAc;AAChH;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,iCAAiC;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE;AACA,2CAA2C,gBAAgB,KAAK,WAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mCAAmC;AAC7E;AACA;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ,KAAK,WAAW,8BAA8B,uBAAuB;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE;AACA,4CAA4C,gBAAgB,KAAK,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mCAAmC;AAC7E;AACA;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,uBAAuB,GAAG,mBAAmB;AAC/G,iDAAiD,wBAAwB,KAAK,WAAW,QAAQ,wCAAwC,KAAK,MAAM;AACpJ;AACA;AACA,gDAAgD,YAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,+BAA+B;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC;AACzE;AACA;AACA;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,0BAA0B;AAC/E;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4EAA4E,cAAc;AAC1F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,GAAG;AAC3G;AACA;AACA;AACA;AACA,+EAA+E,IAAI;AACnF,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mCAAmC;AACnF;AACA;AACA;AACA;AACA;AACA,uDAAuD,eAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,+BAA+B;AAC9G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B;;;;;;;;;;;;AC3rClB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;;;;;;;;;;;;ACfjD;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,GAAG,aAAa;AAC/B,cAAc,mBAAO,CAAC,8DAAO;AAC7B;AACA;AACA,0BAA0B;AAC1B,+BAA+B;AAC/B,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+CAA+C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,SAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;;;;;;;;;;;AC/Ha;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,aAAa,GAAG,YAAY,GAAG,aAAa,GAAG,cAAc,GAAG,cAAc,GAAG,eAAe;AACtH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;;AClCN;AACb;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,iBAAiB,GAAG,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACriBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;;AC7YH;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;;ACvJhB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC,GAAG,6BAA6B,GAAG,qBAAqB;AAC3F,cAAc,mBAAO,CAAC,8DAAO;AAC7B,WAAW,mBAAO,CAAC,4DAAM;AACzB,iBAAiB,mBAAO,CAAC,oEAAU;AACnC,oBAAoB,mBAAO,CAAC,0EAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2CAA2C;AACrF;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC;;;;;;;;;;;;AC/LtB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oCAAoC,GAAG,6BAA6B,GAAG,qBAAqB;AAC5F,cAAc,mBAAO,CAAC,8DAAO;AAC7B,WAAW,mBAAO,CAAC,4DAAM;AACzB,oBAAoB,mBAAO,CAAC,0EAAa;AACzC,iBAAiB,mBAAO,CAAC,oEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;;;;;;;;;;;AClHvB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,wBAAwB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,mBAAmB,GAAG,oBAAoB,GAAG,gCAAgC,GAAG,2BAA2B,GAAG,qBAAqB,GAAG,kBAAkB;AAC5qB,WAAW,mBAAO,CAAC,4DAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC,eAAe,KAAK;;;;;;;;;;;;ACjTxC;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB;AACnB,kBAAe;;;;;;;;;;;;ACtBF;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,cAAc,mBAAO,CAAC,8DAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;;ACnEJ;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC,GAAG,iCAAiC;AACvE,uBAAuB,mBAAO,CAAC,gFAAgB;AAC/C;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;;;;;;;;;;;AC3EtB;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B,GAAG,mCAAmC,GAAG,mCAAmC,GAAG,iCAAiC,GAAG,iCAAiC,GAAG,8BAA8B,GAAG,2BAA2B,GAAG,2BAA2B,GAAG,2BAA2B,GAAG,2BAA2B,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,wBAAwB,GAAG,wBAAwB;AAC1b;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,4DAAO;AAC7B;AACA;AACA,aAAa,mBAAO,CAAC,kBAAM;AAC3B,WAAW,mBAAO,CAAC,cAAI;AACvB,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,cAAc,mBAAO,CAAC,gBAAK;AAC3B,cAAc,mBAAO,CAAC,sEAAe;AACrC,aAAa,mBAAO,CAAC,sEAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA,0DAA0D,aAAa;AACvE;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA,kEAAkE,OAAO,mBAAmB,OAAO;AACnG;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC;AACrC,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC;AACrC,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,+BAA+B;;;;;;;;;;;;AChQlB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,mBAAO,CAAC,kBAAM;AAC7B,cAAc,mBAAO,CAAC,sEAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB;AACnB,kBAAe;;;;;;;;;;;;AChKf;AACA;AACA;AACA;AACa;;AAEb,6GAA2C;;;;;;;;;;;ACN9B;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,gCAAgC;AACxD,aAAa,mBAAO,CAAC,sEAAgB;AACrC,aAAa,mBAAO,CAAC,+FAA6B;AAClD,aAAa,mBAAO,CAAC,wFAAY;AACjC,aAAa,mBAAO,CAAC,wFAAY;AACjC,mBAAmB,mBAAO,CAAC,4FAAc;AACzC,4DAA2D,EAAE,qCAAqC,iDAAiD,EAAC;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;;;;;;;;;;;;AC5E1D;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC;AAChC,yBAAyB,mBAAO,CAAC,sEAAgB;AACjD;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gCAAgC;;;;;;;;;;;;ACdnB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC,GAAG,iCAAiC,GAAG,2BAA2B,GAAG,4BAA4B,GAAG,wBAAwB,GAAG,wBAAwB;AACvL,yBAAyB,mBAAO,CAAC,sEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,gCAAgC;;;;;;;;;;;;AC3CnB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yCAAyC,GAAG,yCAAyC,GAAG,mCAAmC;AAC3H,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wEAAwE,mCAAmC,KAAK;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oFAAoF,yCAAyC,KAAK;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oFAAoF,yCAAyC,KAAK;;;;;;;;;;;;ACzCtH;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC,GAAG,4BAA4B;AAC/D,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA,yBAAyB,2BAA2B;AACpD,wBAAwB,2CAA2C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA,yBAAyB,+BAA+B;AACxD,wBAAwB,2CAA2C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;;;;;;;;;;;;AC/B3F;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;;;;;;;;;;;;ACvB/E;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;;;;;;;;;;;;ACtBzE;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC,GAAG,kCAAkC,GAAG,iCAAiC,GAAG,oCAAoC,GAAG,wCAAwC;AAC3L,yBAAyB,mBAAO,CAAC,sEAAgB;AACjD,WAAW,mBAAO,CAAC,wFAAY;AAC/B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF,wCAAwC,KAAK;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E,oCAAoC,KAAK;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;;;;;;;;;;;;ACzE3F;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B,GAAG,kCAAkC,GAAG,kCAAkC,GAAG,8BAA8B,GAAG,kCAAkC,GAAG,8BAA8B,GAAG,gCAAgC;AAClP,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA,IAAI,iCAAiC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA,IAAI,uCAAuC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF,uCAAuC,KAAK;AAC7H;AACA;AACA,IAAI,+BAA+B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA,sCAAsC;AACtC,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sFAAsF,0CAA0C,KAAK;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF,uCAAuC,KAAK;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oFAAoF,yCAAyC,KAAK;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF,wCAAwC,KAAK;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF,uCAAuC,KAAK;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF,wCAAwC,KAAK;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0FAA0F,4CAA4C,KAAK;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oFAAoF,yCAAyC,KAAK;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC,iBAAiB,KAAK;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA,yBAAyB,4BAA4B;AACrD,eAAe,uCAAuC,IAAI;AAC1D;AACA;AACA,iDAAiD;AACjD,QAAQ,oDAAoD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA,yBAAyB,sBAAsB;AAC/C,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA,yBAAyB,4BAA4B;AACrD,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA,2DAA2D;AAC3D,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA,SAAS,uBAAuB;AAChC,IAAI,2BAA2B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA,yBAAyB,8BAA8B;AACvD,wBAAwB,6CAA6C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA,yBAAyB,kBAAkB;AAC3C,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA,WAAW,4BAA4B;AACvC,YAAY,6CAA6C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E,qCAAqC,KAAK;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF;AACA;AACA,yBAAyB,oBAAoB;AAC7C,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF,uCAAuC,KAAK;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E,qCAAqC,KAAK;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;;;;;;;;;;;;AC15B9F;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC;AACjC,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;;;;;;;;;;;;AClB9F;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,GAAG,mBAAmB,GAAG,uBAAuB;AACtE,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA,qCAAqC,iCAAiC;AACtE,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;;;;;;;;;;;;ACnE7D;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4CAA4C,GAAG,2CAA2C,GAAG,6CAA6C,GAAG,+BAA+B,GAAG,2CAA2C,GAAG,4CAA4C,GAAG,wBAAwB,GAAG,oBAAoB,GAAG,wBAAwB,GAAG,wBAAwB;AACjX,sCAAsC,mBAAO,CAAC,+FAA6B;AAC3E,WAAW,mBAAO,CAAC,wFAAY;AAC/B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA,CAAC,0FAA0F,4CAA4C,KAAK;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF,2CAA2C,KAAK;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4FAA4F,6CAA6C,KAAK;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF,2CAA2C,KAAK;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0FAA0F,4CAA4C,KAAK;;;;;;;;;;;;ACrN/H;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0CAA0C,GAAG,qCAAqC,GAAG,wBAAwB;AAC7G,yBAAyB,mBAAO,CAAC,sEAAgB;AACjD,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E,qCAAqC,KAAK;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sFAAsF,0CAA0C,KAAK;;;;;;;;;;;;ACpCzH;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA,yBAAyB,2BAA2B;AACpD,wBAAwB,uCAAuC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;;;;;;;;;;;;ACnBlF;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oCAAoC,GAAG,kCAAkC,GAAG,kCAAkC,GAAG,6BAA6B,GAAG,sCAAsC,GAAG,mBAAmB;AAC7M,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E,oCAAoC,KAAK;;;;;;;;;;;;ACxDvG;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;;;;;;;;;;;;ACrB5E;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;;;;;;;;;;;;ACrBlF;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oCAAoC,GAAG,sCAAsC,GAAG,mCAAmC;AACnH,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wEAAwE,mCAAmC,KAAK;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E,oCAAoC,KAAK;;;;;;;;;;;;ACzCvG;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6CAA6C,GAAG,+BAA+B;AAC/E,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4FAA4F,6CAA6C,KAAK;;;;;;;;;;;;AC1B/I;AACA;AACA;AACA;AACa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,aAAa,GAAG,YAAY,GAAG,aAAa,GAAG,cAAc,GAAG,cAAc,GAAG,eAAe;AACnK;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;;AC7CR;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC;AAChC,eAAe,mBAAO,CAAC,kEAAqB;AAC5C,aAAa,mBAAO,CAAC,kEAAqB;AAC1C,aAAa,mBAAO,CAAC,sFAAe;AACpC;AACA;AACA;AACA,gCAAgC;;;;;;;;;;;;AC3BhC;AACA;AACA;AACA;AACa;;AAEb,6HAA2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN3C;AACA;AACA;AACA;AACa;AACN;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AAC5B;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB;AACZ;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AACpB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA,IAAI,gBAAgB;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA,IAAI,aAAa;AACjB;AACO;AACP;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,aAAa;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA,IAAI,gBAAgB;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA,IAAI,oBAAoB;AACxB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,oBAAoB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA,IAAI,aAAa;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,aAAa;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA,IAAI,wBAAwB;AAC5B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA,IAAI,yBAAyB;AAC7B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA,IAAI,oBAAoB;AACxB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,oBAAoB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA,IAAI,oCAAoC;AACxC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,oCAAoC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA,IAAI,kBAAkB;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,kBAAkB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA,IAAI,eAAe;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AACtB;AACP;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AAC1D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjlC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD;AACA;AACA,IAAI,uCAAuC;AAC3C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,uCAAuC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E;AAC3E;AACA;AACA,IAAI,+CAA+C;AACnD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,+CAA+C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0FAA0F;AAC3F;AACA;AACA,IAAI,wBAAwB;AAC5B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,kBAAkB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA,uDAAuD,qBAAqB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,yBAAyB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB;AACnE;AACA;AACA;AACA,uDAAuD,oBAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA,uDAAuD,aAAa;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA,IAAI,4BAA4B;AAChC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6CAA6C,IAAI;AAClF;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA,IAAI,4BAA4B;AAChC;AACO;AACP;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA,IAAI,yBAAyB;AAC7B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oCAAoC;AACpD,gBAAgB,oCAAoC;AACpD;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sBAAsB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA,IAAI,yBAAyB;AAC7B;AACO;AACP;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,yBAAyB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA,IAAI,gBAAgB;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA,IAAI,yBAAyB;AAC7B;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,yBAAyB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA,IAAI,oBAAoB;AACxB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,oBAAoB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D;AAC/D;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yDAAyD,0BAA0B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AAChC;AACP;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AAC1C;AACP;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qBAAqB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;;;;;;;;;;;;AC/pEJ;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,yBAAyB,GAAG,qBAAqB,GAAG,6BAA6B;AAC5G,yBAAyB,mBAAO,CAAC,2FAAkB;AACnD,yDAAwD,EAAE,qCAAqC,kDAAkD,EAAC;AAClJ,aAAa,mBAAO,CAAC,uGAAiC;AACtD,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD,iDAAgD,EAAE,qCAAqC,yCAAyC,EAAC;AACjI,mBAAmB,mBAAO,CAAC,+EAAY;AACvC,qDAAoD,EAAE,qCAAqC,wCAAwC,EAAC;AACpI,aAAa,mBAAO,CAAC,2EAAU;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;;;;;;;;;;;;AClChF;AACA;AACA;AACA;AACa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;;ACjCf;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,WAAW,mBAAO,CAAC,+EAAY;AAC/B;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;;ACrCf;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;;AC7BZ;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;;AC1C7B;AACA;AACA;AACA;AACa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;;AC7BxB;AACA;AACA;AACA;AACa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,0BAA0B;;;;;;;;;;;;ACxBb;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iCAAiC;;;;;;;;;;;;ACjBjC;AACA;AACA;AACA;AACa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;;ACtBtB;AACA;AACA;AACA;AACa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,2BAA2B;AACvD,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,0EAA0E,+BAA+B;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,+BAA+B;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,gCAAgC;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,gCAAgC;AAC9F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,oBAAoB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,qBAAqB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oCAAoC;AACxE;AACA;AACA;AACA,wCAAwC,0BAA0B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,mFAAmF;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2BAA2B;AACjE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,gCAAgC;AAC/F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0EAA0E,0DAA0D;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;;AC3PZ;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,uBAAuB,GAAG,sBAAsB;AAC9E,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,eAAe,mBAAO,CAAC,mFAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,aAAa;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0HAA0H,OAAO;AACjI;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;;;;;;;;;;;AC9Jd;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B,GAAG,0BAA0B,GAAG,6BAA6B;AAC1F,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;;ACzJhB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,uBAAuB,GAAG,gCAAgC,GAAG,gCAAgC,GAAG,gCAAgC,GAAG,6BAA6B,GAAG,6BAA6B,GAAG,6BAA6B,GAAG,gCAAgC,GAAG,8BAA8B,GAAG,sBAAsB,GAAG,sBAAsB,GAAG,0BAA0B,GAAG,wBAAwB,GAAG,2BAA2B;AACvc,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,WAAW,mBAAO,CAAC,+EAAY;AAC/B,aAAa,mBAAO,CAAC,mFAAc;AACnC,mBAAmB,mBAAO,CAAC,+EAAY;AACvC,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD,0BAA0B,mBAAO,CAAC,6FAAmB;AACrD,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD,yBAAyB,mBAAO,CAAC,2FAAkB;AACnD,uBAAuB,mBAAO,CAAC,uFAAgB;AAC/C,yBAAyB,mBAAO,CAAC,2FAAkB;AACnD,6BAA6B,mBAAO,CAAC,mGAAsB;AAC3D,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD,sBAAsB,mBAAO,CAAC,qFAAe;AAC7C,oBAAoB,mBAAO,CAAC,iFAAa;AACzC,qBAAqB,mBAAO,CAAC,mFAAc;AAC3C,mBAAmB,mBAAO,CAAC,+EAAY;AACvC,kBAAkB,mBAAO,CAAC,6EAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iHAAiH,eAAe;AAChI;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gFAAgF,mBAAmB;AACnG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAoD;AAClF;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA,SAAS;AACT,4EAA4E,QAAQ;AACpF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAoD;AAClF;AACA;AACA;AACA,gEAAgE,kEAAkE,IAAI,YAAY;AAClJ,aAAa;AACb,SAAS;AACT,4EAA4E,QAAQ;AACpF;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA,+EAA+E,IAAI;AACnF,SAAS;AACT;AACA;AACA;AACA;AACA,2GAA2G,SAAS,qDAAqD;AACzK,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,gBAAgB;AACxC,0BAA0B,mBAAmB;AAC7C,uBAAuB,gBAAgB;AACvC,uBAAuB,gBAAgB;AACvC,uBAAuB,sBAAsB;AAC7C,0BAA0B,mBAAmB;AAC7C,0BAA0B,mBAAmB;AAC7C,0BAA0B,mBAAmaAAa;AACb;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;;;;;;;;;;;;AC5uBX;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;;;;;;;;;;;ACfd;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,yCAAyC,mBAAO,CAAC,sGAAgC;AACjrD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,sEAAsE,QAAQ;AAC9E;AACA;AACA;AACA;AACA;AACA,8DAA8D,0BAA0B;AACxF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sDAAsD,0BAA0B;AAChF;AACA,SAAS;AACT;AACA;AACA;AACA,sDAAsD,gDAAgD;AACtG;AACA,SAAS;AACT;AACA;AACA;AACA,+DAA+D,gDAAgD;AAC/G;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qDAAqD,0BAA0B;AAC/E;AACA,SAAS;AACT,0EAA0E,0DAA0D;AACpI;AACA;AACA,qBAAqB;;;;;;;;;;;;AC3KrB;AACA;AACA;AACA;AACa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;;ACjCf;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,aAAa,GAAG,YAAY,GAAG,aAAa,GAAG,cAAc,GAAG,cAAc,GAAG,eAAe;AAC9J;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;;AC1CH;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,aAAa,GAAG,cAAc,GAAG,UAAU,GAAG,aAAa;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,UAAU;AACV,gCAAgC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AACnF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;;AChGpB;AACA;AACA;AACA;AACa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B;AAC/B,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;;;;;;;;;;;AC3ClB;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,kBAAkB,GAAG,6BAA6B,GAAG,6BAA6B,GAAG,eAAe,GAAG,qBAAqB;AACxJ,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,WAAW,mBAAO,CAAC,cAAI;AACvB,wBAAwB,mBAAO,CAAC,oCAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC;AACtC,yBAAyB;AACzB,mBAAmB;AACnB,UAAU;AACV,+BAA+B;AAC/B,aAAa;AACb,oCAAoC;AACpC,iBAAiB,mBAAmB,EAAE;AACtC,UAAU;AACV,oBAAoB;AACpB,iBAAiB,gBAAgB,EAAE;AACnC,UAAU;AACV,UAAU;AACV,UAAU,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,6EAA6E,YAAY;AACzF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,YAAY;AAC9E;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;;ACrQZ;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,aAAa;AACxC,WAAW,mBAAO,CAAC,uFAAoB;AACvC,iBAAiB,mBAAO,CAAC,mFAAkB;AAC3C,WAAW,mBAAO,CAAC,uEAAS;AAC5B,eAAe,mBAAO,CAAC,kGAAqC;AAC5D,aAAa,mBAAO,CAAC,kGAAqC;AAC1D,aAAa,mBAAO,CAAC,6EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;;;;;;;;;ACtPa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,oBAAoB,mBAAO,CAAC,oFAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,IAAI;AAC7B;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;AC1Ba;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,oBAAoB,mBAAO,CAAC,oFAAW;AACvC,qBAAqB,mBAAO,CAAC,kEAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iEAAiE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;;;;;;;;;ACtHa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,GAAG,YAAY,GAAG,eAAe,GAAG,mBAAmB,GAAG,cAAc,GAAG,kBAAkB,GAAG,cAAc,GAAG,gBAAgB,GAAG,YAAY,GAAG,gBAAgB,GAAG,cAAc;AAChM,sBAAsB;AACtB,kBAAkB;AAClB,gBAAgB;AAChB,uBAAuB;AACvB,mBAAmB;AACnB,oBAAoB,mBAAO,CAAC,oFAAW;AACvC,kBAAkB,mBAAO,CAAC,4DAAW;AACrC,uBAAuB,mBAAO,CAAC,sEAAgB;AAC/C,kBAAkB,mBAAO,CAAC,oFAAW;AACrC,0CAAyC,EAAE,qCAAqC,8BAA8B,EAAC;AAC/G,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH,gBAAgB,mBAAO,CAAC,4DAAW;AACnC,wCAAuC,EAAE,qCAAqC,0BAA0B,EAAC;AACzG,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C,4CAA2C,EAAE,qCAAqC,mCAAmC,EAAC;AACtH,kBAAkB,mBAAO,CAAC,gEAAa;AACvC,0CAAyC,EAAE,qCAAqC,8BAA8B,EAAC;AAC/G,6CAA6C;AAC7C;AACA;AACA,yCAAyC;AACzC;AACA;AACA,uCAAuC;AACvC;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,kBAAkB;AAClB,cAAc,+BAA+B,sBAAsB;AACnE,mBAAmB;AACnB,eAAe;AACf;AACA,CAAC;AACD,YAAY;AACZ;AACA;AACA,CAAC;AACD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iBAAiB;AACjB;;;;;;;;;;;ACnEa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf,oBAAoB,mBAAO,CAAC,oFAAW;AACveAAe;AACf;;;;;;;;;;;AC1Na;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,gBAAgB,GAAG,mBAAmB,GAAG,sBAAsB;AACnF,oBAAoB,mBAAO,CAAC,oFAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChiBAAiB;AACjB;;;;;;;;;;;AC5Sa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,kBAAkB,GAAG,gBAAgB;AAC1D;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,gEAAU;AACrC,oBAAoB,mBAAO,CAAC,gEAAa;AACzC,uBAAuB,mBAAO,CAAC,sEAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;;AClYa;AACb;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,4BAA4B,KAAK,IAAI,KAAK,IAAI,IAAI;AAClaAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gCAAgC;AACxC;AACA;AACA;AACA;AACA;AACA,QAAQ,oCAAoC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wCAAwC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oCAAoC;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAQ,yCAAyC;AACjD;AACA;AACA;AACA;AACA;AACA,gBAAgiBAAiB;AACjgBAAgB,+BAA+B,IAAI;AACnD;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+BAA+B,IAAI;AACpD;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kBAAkB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,uCAAuC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,gBAAgB,+GAA+G;AAC/H,cAAc,iCAAiC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0BAA0B;AACtnD;AACA,0BAA0B;AAC1B,gBAAgB,+CAA+C;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA,QAAQ,uCAAuC;AAC/C;AACA,4BAA4B;AAC5B,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8BAA8B,yCAAyC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,iRAAiR;AACjR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,gBAAgB,oCAAoC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,gBAAgB,4HAA4H;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kBAAkB;AACnkBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACzgDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;;;;;;;;;;ACba;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,WAAW;AACX,+BAA+B,mBAAO,CAAC,6GAAwB;AAC/D,sBAAsB,mBAAO,CAAC,2FAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuyCAAyC;AACzaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK,MAAM,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;;;;;;;;;;AC/kBa;AACb;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,KAAK;AACL;AACA,uBAAuB,EAAE,IAAI,GAAG,IAAI,GAAG;AACvC,uBAAuB,EAAE,IAAI,GAAG;AAChC;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,uBAAuB,EAAE,IAAI,EAAE;AAC/B,uBAAuB,GAAG;AAC1B,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,GAAG;AAC1B,sBAAsB,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;;ACvJa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,qBAAqB,gCAAgC,IAAI;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;;;;;;;;;ACrBa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,cAAc,GAAG,WAAW,GAAG,iBAAiB,GAAG,aAAa,GAAG,cAAc,GAAG,mBAAmB,GAAG,gBAAgB,GAAG,cAAc,GAAG,gBAAgB,GAAG,WAAW,GAAG,iBAAiB;AACnN,0CAA0C,mBAAO,CAAC,gEAAiB;AACnE,kCAAkC,mBAAO,CAAC,mHAA2B;AACrE,iBAAiB,mBAAO,CAAC,iFAAU;AACnC,oBAAoB,mBAAO,CAAC,uFAAa;AACzC,sBAAsB,mBAAO,CAAC,2FAAe;AAC7C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,UAAU;AACvB;AACA;AACA,WAAW;AACX,qBAAqB;AACrB,gBAAgB;AAChB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,IAAI;AAC9C;AACA;AACA;AACA,qCAAqC;AACrC,cAAc;AACd,wBAAwB;AACxB,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,SAAS;AACT,kCAAkC;AAClC,gCAAgC;AAChC,sCAAsC;AACtC;AACA,sCAAsC;AACtC,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB,0BAA0B;AAC1B;AACA,KAAK,IAAI;AACT,KAAK,GAAG;AACR,KAAK,KAAK;AACV,KAAK,IAAI,IAAI,EAAE;AACf,KAAK,IAAI,EAAE,IAAI;AACf;AACA;AACA,KAAK,IAAI,OAAO,IAAI;AACpB,KAAK,EAAE,OAAO,EAAE;AAChB,0CAA0C;AAC1C;AACA;AACA;AACA,+BAA+B,QAAQ,MAAM;AAC7C;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,cAAc;AACd,wBAAwB;AACxB,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB;AACvB;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ,iCAAiC;AACzC,QAAQ,2BAA2B;AACnC,QAAQ,8BAA8B;AACtC;AACA,QAAQ,qCAAqC;AAC7C;AACA;AACA,wBAAwB,0BAA0B;AAClD,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAiD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA,wEAAwE,oBAAoB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpiDAAiD,iBAAiB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,eAAe,mBAAO,CAAC,iFAAU;AACjC,uCAAsC,EAAE,qCAAqC,wBAAwB,EAAC;AACtG,kBAAkB,mBAAO,CAAC,uFAAa;AACvC,0CAAyC,EAAE,qCAAqC,8BAA8B,EAAC;AAC/G,oBAAoB,mBAAO,CAAC,2FAAe;AAC3C,4CAA2C,EAAE,qCAAqC,kCAAkC,EAAC;AACrH;AACA,qBAAqB;AACrB,2BAA2B;AAC3B,wBAAwB;AACxB,0BAA0B;AAC1B;;;;;;;;;;;ACx/Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA,kDAAkD,aAAa;AAC/D;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC,IAAI;AAC3D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACvBa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,YAAY,GAAG,wBAAwB,GAAG,uBAAuB,GAAG,uBAAuB,GAAG,sBAAsB,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,qBAAqB,GAAG,oBAAoB;AACnP,oBAAoB,mBAAO,CAAC,oFAAW;AACvC,oBAAoB,mBAAO,CAAC,4BAAW;AACvC,mBAAmB,mBAAO,CAAC,0BAAU;AACrC,aAAa,mBAAO,CAAC,cAAI;AACzB,8BAA8B,mBAAO,CAAC,wBAAS;AAC/C;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,0CAAkB;AAC7C,mBAAmB,mBAAO,CAAC,gEAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChgBAAgqDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyoBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wIAAwI;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sDAAsD,kBAAkB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yDAAyD,IAAI;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA,uBAAuB,EAAE,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA,uBAAuB,EAAE,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAA4D;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAA4D;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,iCAAiC,6BAA6B;AAC9D,0CAA0C,2BAA2B;AACrE;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAA4D;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAA4D;AAC5E,kDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAA4D;AAC5E,kDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,8BAA8B;AAC9B;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,gBAAgB,gBAAgB;AAChC,8CAA8C,iBAAiB;AAC/D;AACA,+BAA+B,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+GAA+G,IAAI;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,IAAI,sBAAsB;AAC1B;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,gBAAgB,iBAAiB;AACjC,6CAA6C,iBAAiB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+GAA+G,IAAI;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,IAAI,sBAAsB;AAC1B;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA,8CAA8C;AAC9C,gBAAgB,gBAAgB;AAChC,qBAAqB,iBAAiB;AACtC;AACA;AACA,wBAAwB;AACxB;AACA,YAAY,gBAAgB;AAC5B;AACA,IAAI,iBAAiB,qBAAqB,iBAAiB;AAC3D;AACA,YAAY;AACZ;AACA,YAAY,sBAAsB;AAClC;AACA,IAAI,uBAAuB,qBAAqB,wBAAwB;AACxE,4BAA4B,uBAAuB;AACnD;AACA,kBAAkB;AAClB;AACA;AACA;;;;;;;;;;;AC/9Da;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,kBAAkB,GAAG,kBAAkB,GAAG,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,gCAAa;AAC3C,sCAAsC,mBAAO,CAAC,gCAAa;AAC3D,8BAA8B,mBAAO,CAAC,gDAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yCAAyC;AACjD,QAAQ,sCAAsC;AAC9C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,yBAAyB;AAC7E;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,8BAA8B;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uBAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uBAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uBAAuB;AAClqBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;;;;;ACngCA,gEAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,2BAA2B;AACvF;AACA,2DAA2D,aAAa;AACxE;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA,6BAA6B,4FAA4F;AACzH;AACA;AACA;AACA,mGAAmG;AACnG;AACA;AACA;AACA;AACA,yEAAyE,8BAA8B;AACvG;AACA;AACA,oDAAoD,kBAAkB,aAAa;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,IAAgC;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,cAAI;AAC/B,yBAAyB,mBAAO,CAAC,kBAAM;AACvC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,cAAc;AACd,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,wEAAwE,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,KAAK;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B;AAC9B,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB,kDAAkD,QAAQ,KAAK,aAAa;AAC5E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,qCAAqC;AACrC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,+BAA+B,KAAK,OAAO,EAAE,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO,OAAO,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB,wDAAwD,QAAQ,KAAK,aAAa;AAClF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,KAAK;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjaAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM,SAAS,IAA6C;AAC5D,MAAM,iCAAO,EAAE,mCAAE,YAAY;AAAA,kGAAC;AAC9B;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjiCAAiC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kCAAkC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpqBAAqB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA,MAAM,0BAA0B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C,0CAA0C,8BAA8B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,qBAAqB;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA,UAAU,iBAAiB,0BAA0B,YAAY;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,aAAa;AACliCAAiC,WAAW;AAC5C;AACA,kCAAkC,WAAW;AAC7C;AACA,oCAAoC,WAAW;AAC/C;AACA,kDAAkD,aAAa;AAC/D;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS,gCAAgC,iBAAiB;AACnG;AACA;AACA;AACA;AACA,8BAA8B,SAAS,uCAAuC,eAAe;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS,gCAAgC,iBAAiB;AACnG;AACA;AACA;AACA;AACA,8BAA8B,SAAS,uCAAuC,eAAe;AAC7F;AACA;AACA;AACA;AACA,+BAA+B,SAAS,sCAAsC,cAAc;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS,yCAAyC,iBAAiB;AAC5G;AACA;AACA;AACA;AACA,8BAA8B,SAAS,uCAAuC,eAAe;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS,qCAAqC,iBAAiB;AACxG;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,iBAAiB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,IAAI;AACJ,iBAAiB,kDAAkD;AACnE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,WAAW,WAAW,KAAK,OAAO,OAAO;AACjG;AACA,0CAA0C,MAAM;AAChD;AACA,0CAA0C,MAAM;AAChD;AACA,0CAA0C,MAAM;AAChD;AACA,0CAA0C,WAAW,WAAW,KAAK,OAAO,OAAO;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA,aAAa,cAAc;AAC3B;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA,aAAa,cAAc;AAC3B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc,2BAA2B,uBAAuB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc,2BAA2B,uBAAuB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc,2BAA2B,uBAAuB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvuBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,aAAa;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,oBAAoB,mBAAO,CAAC,gCAAa;AACzC;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA,gEAAgE,gBAAgB;;AAEhF,EAAE,MAAM;AACR;AACA,SAAS;AACT;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;AACA;AACA;AACA,EAAE,qCAAqC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB;AAC9B,MAAM,wBAAwB,KAAK,8BAA8B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,2CAA2C,QAAQ,wBAAwB,wBAAwB,UAAU,iBAAiB;AAC9H;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA,aAAa,aAAa;AAC1B;AACA,2BAA2B,gBAAgB;AAC3C;AACA,aAAa,cAAc;AAC3B;AACA;AACA,eAAe,aAAa,GAAG,YAAY;AAC3C,6DAA6D,yBAAyB;AACtF;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAWL;AACD;;;;;;;;;;;;;;;;ACt9HA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kFAAkF,gEAAgE;AAClJ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gKAAgK,gEAAgE;AAChO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,gEAAgE;AACjK;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;;;;;;;;;;;;;;;ACpiBlC;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,SAAS;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,oGAAoG,SAAS;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjoCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;;;;;;;UCvQA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA,2FAAuC;AACvC,uGAAqE;AACrE,+EA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","sources":[".././node_modules/@textlint/ast-node-types/module/src/ASTNodeTypes.js",".././node_modules/@textlint/ast-node-types/module/src/index.js",".././node_modules/@textlint/markdown-to-ast/module/src/index.js",".././node_modules/@textlint/markdown-to-ast/module/src/mapping/markdown-syntax-map.js",".././node_modules/@textlint/markdown-to-ast/module/src/parse-markdown.js",".././node_modules/bail/index.js",".././node_modules/balanced-match/index.js",".././node_modules/brace-expansion/index.js",".././node_modules/ccount/index.js",".././node_modules/debug/src/browser.js",".././node_modules/debug/src/common.js",".././node_modules/debug/src/index.js",".././node_modules/debug/src/node.js",".././node_modules/escape-string-regexp/index.js",".././node_modules/extend/index.js",".././node_modules/fault/index.js",".././node_modules/format/format.js",".././node_modules/has-flag/index.js",".././node_modules/is-buffer/index.js",".././node_modules/is-plain-obj/index.js",".././node_modules/markdown-table/index.js",".././node_modules/mdast-util-find-and-replace/index.js",".././node_modules/mdast-util-footnote/from-markdown.js",".././node_modules/mdast-util-footnote/to-markdown.js",".././node_modules/mdast-util-from-markdown/dist/index.js",".././node_modules/mdast-util-from-markdown/index.js",".././node_modules/mdast-util-frontmatter/from-markdown.js",".././node_modules/mdast-util-frontmatter/to-markdown.js",".././node_modules/mdast-util-gfm-autolink-literal/from-markdown.js",".././node_modules/mdast-util-gfm-autolink-literal/to-markdown.js",".././node_modules/mdast-util-gfm-strikethrough/from-markdown.js",".././node_modules/mdast-util-gfm-strikethrough/to-markdown.js",".././node_modules/mdast-util-gfm-table/from-markdown.js",".././node_modules/mdast-util-gfm-table/to-markdown.js",".././node_modules/mdast-util-gfm-task-list-item/from-markdown.js",".././node_modules/mdast-util-gfm-task-list-item/to-markdown.js",".././node_modules/mdast-util-gfm/from-markdown.js",".././node_modules/mdast-util-gfm/to-markdown.js",".././node_modules/mdast-util-to-markdown/lib/configure.js",".././node_modules/mdast-util-to-markdown/lib/handle/inline-code.js",".././node_modules/mdast-util-to-markdown/lib/handle/list-item.js",".././node_modules/mdast-util-to-markdown/lib/util/association.js",".././node_modules/mdast-util-to-markdown/lib/util/check-bullet.js",".././node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js",".././node_modules/mdast-util-to-markdown/lib/util/container-flow.js",".././node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js",".././node_modules/mdast-util-to-markdown/lib/util/indent-lines.js",".././node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js",".././node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js",".././node_modules/mdast-util-to-markdown/lib/util/safe.js",".././node_modules/mdast-util-to-string/index.js",".././node_modules/micromark-extension-footnote/index.js",".././node_modules/micromark-extension-frontmatter/index.js",".././node_modules/micromark-extension-frontmatter/lib/matters.js",".././node_modules/micromark-extension-frontmatter/lib/syntax.js",".././node_modules/micromark-extension-gfm-autolink-literal/index.js",".././node_modules/micromark-extension-gfm-autolink-literal/syntax.js",".././node_modules/micromark-extension-gfm-strikethrough/index.js",".././node_modules/micromark-extension-gfm-table/index.js",".././node_modules/micromark-extension-gfm-table/syntax.js",".././node_modules/micromark-extension-gfm-task-list-item/index.js",".././node_modules/micromark-extension-gfm-task-list-item/syntax.js",".././node_modules/micromark-extension-gfm/index.js",".././node_modules/micromark-extension-gfm/syntax.js",".././node_modules/micromark/dist/character/ascii-alpha.js",".././node_modules/micromark/dist/character/ascii-alphanumeric.js",".././node_modules/micromark/dist/character/ascii-atext.js",".././node_modules/micromark/dist/character/ascii-control.js",".././node_modules/micromark/dist/character/ascii-digit.js",".././node_modules/micromark/dist/character/ascii-hex-digit.js",".././node_modules/micromark/dist/character/ascii-punctuation.js",".././node_modules/micromark/dist/character/markdown-line-ending-or-space.js",".././node_modules/micromark/dist/character/markdown-line-ending.js",".././node_modules/micromark/dist/character/markdown-space.js",".././node_modules/micromark/dist/character/unicode-punctuation.js",".././node_modules/micromark/dist/character/unicode-whitespace.js",".././node_modules/micromark/dist/constant/assign.js",".././node_modules/micromark/dist/constant/from-char-code.js",".././node_modules/micromark/dist/constant/has-own-property.js",".././node_modules/micromark/dist/constant/html-block-names.js",".././node_modules/micromark/dist/constant/html-raw-names.js",".././node_modules/micromark/dist/constant/splice.js",".././node_modules/micromark/dist/constant/unicode-punctuation-regex.js",".././node_modules/micromark/dist/constructs.js",".././node_modules/micromark/dist/initialize/content.js",".././node_modules/micromark/dist/initialize/document.js",".././node_modules/micromark/dist/initialize/flow.js",".././node_modules/micromark/dist/initialize/text.js",".././node_modules/micromark/dist/parse.js",".././node_modules/micromark/dist/postprocess.js",".././node_modules/micromark/dist/preprocess.js",".././node_modules/micromark/dist/tokenize/attention.js",".././node_modules/micromark/dist/tokenize/autolink.js",".././node_modules/micromark/dist/tokenize/block-quote.js",".././node_modules/micromark/dist/tokenize/character-escape.js",".././node_modules/micromark/dist/tokenize/character-reference.js",".././node_modules/micromark/dist/tokenize/code-fenced.js",".././node_modules/micromark/dist/tokenize/code-indented.js",".././node_modules/micromark/dist/tokenize/code-text.js",".././node_modules/micromark/dist/tokenize/content.js",".././node_modules/micromark/dist/tokenize/definition.js",".././node_modules/micromark/dist/tokenize/factory-destination.js",".././node_modules/micromark/dist/tokenize/factory-label.js",".././node_modules/micromark/dist/tokenize/factory-space.js",".././node_modules/micromark/dist/tokenize/factory-title.js",".././node_modules/micromark/dist/tokenize/factory-whitespace.js",".././node_modules/micromark/dist/tokenize/hard-break-escape.js",".././node_modules/micromark/dist/tokenize/heading-atx.js",".././node_modules/micromark/dist/tokenize/html-flow.js",".././node_modules/micromark/dist/tokenize/html-text.js",".././node_modules/micromark/dist/tokenize/label-end.js",".././node_modules/micromark/dist/tokenize/label-start-image.js",".././node_modules/micromark/dist/tokenize/label-start-link.js",".././node_modules/micromark/dist/tokenize/line-ending.js",".././node_modules/micromark/dist/tokenize/list.js",".././node_modules/micromark/dist/tokenize/partial-blank-line.js",".././node_modules/micromark/dist/tokenize/setext-underline.js",".././node_modules/micromark/dist/tokenize/thematic-break.js",".././node_modules/micromark/dist/util/chunked-push.js",".././node_modules/micromark/dist/util/chunked-splice.js",".././node_modules/micromark/dist/util/classify-character.js",".././node_modules/micromark/dist/util/combine-extensions.js",".././node_modules/micromark/dist/util/create-tokenizer.js",".././node_modules/micromark/dist/util/miniflat.js",".././node_modules/micromark/dist/util/move-point.js",".././node_modules/micromark/dist/util/normalize-identifier.js",".././node_modules/micromark/dist/util/prefix-size.js",".././node_modules/micromark/dist/util/regex-check.js",".././node_modules/micromark/dist/util/resolve-all.js",".././node_modules/micromark/dist/util/safe-from-int.js",".././node_modules/micromark/dist/util/serialize-chunks.js",".././node_modules/micromark/dist/util/shallow.js",".././node_modules/micromark/dist/util/size-chunks.js",".././node_modules/micromark/dist/util/slice-chunks.js",".././node_modules/micromark/dist/util/subtokenize.js",".././node_modules/ms/index.js",".././node_modules/parse-entities/decode-entity.js",".././node_modules/remark-footnotes/index.js",".././node_modules/remark-frontmatter/index.js",".././node_modules/remark-gfm/index.js",".././node_modules/remark-parse/index.js",".././node_modules/repeat-string/index.js",".././node_modules/supports-color/index.js",".././node_modules/trough/index.js",".././node_modules/trough/wrap.js",".././server/src/TypeInferer.ts",".././server/src/asm/gas.ts",".././server/src/cache.ts",".././server/src/compiler/MistiAnalyzer.ts",".././server/src/compiler/TactCompiler.ts",".././server/src/compiler/utils.ts",".././server/src/completion/CompletionContext.ts",".././server/src/completion/ReferenceCompletionProcessor.ts",".././server/src/completion/WeightedCompletionItem.ts",".././server/src/completion/data/types.ts",".././server/src/completion/providers/AsKeywordCompletionProvider.ts",".././server/src/completion/providers/AsmInstructionCompletionProvider.ts",".././server/src/completion/providers/BouncedTypeCompletionProvider.ts",".././server/src/completion/providers/ContractDeclCompletionProvider.ts",".././server/src/completion/providers/GetterCompletionProvider.ts",".././server/src/completion/providers/ImportPathCompletionProvider.ts",".././server/src/completion/providers/KeywordsCompletionProvider.ts",".././server/src/completion/providers/MapTypeCompletionProvider.ts",".././server/src/completion/providers/MemberFunctionCompletionProvider.ts",".././server/src/completion/providers/MessageMethodCompletionProvider.ts",".././server/src/completion/providers/OverrideCompletionProvider.ts",".././server/src/completion/providers/PostfixCompletionProvider.ts",".././server/src/completion/providers/ReferenceCompletionProvider.ts",".././server/src/completion/providers/ReturnCompletionProvider.ts",".././server/src/completion/providers/SelfCompletionProvider.ts",".././server/src/completion/providers/SnippetsCompletionProvider.ts",".././server/src/completion/providers/TlbSerializationCompletionProvider.ts",".././server/src/completion/providers/TopLevelCompletionProvider.ts",".././server/src/completion/providers/TopLevelFunctionCompletionProvider.ts",".././server/src/completion/providers/TraitOrContractConstantsCompletionProvider.ts",".././server/src/completion/providers/TraitOrContractFieldsCompletionProvider.ts",".././server/src/completion/providers/TypeTlbSerializationCompletionProvider.ts",".././server/src/connection.ts",".././server/src/document-store.ts",".././server/src/documentation/asm_documentation.ts",".././server/src/documentation/documentation.ts",".././server/src/documentation/exit_code_documentation.ts",".././server/src/documentation/keywords_documentation.ts",".././server/src/documentation/receivers_documentation.ts",".././server/src/documentation/tlb_type_documentation.ts",".././server/src/fift/documentation/documentation.ts",".././server/src/fift/foldings/collect.ts",".././server/src/fift/inlays/collect.ts",".././server/src/fift/psi/FiftReference.ts",".././server/src/fift/psi/FiftReferent.ts",".././server/src/fift/semantic_tokens/collect.ts",".././server/src/foldings/collect.ts",".././server/src/indexes/index.ts",".././server/src/indexing-root.ts",".././server/src/inlays/collect.ts",".././server/src/inspections/CompilerInspection.ts",".././server/src/inspections/DontUseDeployableInspection.ts",".././server/src/inspections/DontUseTextReceiversInspection.ts",".././server/src/inspections/EmptyBlockInspection.ts",".././server/src/inspections/Inspection.ts",".././server/src/inspections/MissedFieldInContractInspection.ts",".././server/src/inspections/MistInspection.ts",".././server/src/inspections/NotImportedSymbolInspection.ts",".././server/src/inspections/RewriteInspection.ts",".././server/src/inspections/StructInitializationInspection.ts",".././server/src/inspections/UnusedContractMembersInspection.ts",".././server/src/inspections/UnusedImportInspection.ts",".././server/src/inspections/UnusedInspection.ts",".././server/src/inspections/UnusedParameterInspection.ts",".././server/src/inspections/UnusedVariableInspection.ts",".././server/src/intentions/AddExplicitType.ts",".././server/src/intentions/AddFieldInitialization.ts",".././server/src/intentions/AddImport.ts",".././server/src/intentions/FillFieldsStructInit.ts",".././server/src/intentions/ReplaceTextReceiverWithBinary.ts",".././server/src/intentions/WrapSelected.ts",".././server/src/lens/collect.ts",".././server/src/parser.ts",".././server/src/psi/Decls.ts",".././server/src/psi/File.ts",".././server/src/psi/ImportResolver.ts",".././server/src/psi/Node.ts",".././server/src/psi/RecursiveVisitor.ts",".././server/src/psi/Reference.ts",".././server/src/psi/Referent.ts",".././server/src/psi/utils.ts",".././server/src/psi/visitor.ts",".././server/src/search/implementations.ts",".././server/src/semantic_tokens/collect.ts",".././server/src/semantic_tokens/comments.ts",".././server/src/semantic_tokens/tokens.ts",".././server/src/semantic_tokens/utils.ts",".././server/src/toolchain.ts",".././server/src/toolchain/toolchain.ts",".././server/src/types/BaseTy.ts",".././server/src/utils/FileDiff.ts",".././server/src/utils/crc16.ts",".././server/src/utils/logger.ts",".././server/src/utils/position.ts",".././server/src/utils/settings.ts",".././server/src/utils/strings.ts",".././server/src/vfs/vfs.ts",".././shared/src/shared-msgtypes.ts",".././node_modules/unified/index.js",".././node_modules/unist-util-is/convert.js",".././node_modules/unist-util-stringify-position/index.js",".././node_modules/unist-util-visit-parents/color.js",".././node_modules/unist-util-visit-parents/index.js",".././node_modules/vfile-message/index.js",".././node_modules/vfile/index.js",".././node_modules/vfile/lib/core.js",".././node_modules/vfile/lib/index.js",".././node_modules/vfile/lib/minpath.js",".././node_modules/vfile/lib/minproc.js",".././node_modules/vscode-jsonrpc/lib/common/api.js",".././node_modules/vscode-jsonrpc/lib/common/cancellation.js",".././node_modules/vscode-jsonrpc/lib/common/connection.js",".././node_modules/vscode-jsonrpc/lib/common/disposable.js",".././node_modules/vscode-jsonrpc/lib/common/events.js",".././node_modules/vscode-jsonrpc/lib/common/is.js",".././node_modules/vscode-jsonrpc/lib/common/linkedMap.js",".././node_modules/vscode-jsonrpc/lib/common/messageBuffer.js",".././node_modules/vscode-jsonrpc/lib/common/messageReader.js",".././node_modules/vscode-jsonrpc/lib/common/messageWriter.js",".././node_modules/vscode-jsonrpc/lib/common/messages.js",".././node_modules/vscode-jsonrpc/lib/common/ral.js",".././node_modules/vscode-jsonrpc/lib/common/semaphore.js",".././node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js",".././node_modules/vscode-jsonrpc/lib/node/main.js",".././node_modules/vscode-jsonrpc/lib/node/ril.js",".././node_modules/vscode-jsonrpc/node.js",".././node_modules/vscode-languageserver-protocol/lib/common/api.js",".././node_modules/vscode-languageserver-protocol/lib/common/connection.js",".././node_modules/vscode-languageserver-protocol/lib/common/messages.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.diagnostic.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.inlayHint.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.inlineValue.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.notebook.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.typeHierarchy.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolder.js",".././node_modules/vscode-languageserver-protocol/lib/common/utils/is.js",".././node_modules/vscode-languageserver-protocol/lib/node/main.js",".././node_modules/vscode-languageserver-protocol/node.js",".././node_modules/vscode-languageserver-types/lib/esm/main.js",".././node_modules/vscode-languageserver/lib/common/api.js",".././node_modules/vscode-languageserver/lib/common/callHierarchy.js",".././node_modules/vscode-languageserver/lib/common/configuration.js",".././node_modules/vscode-languageserver/lib/common/diagnostic.js",".././node_modules/vscode-languageserver/lib/common/fileOperations.js",".././node_modules/vscode-languageserver/lib/common/inlayHint.js",".././node_modules/vscode-languageserver/lib/common/inlineValue.js",".././node_modules/vscode-languageserver/lib/common/linkedEditingRange.js",".././node_modules/vscode-languageserver/lib/common/moniker.js",".././node_modules/vscode-languageserver/lib/common/notebook.js",".././node_modules/vscode-languageserver/lib/common/progress.js",".././node_modules/vscode-languageserver/lib/common/semanticTokens.js",".././node_modules/vscode-languageserver/lib/common/server.js",".././node_modules/vscode-languageserver/lib/common/showDocument.js",".././node_modules/vscode-languageserver/lib/common/textDocuments.js",".././node_modules/vscode-languageserver/lib/common/typeHierarchy.js",".././node_modules/vscode-languageserver/lib/common/utils/is.js",".././node_modules/vscode-languageserver/lib/common/utils/uuid.js",".././node_modules/vscode-languageserver/lib/common/workspaceFolder.js",".././node_modules/vscode-languageserver/lib/node/files.js",".././node_modules/vscode-languageserver/lib/node/main.js",".././node_modules/vscode-languageserver/node.js",".././node_modules/vscode-uri/lib/umd/index.js","../external node-commonjs \"child_process\"","../external node-commonjs \"crypto\"","../external node-commonjs \"fs\"","../external node-commonjs \"fs/promises\"","../external node-commonjs \"net\"","../external node-commonjs \"node:child_process\"","../external node-commonjs \"node:console\"","../external node-commonjs \"node:crypto\"","../external node-commonjs \"node:events\"","../external node-commonjs \"node:fs\"","../external node-commonjs \"node:fs/promises\"","../external node-commonjs \"node:path\"","../external node-commonjs \"node:stream\"","../external node-commonjs \"node:string_decoder\"","../external node-commonjs \"node:url\"","../external node-commonjs \"os\"","../external node-commonjs \"path\"","../external node-commonjs \"tty\"","../external node-commonjs \"url\"","../external node-commonjs \"util\"",".././node_modules/glob/dist/commonjs/glob.js",".././node_modules/glob/dist/commonjs/has-magic.js",".././node_modules/glob/dist/commonjs/ignore.js",".././node_modules/glob/dist/commonjs/index.js",".././node_modules/glob/dist/commonjs/pattern.js",".././node_modules/glob/dist/commonjs/processor.js",".././node_modules/glob/dist/commonjs/walker.js",".././node_modules/glob/node_modules/lru-cache/dist/commonjs/index.js",".././node_modules/glob/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js",".././node_modules/glob/node_modules/minimatch/dist/commonjs/ast.js",".././node_modules/glob/node_modules/minimatch/dist/commonjs/brace-expressions.js",".././node_modules/glob/node_modules/minimatch/dist/commonjs/escape.js",".././node_modules/glob/node_modules/minimatch/dist/commonjs/index.js",".././node_modules/glob/node_modules/minimatch/dist/commonjs/unescape.js",".././node_modules/glob/node_modules/path-scurry/dist/commonjs/index.js",".././node_modules/minipass/dist/commonjs/index.js",".././node_modules/web-tree-sitter/tree-sitter.cjs",".././node_modules/neotraverse/dist/legacy/legacy.mjs",".././node_modules/vscode-languageserver-textdocument/lib/esm/main.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object",".././server/src/server.ts"],"sourcesContent":["// Notes: Add new Node types\n// 1. Add new Node type to ASTNodeTypes\n// 2. Update txtnode.md\n// 3. Add test to packages/@textlint/types/test/Rule/TxtNode-test.ts\n/**\n * ASTNodeTypes is a list of ASTNode type.\n */\nexport var ASTNodeTypes;\n(function (ASTNodeTypes) {\n    ASTNodeTypes[\"Document\"] = \"Document\";\n    ASTNodeTypes[\"DocumentExit\"] = \"Document:exit\";\n    ASTNodeTypes[\"Paragraph\"] = \"Paragraph\";\n    ASTNodeTypes[\"ParagraphExit\"] = \"Paragraph:exit\";\n    ASTNodeTypes[\"BlockQuote\"] = \"BlockQuote\";\n    ASTNodeTypes[\"BlockQuoteExit\"] = \"BlockQuote:exit\";\n    ASTNodeTypes[\"ListItem\"] = \"ListItem\";\n    ASTNodeTypes[\"ListItemExit\"] = \"ListItem:exit\";\n    ASTNodeTypes[\"List\"] = \"List\";\n    ASTNodeTypes[\"ListExit\"] = \"List:exit\";\n    ASTNodeTypes[\"Header\"] = \"Header\";\n    ASTNodeTypes[\"HeaderExit\"] = \"Header:exit\";\n    ASTNodeTypes[\"CodeBlock\"] = \"CodeBlock\";\n    ASTNodeTypes[\"CodeBlockExit\"] = \"CodeBlock:exit\";\n    /**\n     * @deprecated use Html instead of it\n     */\n    ASTNodeTypes[\"HtmlBlock\"] = \"HtmlBlock\";\n    ASTNodeTypes[\"HtmlBlockExit\"] = \"HtmlBlock:exit\";\n    ASTNodeTypes[\"HorizontalRule\"] = \"HorizontalRule\";\n    ASTNodeTypes[\"HorizontalRuleExit\"] = \"HorizontalRule:exit\";\n    ASTNodeTypes[\"Comment\"] = \"Comment\";\n    ASTNodeTypes[\"CommentExit\"] = \"Comment:exit\";\n    /**\n     * @deprecated\n     */\n    ASTNodeTypes[\"ReferenceDef\"] = \"ReferenceDef\";\n    /**\n     * @deprecated\n     */\n    ASTNodeTypes[\"ReferenceDefExit\"] = \"ReferenceDef:exit\";\n    // inline\n    ASTNodeTypes[\"Str\"] = \"Str\";\n    ASTNodeTypes[\"StrExit\"] = \"Str:exit\";\n    ASTNodeTypes[\"Break\"] = \"Break\";\n    ASTNodeTypes[\"BreakExit\"] = \"Break:exit\";\n    ASTNodeTypes[\"Emphasis\"] = \"Emphasis\";\n    ASTNodeTypes[\"EmphasisExit\"] = \"Emphasis:exit\";\n    ASTNodeTypes[\"Strong\"] = \"Strong\";\n    ASTNodeTypes[\"StrongExit\"] = \"Strong:exit\";\n    ASTNodeTypes[\"Html\"] = \"Html\";\n    ASTNodeTypes[\"HtmlExit\"] = \"Html:exit\";\n    ASTNodeTypes[\"Link\"] = \"Link\";\n    ASTNodeTypes[\"LinkExit\"] = \"Link:exit\";\n    ASTNodeTypes[\"Image\"] = \"Image\";\n    ASTNodeTypes[\"ImageExit\"] = \"Image:exit\";\n    ASTNodeTypes[\"Code\"] = \"Code\";\n    ASTNodeTypes[\"CodeExit\"] = \"Code:exit\";\n    ASTNodeTypes[\"Delete\"] = \"Delete\";\n    ASTNodeTypes[\"DeleteExit\"] = \"Delete:exit\";\n    // Table is supported in textlint v13+\n    ASTNodeTypes[\"Table\"] = \"Table\";\n    ASTNodeTypes[\"TableExit\"] = \"Table:exit\";\n    ASTNodeTypes[\"TableRow\"] = \"TableRow\";\n    ASTNodeTypes[\"TableRowExit\"] = \"TableRow:exit\";\n    ASTNodeTypes[\"TableCell\"] = \"TableCell\";\n    ASTNodeTypes[\"TableCellExit\"] = \"TableCell:exit\";\n})(ASTNodeTypes || (ASTNodeTypes = {}));\n//# sourceMappingURL=ASTNodeTypes.js.map","export { ASTNodeTypes } from \"./ASTNodeTypes\";\n//# sourceMappingURL=index.js.map","import { SyntaxMap } from \"./mapping/markdown-syntax-map\";\nimport { ASTNodeTypes } from \"@textlint/ast-node-types\";\nimport traverse from \"neotraverse/legacy\";\nimport debug0 from \"debug\";\nimport { parseMarkdown } from \"./parse-markdown\";\nconst debug = debug0(\"@textlint/markdown-to-ast\");\nexport { ASTNodeTypes as Syntax };\n/**\n * parse Markdown text and return ast mapped location info.\n * @param {string} text\n */\nexport function parse(text) {\n    // remark-parse's AST does not consider BOM\n    // AST's position does not +1 by BOM\n    // So, just trim BOM and parse it for `raw` property\n    // textlint's SourceCode also take same approach - trim BOM and check the position\n    // This means that the loading side need to consider BOM position - for example fs.readFile and text slice script.\n    // https://github.com/micromark/micromark/blob/0f19c1ac25964872a160d8b536878b125ddfe393/lib/preprocess.mjs#L29-L31\n    const hasBOM = text.charCodeAt(0) === 0xfeff;\n    const textWithoutBOM = hasBOM ? text.slice(1) : text;\n    const ast = parseMarkdown(textWithoutBOM);\n    traverse(ast).forEach(function (node) {\n        // eslint-disable-next-line no-invalid-this\n        if (this.notLeaf) {\n            if (node.type) {\n                const replacedType = SyntaxMap[node.type];\n                if (!replacedType) {\n                    debug(`replacedType : ${replacedType} , node.type: ${node.type}`);\n                }\n                else {\n                    node.type = replacedType;\n                }\n            }\n            // map `range`, `loc` and `raw` to node\n            if (node.position) {\n                const position = node.position;\n                // line start with 1\n                // column start with 0\n                const positionCompensated = {\n                    start: { line: position.start.line, column: Math.max(position.start.column - 1, 0) },\n                    end: { line: position.end.line, column: Math.max(position.end.column - 1, 0) }\n                };\n                const range = [position.start.offset, position.end.offset];\n                node.loc = positionCompensated;\n                node.range = range;\n                node.raw = textWithoutBOM.slice(range[0], range[1]);\n                // Compatible for https://github.com/syntax-tree/unist, but it is hidden\n                Object.defineProperty(node, \"position\", {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: position\n                });\n            }\n        }\n    });\n    return ast;\n}\n//# sourceMappingURL=index.js.map","// LICENSE : MIT\n\"use strict\";\nimport { ASTNodeTypes } from \"@textlint/ast-node-types\";\nexport const SyntaxMap = {\n    root: ASTNodeTypes.Document,\n    paragraph: ASTNodeTypes.Paragraph,\n    blockquote: ASTNodeTypes.BlockQuote,\n    listItem: ASTNodeTypes.ListItem,\n    list: ASTNodeTypes.List,\n    Bullet: \"Bullet\", // no need?\n    heading: ASTNodeTypes.Header,\n    code: ASTNodeTypes.CodeBlock,\n    HtmlBlock: ASTNodeTypes.HtmlBlock,\n    thematicBreak: ASTNodeTypes.HorizontalRule,\n    // inline block\n    text: ASTNodeTypes.Str,\n    break: ASTNodeTypes.Break,\n    emphasis: ASTNodeTypes.Emphasis,\n    strong: ASTNodeTypes.Strong,\n    html: ASTNodeTypes.Html,\n    link: ASTNodeTypes.Link,\n    image: ASTNodeTypes.Image,\n    inlineCode: ASTNodeTypes.Code,\n    delete: ASTNodeTypes.Delete,\n    // remark(markdown) extension\n    // Following type is not in @textlint/ast-node-types\n    yaml: \"Yaml\",\n    table: \"Table\",\n    tableRow: \"TableRow\",\n    tableCell: \"TableCell\",\n    linkReference: \"LinkReference\",\n    imageReference: \"ImageReference\",\n    footnoteReference: \"FootnoteReference\", // textlint@12+\n    definition: \"Definition\",\n    /**\n     * @deprecated\n     */\n    ReferenceDef: ASTNodeTypes.ReferenceDef\n};\n//# sourceMappingURL=markdown-syntax-map.js.map","import unified from \"unified\";\n// @ts-ignore\nimport autolinkLiteral from \"mdast-util-gfm-autolink-literal/from-markdown\";\n// FIXME: Disable auto link literal transforms that break AST node\n// https://github.com/remarkjs/remark-gfm/issues/16\n// Need to override before import gfm plugin\nautolinkLiteral.transforms = [];\n// Load plugins\nimport remarkGfm from \"remark-gfm\";\nimport remarkParse from \"remark-parse\";\nimport frontmatter from \"remark-frontmatter\";\nimport footnotes from \"remark-footnotes\";\nconst remark = unified().use(remarkParse).use(frontmatter, [\"yaml\"]).use(remarkGfm).use(footnotes, {\n    inlineNotes: true\n});\nexport const parseMarkdown = (text) => {\n    return remark.parse(text);\n};\n//# sourceMappingURL=parse-markdown.js.map","'use strict'\n\nmodule.exports = bail\n\nfunction bail(err) {\n  if (err) {\n    throw err\n  }\n}\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n","'use strict'\n\nmodule.exports = ccount\n\nfunction ccount(source, character) {\n  var value = String(source)\n  var count = 0\n  var index\n\n  if (typeof character !== 'string') {\n    throw new Error('Expected character')\n  }\n\n  index = value.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = value.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict'\n\nvar formatter = require('format')\n\nvar fault = create(Error)\n\nmodule.exports = fault\n\nfault.eval = create(EvalError)\nfault.range = create(RangeError)\nfault.reference = create(ReferenceError)\nfault.syntax = create(SyntaxError)\nfault.type = create(TypeError)\nfault.uri = create(URIError)\n\nfault.create = create\n\n// Create a new `EConstructor`, with the formatted `format` as a first argument.\nfunction create(EConstructor) {\n  FormattedError.displayName = EConstructor.displayName || EConstructor.name\n\n  return FormattedError\n\n  function FormattedError(format) {\n    if (format) {\n      format = formatter.apply(null, arguments)\n    }\n\n    return new EConstructor(format)\n  }\n}\n","//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = markdownTable\n\nvar trailingWhitespace = / +$/\n\n// Characters.\nvar space = ' '\nvar lineFeed = '\\n'\nvar dash = '-'\nvar colon = ':'\nvar verticalBar = '|'\n\nvar x = 0\nvar C = 67\nvar L = 76\nvar R = 82\nvar c = 99\nvar l = 108\nvar r = 114\n\n// Create a table from a matrix of strings.\nfunction markdownTable(table, options) {\n  var settings = options || {}\n  var padding = settings.padding !== false\n  var start = settings.delimiterStart !== false\n  var end = settings.delimiterEnd !== false\n  var align = (settings.align || []).concat()\n  var alignDelimiters = settings.alignDelimiters !== false\n  var alignments = []\n  var stringLength = settings.stringLength || defaultStringLength\n  var rowIndex = -1\n  var rowLength = table.length\n  var cellMatrix = []\n  var sizeMatrix = []\n  var row = []\n  var sizes = []\n  var longestCellByColumn = []\n  var mostCellsPerRow = 0\n  var cells\n  var columnIndex\n  var columnLength\n  var largest\n  var size\n  var cell\n  var lines\n  var line\n  var before\n  var after\n  var code\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < rowLength) {\n    cells = table[rowIndex]\n    columnIndex = -1\n    columnLength = cells.length\n    row = []\n    sizes = []\n\n    if (columnLength > mostCellsPerRow) {\n      mostCellsPerRow = columnLength\n    }\n\n    while (++columnIndex < columnLength) {\n      cell = serialize(cells[columnIndex])\n\n      if (alignDelimiters === true) {\n        size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        largest = longestCellByColumn[columnIndex]\n\n        if (largest === undefined || size > largest) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    code = toAlignment(align)\n\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n  row = []\n  sizes = []\n\n  while (++columnIndex < columnLength) {\n    code = alignments[columnIndex]\n    before = ''\n    after = ''\n\n    if (code === l) {\n      before = colon\n    } else if (code === r) {\n      after = colon\n    } else if (code === c) {\n      before = colon\n      after = colon\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    size = alignDelimiters\n      ? Math.max(\n          1,\n          longestCellByColumn[columnIndex] - before.length - after.length\n        )\n      : 1\n\n    cell = before + repeat(dash, size) + after\n\n    if (alignDelimiters === true) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  rowLength = cellMatrix.length\n  lines = []\n\n  while (++rowIndex < rowLength) {\n    row = cellMatrix[rowIndex]\n    sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    columnLength = mostCellsPerRow\n    line = []\n\n    while (++columnIndex < columnLength) {\n      cell = row[columnIndex] || ''\n      before = ''\n      after = ''\n\n      if (alignDelimiters === true) {\n        size = longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        code = alignments[columnIndex]\n\n        if (code === r) {\n          before = repeat(space, size)\n        } else if (code === c) {\n          if (size % 2 === 0) {\n            before = repeat(space, size / 2)\n            after = before\n          } else {\n            before = repeat(space, size / 2 + 0.5)\n            after = repeat(space, size / 2 - 0.5)\n          }\n        } else {\n          after = repeat(space, size)\n        }\n      }\n\n      if (start === true && columnIndex === 0) {\n        line.push(verticalBar)\n      }\n\n      if (\n        padding === true &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(alignDelimiters === false && cell === '') &&\n        (start === true || columnIndex !== 0)\n      ) {\n        line.push(space)\n      }\n\n      if (alignDelimiters === true) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (alignDelimiters === true) {\n        line.push(after)\n      }\n\n      if (padding === true) {\n        line.push(space)\n      }\n\n      if (end === true || columnIndex !== columnLength - 1) {\n        line.push(verticalBar)\n      }\n    }\n\n    line = line.join('')\n\n    if (end === false) {\n      line = line.replace(trailingWhitespace, '')\n    }\n\n    lines.push(line)\n  }\n\n  return lines.join(lineFeed)\n}\n\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\nfunction defaultStringLength(value) {\n  return value.length\n}\n\nfunction toAlignment(value) {\n  var code = typeof value === 'string' ? value.charCodeAt(0) : x\n\n  return code === L || code === l\n    ? l\n    : code === R || code === r\n    ? r\n    : code === C || code === c\n    ? c\n    : x\n}\n","'use strict'\n\nmodule.exports = findAndReplace\n\nvar visit = require('unist-util-visit-parents')\nvar convert = require('unist-util-is/convert')\nvar escape = require('escape-string-regexp')\n\nvar splice = [].splice\n\nfunction findAndReplace(tree, find, replace, options) {\n  var settings\n  var schema\n\n  if (typeof find === 'string' || (find && typeof find.exec === 'function')) {\n    schema = [[find, replace]]\n  } else {\n    schema = find\n    options = replace\n  }\n\n  settings = options || {}\n\n  search(tree, settings, handlerFactory(toPairs(schema)))\n\n  return tree\n\n  function handlerFactory(pairs) {\n    var pair = pairs[0]\n\n    return handler\n\n    function handler(node, parent) {\n      var find = pair[0]\n      var replace = pair[1]\n      var nodes = []\n      var start = 0\n      var index = parent.children.indexOf(node)\n      var position\n      var match\n      var subhandler\n      var value\n\n      find.lastIndex = 0\n\n      match = find.exec(node.value)\n\n      while (match) {\n        position = match.index\n        value = replace.apply(\n          null,\n          [].concat(match, {index: match.index, input: match.input})\n        )\n\n        if (value !== false) {\n          if (start !== position) {\n            nodes.push({type: 'text', value: node.value.slice(start, position)})\n          }\n\n          if (typeof value === 'string' && value.length > 0) {\n            value = {type: 'text', value: value}\n          }\n\n          if (value) {\n            nodes = [].concat(nodes, value)\n          }\n\n          start = position + match[0].length\n        }\n\n        if (!find.global) {\n          break\n        }\n\n        match = find.exec(node.value)\n      }\n\n      if (position === undefined) {\n        nodes = [node]\n        index--\n      } else {\n        if (start < node.value.length) {\n          nodes.push({type: 'text', value: node.value.slice(start)})\n        }\n\n        nodes.unshift(index, 1)\n        splice.apply(parent.children, nodes)\n      }\n\n      if (pairs.length > 1) {\n        subhandler = handlerFactory(pairs.slice(1))\n        position = -1\n\n        while (++position < nodes.length) {\n          node = nodes[position]\n\n          if (node.type === 'text') {\n            subhandler(node, parent)\n          } else {\n            search(node, settings, subhandler)\n          }\n        }\n      }\n\n      return index + nodes.length + 1\n    }\n  }\n}\n\nfunction search(tree, settings, handler) {\n  var ignored = convert(settings.ignore || [])\n  var result = []\n\n  visit(tree, 'text', visitor)\n\n  return result\n\n  function visitor(node, parents) {\n    var index = -1\n    var parent\n    var grandparent\n\n    while (++index < parents.length) {\n      parent = parents[index]\n\n      if (\n        ignored(\n          parent,\n          grandparent ? grandparent.children.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    return handler(node, grandparent)\n  }\n}\n\nfunction toPairs(schema) {\n  var result = []\n  var key\n  var index\n\n  if (typeof schema !== 'object') {\n    throw new Error('Expected array or object as schema')\n  }\n\n  if ('length' in schema) {\n    index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    for (key in schema) {\n      result.push([toExpression(key), toFunction(schema[key])])\n    }\n  }\n\n  return result\n}\n\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : returner\n\n  function returner() {\n    return replace\n  }\n}\n","var normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\n\nexports.canContainEols = ['footnote']\n\nexports.enter = {\n  footnoteDefinition: enterFootnoteDefinition,\n  footnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n  footnoteCall: enterFootnoteCall,\n  footnoteCallString: enterFootnoteCallString,\n  inlineNote: enterNote\n}\nexports.exit = {\n  footnoteDefinition: exitFootnoteDefinition,\n  footnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n  footnoteCall: exitFootnoteCall,\n  footnoteCallString: exitFootnoteCallString,\n  inlineNote: exitNote\n}\n\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\nfunction exitFootnoteDefinitionLabelString(token) {\n  var label = this.resume()\n  this.stack[this.stack.length - 1].label = label\n  this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\nfunction exitFootnoteCallString(token) {\n  var label = this.resume()\n  this.stack[this.stack.length - 1].label = label\n  this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\nfunction enterNote(token) {\n  this.enter({type: 'footnote', children: []}, token)\n}\n\nfunction exitNote(token) {\n  this.exit(token)\n}\n","exports.unsafe = [\n  // This is on by default already.\n  {character: '[', inConstruct: ['phrasing', 'label', 'reference']}\n]\nexports.handlers = {\n  footnote: footnote,\n  footnoteDefinition: footnoteDefinition,\n  footnoteReference: footnoteReference\n}\n\nvar association = require('mdast-util-to-markdown/lib/util/association')\nvar phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\nvar flow = require('mdast-util-to-markdown/lib/util/container-flow')\nvar indentLines = require('mdast-util-to-markdown/lib/util/indent-lines')\nvar safe = require('mdast-util-to-markdown/lib/util/safe')\n\nfootnoteReference.peek = footnoteReferencePeek\nfootnote.peek = footnotePeek\n\nfunction footnoteReference(node, _, context) {\n  var exit = context.enter('footnoteReference')\n  var subexit = context.enter('reference')\n  var reference = safe(context, association(node), {before: '^', after: ']'})\n  subexit()\n  exit()\n  return '[^' + reference + ']'\n}\n\nfunction footnoteReferencePeek() {\n  return '['\n}\n\nfunction footnote(node, _, context) {\n  var exit = context.enter('footnote')\n  var subexit = context.enter('label')\n  var value = '^[' + phrasing(node, context, {before: '[', after: ']'}) + ']'\n  subexit()\n  exit()\n  return value\n}\n\nfunction footnotePeek() {\n  return '^'\n}\n\nfunction footnoteDefinition(node, _, context) {\n  var exit = context.enter('footnoteDefinition')\n  var subexit = context.enter('label')\n  var label =\n    '[^' + safe(context, association(node), {before: '^', after: ']'}) + ']:'\n  var value\n  subexit()\n\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : '    ') + line\n    }\n\n    return (blank ? label : label + ' ') + line\n  }\n}\n","'use strict'\n\nmodule.exports = fromMarkdown\n\n// These three are compiled away in the `dist/`\n\nvar toString = require('mdast-util-to-string')\nvar assign = require('micromark/dist/constant/assign')\nvar own = require('micromark/dist/constant/has-own-property')\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\nvar parser = require('micromark/dist/parse')\nvar preprocessor = require('micromark/dist/preprocess')\nvar postprocess = require('micromark/dist/postprocess')\nvar decode = require('parse-entities/decode-entity')\nvar stringifyPosition = require('unist-util-stringify-position')\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parser(options).document().write(preprocessor()(value, encoding, true))\n    )\n  )\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {}\n  var config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n\n    settings.mdastExtensions || []\n  )\n\n  var data = {}\n\n  return compile\n\n  function compile(events) {\n    var tree = {type: 'root', children: []}\n    var stack = [tree]\n    var tokenStack = []\n    var listStack = []\n    var index = -1\n    var handler\n    var listStart\n\n    var context = {\n      stack: stack,\n      tokenStack: tokenStack,\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    }\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          listStart = listStack.pop(index)\n          index = prepareList(events, listStart, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          assign({sliceSerialize: events[index][2].sliceSerialize}, context),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n\n      end: point(\n        events.length\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1\n    var containerBalance = -1\n    var listSpread = false\n    var listItem\n    var tailIndex\n    var lineIndex\n    var tailEvent\n    var event\n    var firstBlankLineIndex\n    var atMarker\n\n    while (++index <= length) {\n      event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = point(\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          }\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  function getData(key) {\n    return data[key]\n  }\n\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  function opener(create, and) {\n    return open\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token)\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  function closer(and) {\n    return close\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop()\n    var open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({start: open.start, end: open.end}) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n\n    setData('flowCodeInside')\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\n        token\n      ).length\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children\n    var tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {start: point(token.start)}\n      this.stack[this.stack.length - 1].children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(\n        token.end\n      )\n\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.indexOf(context.type) > -1\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexithtmltext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitcodetext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1]\n    var value = this.resume()\n\n    this.stack[this.stack.length - 1].label = value\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token)\n    var type = getData('characterReferenceType')\n    var value\n    var tail\n\n    if (type) {\n      value = safeFromInt(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n\n      setData('characterReferenceType')\n    } else {\n      value = decode(data)\n    }\n\n    tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  function heading() {\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\nfunction configure(config, extensions) {\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, extension[key])\n    } else {\n      Object.assign(left, extension[key])\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = require('./dist')\n","module.exports = createFromMarkdown\n\nvar matters = require('micromark-extension-frontmatter/lib/matters')\n\nfunction createFromMarkdown(options) {\n  var settings = matters(options)\n  var length = settings.length\n  var index = -1\n  var enter = {}\n  var exit = {}\n  var matter\n\n  while (++index < length) {\n    matter = settings[index]\n    enter[matter.type] = opener(matter)\n    exit[matter.type] = close\n    exit[matter.type + 'Value'] = value\n  }\n\n  return {enter: enter, exit: exit}\n}\n\nfunction opener(matter) {\n  return open\n  function open(token) {\n    this.enter({type: matter.type, value: ''}, token)\n    this.buffer()\n  }\n}\n\nfunction close(token) {\n  var data = this.resume()\n  // Remove the initial and final eol.\n  this.exit(token).value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n}\n\nfunction value(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n","module.exports = createToMarkdown\n\nvar matters = require('micromark-extension-frontmatter/lib/matters')\n\nfunction createToMarkdown(options) {\n  var unsafe = []\n  var handlers = {}\n  var settings = matters(options)\n  var length = settings.length\n  var index = -1\n  var matter\n\n  while (++index < length) {\n    matter = settings[index]\n    handlers[matter.type] = handler(matter)\n    unsafe.push({atBreak: true, character: fence(matter, 'open').charAt(0)})\n  }\n\n  return {unsafe: unsafe, handlers: handlers}\n}\n\nfunction handler(matter) {\n  var open = fence(matter, 'open')\n  var close = fence(matter, 'close')\n\n  return handle\n\n  function handle(node) {\n    return open + (node.value ? '\\n' + node.value : '') + '\\n' + close\n  }\n}\n\nfunction fence(matter, prop) {\n  var marker\n\n  if (matter.marker) {\n    marker = pick(matter.marker, prop)\n    return marker + marker + marker\n  }\n\n  return pick(matter.fence, prop)\n}\n\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n","var ccount = require('ccount')\nvar findAndReplace = require('mdast-util-find-and-replace')\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\n\nexports.transforms = [transformGfmAutolinkLiterals]\nexports.enter = {\n  literalAutolink: enterLiteralAutolink,\n  literalAutolinkEmail: enterLiteralAutolinkValue,\n  literalAutolinkHttp: enterLiteralAutolinkValue,\n  literalAutolinkWww: enterLiteralAutolinkValue\n}\nexports.exit = {\n  literalAutolink: exitLiteralAutolink,\n  literalAutolinkEmail: exitLiteralAutolinkEmail,\n  literalAutolinkHttp: exitLiteralAutolinkHttp,\n  literalAutolinkWww: exitLiteralAutolinkWww\n}\n\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  this.stack[this.stack.length - 1].url = 'http://' + this.sliceSerialize(token)\n}\n\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/i, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\nfunction findUrl($0, protocol, domain, path, match) {\n  var prefix = ''\n  var parts\n  var result\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    result = [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\nfunction findEmail($0, atext, label, match) {\n  // Not an expected previous character.\n  if (!previous(match, true) || /[_-]$/.test(label)) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\nfunction isCorrectDomain(domain) {\n  var parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\nfunction splitUrl(url) {\n  var trail = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  var closingParenIndex\n  var openingParens\n  var closingParens\n\n  if (trail) {\n    url = url.slice(0, trail.index)\n    trail = trail[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\nfunction previous(match, email) {\n  var code = match.input.charCodeAt(match.index - 1)\n  return (\n    (code !== code || unicodeWhitespace(code) || unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","var inConstruct = 'phrasing'\nvar notInConstruct = ['autolink', 'link', 'image', 'label']\n\nexports.unsafe = [\n  {\n    character: '@',\n    before: '[+\\\\-.\\\\w]',\n    after: '[\\\\-.\\\\w]',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  },\n  {\n    character: '.',\n    before: '[Ww]',\n    after: '[\\\\-.\\\\w]',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  },\n  {\n    character: ':',\n    before: '[ps]',\n    after: '\\\\/',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  }\n]\n","exports.canContainEols = ['delete']\nexports.enter = {strikethrough: enterStrikethrough}\nexports.exit = {strikethrough: exitStrikethrough}\n\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\n\nexports.unsafe = [{character: '~', inConstruct: 'phrasing'}]\nexports.handlers = {delete: handleDelete}\n\nhandleDelete.peek = peekDelete\n\nfunction handleDelete(node, _, context) {\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: '~', after: '~'})\n  exit()\n  return '~~' + value + '~~'\n}\n\nfunction peekDelete() {\n  return '~'\n}\n","exports.enter = {\n  table: enterTable,\n  tableData: enterCell,\n  tableHeader: enterCell,\n  tableRow: enterRow\n}\nexports.exit = {\n  codeText: exitCodeText,\n  table: exitTable,\n  tableData: exit,\n  tableHeader: exit,\n  tableRow: exit\n}\n\nfunction enterTable(token) {\n  this.enter({type: 'table', align: token._align, children: []}, token)\n  this.setData('inTable', true)\n}\n\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\nfunction exit(token) {\n  this.exit(token)\n}\n\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\nfunction exitCodeText(token) {\n  var value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  this.stack[this.stack.length - 1].value = value\n  this.exit(token)\n}\n\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\nvar defaultInlineCode = require('mdast-util-to-markdown/lib/handle/inline-code')\nvar markdownTable = require('markdown-table')\n\nmodule.exports = toMarkdown\n\nfunction toMarkdown(options) {\n  var settings = options || {}\n  var padding = settings.tableCellPadding\n  var alignDelimiters = settings.tablePipeAlign\n  var stringLength = settings.stringLength\n  var around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  function handleTable(node, _, context) {\n    return serializeData(handleTableAsData(node, context), node.align)\n  }\n\n  // This function isn’t really used normally, because we handle rows at the\n  // table level.\n  // But, if someone passes in a table row, this ensures we make somewhat sense.\n  function handleTableRow(node, _, context) {\n    var row = handleTableRowAsData(node, context)\n    // `markdown-table` will always add an align row\n    var value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  function handleTableCell(node, _, context) {\n    var exit = context.enter('tableCell')\n    var value = phrasing(node, context, {before: around, after: around})\n    exit()\n    return value\n  }\n\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align: align,\n      alignDelimiters: alignDelimiters,\n      padding: padding,\n      stringLength: stringLength\n    })\n  }\n\n  function handleTableAsData(node, context) {\n    var children = node.children\n    var index = -1\n    var length = children.length\n    var result = []\n    var subexit = context.enter('table')\n\n    while (++index < length) {\n      result[index] = handleTableRowAsData(children[index], context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  function handleTableRowAsData(node, context) {\n    var children = node.children\n    var index = -1\n    var length = children.length\n    var result = []\n    var subexit = context.enter('tableRow')\n\n    while (++index < length) {\n      result[index] = handleTableCell(children[index], node, context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  function inlineCodeWithTable(node, parent, context) {\n    var value = defaultInlineCode(node, parent, context)\n\n    if (context.stack.indexOf('tableCell') !== -1) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","exports.exit = {\n  taskListCheckValueChecked: exitCheck,\n  taskListCheckValueUnchecked: exitCheck,\n  paragraph: exitParagraphWithTaskListItem\n}\n\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  this.stack[this.stack.length - 2].checked =\n    token.type === 'taskListCheckValueChecked'\n}\n\nfunction exitParagraphWithTaskListItem(token) {\n  var parent = this.stack[this.stack.length - 2]\n  var node = this.stack[this.stack.length - 1]\n  var siblings = parent.children\n  var head = node.children[0]\n  var index = -1\n  var firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      if (siblings[index].type === 'paragraph') {\n        firstParaghraph = siblings[index]\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n","var defaultListItem = require('mdast-util-to-markdown/lib/handle/list-item')\n\nexports.unsafe = [{atBreak: true, character: '-', after: '[:|-]'}]\n\nexports.handlers = {\n  listItem: listItemWithTaskListItem\n}\n\nfunction listItemWithTaskListItem(node, parent, context) {\n  var value = defaultListItem(node, parent, context)\n  var head = node.children[0]\n\n  if (typeof node.checked === 'boolean' && head && head.type === 'paragraph') {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  function check($0) {\n    return $0 + '[' + (node.checked ? 'x' : ' ') + '] '\n  }\n}\n","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown')\nvar table = require('mdast-util-gfm-table/from-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown')\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = configure([\n  autolinkLiteral,\n  strikethrough,\n  table,\n  taskListItem\n])\n\nfunction configure(extensions) {\n  var config = {transforms: [], canContainEols: []}\n  var length = extensions.length\n  var index = -1\n\n  while (++index < length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n  var right\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n    right = extension[key]\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right)\n    } else {\n      Object.assign(left, right)\n    }\n  }\n}\n","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/to-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/to-markdown')\nvar table = require('mdast-util-gfm-table/to-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/to-markdown')\nvar configure = require('mdast-util-to-markdown/lib/configure')\n\nmodule.exports = toMarkdown\n\nfunction toMarkdown(options) {\n  var config = configure(\n    {handlers: {}, join: [], unsafe: [], options: {}},\n    {\n      extensions: [autolinkLiteral, strikethrough, table(options), taskListItem]\n    }\n  )\n\n  return Object.assign(config.options, {\n    handlers: config.handlers,\n    join: config.join,\n    unsafe: config.unsafe\n  })\n}\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = association\n\nvar decode = require('parse-entities/decode-entity')\n\nvar characterEscape = /\\\\([!-/:-@[-`{-~])/g\nvar characterReference = /&(#(\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n// The `label` of an association is the string value: character escapes and\n// references work, and casing is intact.\n// The `identifier` is used to match one association to another: controversially,\n// character escapes and references don’t work in this matching: `&copy;` does\n// not match `©`, and `\\+` does not match `+`.\n// But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n// matches `a b`.\n// So, we do prefer the label when figuring out how we’re going to serialize:\n// it has whitespace, casing, and we can ignore most useless character escapes\n// and all character references.\nfunction association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return node.identifier\n    .replace(characterEscape, '$1')\n    .replace(characterReference, decodeIfPossible)\n}\n\nfunction decodeIfPossible($0, $1) {\n  return decode($1) || $0\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","module.exports = patternInScope\n\nfunction patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct)\n  )\n}\n\nfunction listInScope(stack, list, none) {\n  var index\n\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  index = -1\n\n  while (++index < list.length) {\n    if (stack.indexOf(list[index]) !== -1) {\n      return true\n    }\n  }\n\n  return false\n}\n","module.exports = safe\n\nvar patternCompile = require('./pattern-compile')\nvar patternInScope = require('./pattern-in-scope')\n\nfunction safe(context, input, config) {\n  var value = (config.before || '') + (input || '') + (config.after || '')\n  var positions = []\n  var result = []\n  var infos = {}\n  var index = -1\n  var before\n  var after\n  var position\n  var pattern\n  var expression\n  var match\n  var start\n  var end\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      before = 'before' in pattern || pattern.atBreak\n      after = 'after' in pattern\n\n      position = match.index + (before ? match[1].length : 0)\n\n      if (positions.indexOf(position) === -1) {\n        positions.push(position)\n        infos[position] = {before: before, after: after}\n      } else {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  start = config.before ? config.before.length : 0\n  end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    position = positions[index]\n\n    if (\n      // Character before or after matched:\n      position < start ||\n      position >= end\n    ) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || config.encode.indexOf(value.charAt(position)) === -1)\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\nfunction numerical(a, b) {\n  return a - b\n}\n\nfunction escapeBackslashes(value, after) {\n  var expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  var positions = []\n  var results = []\n  var index = -1\n  var start = 0\n  var whole = value + after\n  var match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","module.exports = footnote\n\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar blank = require('micromark/dist/tokenize/partial-blank-line')\nvar createSpace = require('micromark/dist/tokenize/factory-space')\nvar chunkedSplice = require('micromark/dist/util/chunked-splice')\nvar prefixSize = require('micromark/dist/util/prefix-size')\nvar shallow = require('micromark/dist/util/shallow')\nvar resolveAll = require('micromark/dist/util/resolve-all')\n\nvar indent = {tokenize: tokenizeIndent, partial: true}\n\nfunction footnote(options) {\n  var settings = options || {}\n  var call = {tokenize: tokenizeFootnoteCall}\n  var noteStart = {tokenize: tokenizeNoteStart, resolveAll: resolveAllNote}\n  var noteEnd = {\n    add: 'after',\n    tokenize: tokenizeNoteEnd,\n    resolveAll: resolveAllNote,\n    resolveTo: resolveToNoteEnd\n  }\n  var definition = {\n    tokenize: tokenizeDefinitionStart,\n    continuation: {tokenize: tokenizeDefinitionContinuation},\n    exit: footnoteDefinitionEnd\n  }\n  var text = {91: call}\n\n  if (settings.inlineNotes) {\n    text[93] = noteEnd\n    text[94] = noteStart\n  }\n\n  return {\n    _hiddenFootnoteSupport: {},\n    document: {91: definition},\n    text: text\n  }\n}\n\n// Remove remaining note starts.\nfunction resolveAllNote(events) {\n  var length = events.length\n  var index = -1\n  var token\n\n  while (++index < length) {\n    token = events[index][1]\n\n    if (events[index][0] === 'enter' && token.type === 'inlineNoteStart') {\n      token.type = 'data'\n      // Remove the two marker (`^[`).\n      events.splice(index + 1, 4)\n      length -= 4\n    }\n  }\n\n  return events\n}\n\nfunction resolveToNoteEnd(events, context) {\n  var index = events.length - 4\n  var group\n  var text\n  var token\n  var type\n  var openIndex\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n\n    // Find where the note starts.\n    if (events[index][0] === 'enter' && token.type === 'inlineNoteStart') {\n      openIndex = index\n      type = 'inlineNote'\n      break\n    }\n  }\n\n  group = {\n    type: type,\n    start: shallow(events[openIndex][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n\n  text = {\n    type: 'inlineNoteText',\n    start: shallow(events[openIndex + 4][1].end),\n    end: shallow(events[events.length - 3][1].start)\n  }\n\n  var note = [\n    ['enter', group, context],\n    events[openIndex + 1],\n    events[openIndex + 2],\n    events[openIndex + 3],\n    events[openIndex + 4],\n    ['enter', text, context]\n  ]\n\n  chunkedSplice(\n    note,\n    note.length,\n    0,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(openIndex + 6, -4),\n      context\n    )\n  )\n\n  note.push(\n    ['exit', text, context],\n    events[events.length - 2],\n    events[events.length - 3],\n    ['exit', group, context]\n  )\n\n  chunkedSplice(events, index, events.length - index, note)\n\n  return events\n}\n\nfunction tokenizeFootnoteCall(effects, ok, nok) {\n  var self = this\n  var defined = self.parser.footnotes || (self.parser.footnotes = [])\n  var size = 0\n  var data\n\n  return start\n\n  function start(code) {\n    // istanbul ignore next - Hooks.\n    if (code !== 91) return nok(code)\n\n    effects.enter('footnoteCall')\n    effects.enter('footnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('footnoteCallLabelMarker')\n    return callStart\n  }\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n\n    effects.enter('footnoteCallMarker')\n    effects.consume(code)\n    effects.exit('footnoteCallMarker')\n    effects.enter('footnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  function callData(code) {\n    var token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('footnoteCallString')\n      return defined.indexOf(normalizeIdentifier(self.sliceSerialize(token))) <\n        0\n        ? nok(code)\n        : end(code)\n    }\n\n    effects.consume(code)\n\n    if (!(code < 0 || code === 32)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n\n  function end(code) {\n    // Always a `]`.\n    effects.enter('footnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('footnoteCallLabelMarker')\n    effects.exit('footnoteCall')\n    return ok\n  }\n}\n\nfunction tokenizeNoteStart(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // istanbul ignore next - Hooks.\n    if (code !== 94) return nok(code)\n\n    effects.enter('inlineNoteStart')\n    effects.enter('inlineNoteMarker')\n    effects.consume(code)\n    effects.exit('inlineNoteMarker')\n    return noteStart\n  }\n\n  function noteStart(code) {\n    if (code !== 91) return nok(code)\n\n    effects.enter('inlineNoteStartMarker')\n    effects.consume(code)\n    effects.exit('inlineNoteStartMarker')\n    effects.exit('inlineNoteStart')\n    return ok\n  }\n}\n\nfunction tokenizeNoteEnd(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    var index = self.events.length\n    var hasStart\n\n    // Find an opening.\n    while (index--) {\n      if (self.events[index][1].type === 'inlineNoteStart') {\n        hasStart = true\n        break\n      }\n    }\n\n    // istanbul ignore next - Hooks.\n    if (code !== 93 || !hasStart) {\n      return nok(code)\n    }\n\n    effects.enter('inlineNoteEnd')\n    effects.enter('inlineNoteEndMarker')\n    effects.consume(code)\n    effects.exit('inlineNoteEndMarker')\n    effects.exit('inlineNoteEnd')\n    return ok\n  }\n}\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  var self = this\n  var defined = self.parser.footnotes || (self.parser.footnotes = [])\n  var identifier\n  var size = 0\n  var data\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore if - hooks. */\n    if (code !== 91) {\n      return nok(code)\n    }\n\n    effects.enter('footnoteDefinition')._container = true\n    effects.enter('footnoteDefinitionLabel')\n    effects.enter('footnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('footnoteDefinitionLabelMarker')\n    return labelStart\n  }\n\n  function labelStart(code) {\n    // `^`\n    if (code !== 94) return nok(code)\n\n    effects.enter('footnoteDefinitionMarker')\n    effects.consume(code)\n    effects.exit('footnoteDefinitionMarker')\n    effects.enter('footnoteDefinitionLabelString')\n    return atBreak\n  }\n\n  function atBreak(code) {\n    var token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('footnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('footnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('footnoteDefinitionLabelMarker')\n      effects.exit('footnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (code === -5 || code === -4 || code === -3) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === -5 ||\n      code === -4 ||\n      code === -3 ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!(code < 0 || code === 32)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n\n  function labelAfter(code) {\n    if (code !== 58) {\n      return nok(code)\n    }\n\n    effects.enter('definitionMarker')\n    effects.consume(code)\n    effects.exit('definitionMarker')\n    return effects.check(blank, onBlank, nonBlank)\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    return done(code)\n  }\n\n  function nonBlank(code) {\n    // A space or tab.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('footnoteDefinitionWhitespace')\n      effects.consume(code)\n      effects.exit('footnoteDefinitionWhitespace')\n      return done(code)\n    }\n\n    // No space is also fine, just like a block quote marker.\n    return done(code)\n  }\n\n  function done(code) {\n    if (defined.indexOf(identifier) < 0) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  var self = this\n\n  return effects.check(blank, onBlank, notBlank)\n\n  // Continued blank lines are fine.\n  function onBlank(code) {\n    if (self.containerState.initialBlankLine) {\n      self.containerState.furtherBlankLines = true\n    }\n\n    return ok(code)\n  }\n\n  // If there were continued blank lines, or this isn’t indented at all.\n  function notBlank(code) {\n    if (\n      self.containerState.furtherBlankLines ||\n      !(code === -2 || code === -1 || code === 32)\n    ) {\n      return nok(code)\n    }\n\n    self.containerState.initialBlankLine = undefined\n    self.containerState.furtherBlankLines = undefined\n    return effects.attempt(indent, ok, nok)(code)\n  }\n}\n\nfunction footnoteDefinitionEnd(effects) {\n  effects.exit('footnoteDefinition')\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n\n  return createSpace(effects, afterPrefix, 'footnoteDefinitionIndent', 5)\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'footnoteDefinitionIndent') === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","module.exports = require('./lib/syntax')\n","module.exports = matters\n\nvar fault = require('fault')\n\nvar own = {}.hasOwnProperty\n\nvar markers = {yaml: '-', toml: '+'}\n\nfunction matters(options) {\n  var settings = options || 'yaml'\n  var results = []\n  var index = -1\n  var length\n\n  // One preset or matter.\n  if (typeof settings === 'string' || !('length' in settings)) {\n    settings = [settings]\n  }\n\n  length = settings.length\n\n  while (++index < length) {\n    results[index] = matter(settings[index])\n  }\n\n  return results\n}\n\nfunction matter(option) {\n  var result = option\n\n  if (typeof result === 'string') {\n    if (!own.call(markers, result)) {\n      throw fault('Missing matter definition for `%s`', result)\n    }\n\n    result = {type: result, marker: markers[result]}\n  } else if (typeof result !== 'object') {\n    throw fault('Expected matter to be an object, not `%j`', result)\n  }\n\n  if (!own.call(result, 'type')) {\n    throw fault('Missing `type` in matter `%j`', result)\n  }\n\n  if (!own.call(result, 'fence') && !own.call(result, 'marker')) {\n    throw fault('Missing `marker` or `fence` in matter `%j`', result)\n  }\n\n  return result\n}\n","module.exports = create\n\nvar matters = require('./matters')\n\nfunction create(options) {\n  var settings = matters(options)\n  var length = settings.length\n  var index = -1\n  var flow = {}\n  var matter\n  var code\n\n  while (++index < length) {\n    matter = settings[index]\n    code = fence(matter, 'open').charCodeAt(0)\n    if (code in flow) {\n      flow[code].push(parse(matter))\n    } else {\n      flow[code] = [parse(matter)]\n    }\n  }\n\n  return {flow: flow}\n}\n\nfunction parse(matter) {\n  var name = matter.type\n  var anywhere = matter.anywhere\n  var valueType = name + 'Value'\n  var fenceType = name + 'Fence'\n  var sequenceType = fenceType + 'Sequence'\n  var fenceConstruct = {tokenize: tokenizeFence, partial: true}\n  var buffer\n\n  return {tokenize: tokenizeFrontmatter, concrete: true}\n\n  function tokenizeFrontmatter(effects, ok, nok) {\n    var self = this\n\n    return start\n\n    function start(code) {\n      var position = self.now()\n\n      if (position.column !== 1 || (!anywhere && position.line !== 1)) {\n        return nok(code)\n      }\n\n      effects.enter(name)\n      buffer = fence(matter, 'open')\n      return effects.attempt(fenceConstruct, afterOpeningFence, nok)(code)\n    }\n\n    function afterOpeningFence(code) {\n      buffer = fence(matter, 'close')\n      return lineEnd(code)\n    }\n\n    function lineStart(code) {\n      if (code === -5 || code === -4 || code === -3 || code === null) {\n        return lineEnd(code)\n      }\n\n      effects.enter(valueType)\n      return lineData(code)\n    }\n\n    function lineData(code) {\n      if (code === -5 || code === -4 || code === -3 || code === null) {\n        effects.exit(valueType)\n        return lineEnd(code)\n      }\n\n      effects.consume(code)\n      return lineData\n    }\n\n    function lineEnd(code) {\n      // Require a closing fence.\n      if (code === null) {\n        return nok(code)\n      }\n\n      // Can only be an eol.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(fenceConstruct, after, lineStart)\n    }\n\n    function after(code) {\n      effects.exit(name)\n      return ok(code)\n    }\n  }\n\n  function tokenizeFence(effects, ok, nok) {\n    var bufferIndex = 0\n\n    return start\n\n    function start(code) {\n      if (code === buffer.charCodeAt(bufferIndex)) {\n        effects.enter(fenceType)\n        effects.enter(sequenceType)\n        return insideSequence(code)\n      }\n\n      return nok(code)\n    }\n\n    function insideSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n\n        if (code === -2 || code === -1 || code === 32) {\n          effects.enter('whitespace')\n          return insideWhitespace(code)\n        }\n\n        return fenceEnd(code)\n      }\n\n      if (code === buffer.charCodeAt(bufferIndex)) {\n        effects.consume(code)\n        bufferIndex++\n        return insideSequence\n      }\n\n      return nok(code)\n    }\n\n    function insideWhitespace(code) {\n      if (code === -2 || code === -1 || code === 32) {\n        effects.consume(code)\n        return insideWhitespace\n      }\n\n      effects.exit('whitespace')\n      return fenceEnd(code)\n    }\n\n    function fenceEnd(code) {\n      if (code === -5 || code === -4 || code === -3 || code === null) {\n        effects.exit(fenceType)\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nfunction fence(matter, prop) {\n  var marker\n\n  if (matter.marker) {\n    marker = pick(matter.marker, prop)\n    return marker + marker + marker\n  }\n\n  return pick(matter.fence, prop)\n}\n\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n","module.exports = require('./syntax')\n","var asciiAlpha = require('micromark/dist/character/ascii-alpha')\nvar asciiAlphanumeric = require('micromark/dist/character/ascii-alphanumeric')\nvar asciiControl = require('micromark/dist/character/ascii-control')\nvar markdownLineEnding = require('micromark/dist/character/markdown-line-ending')\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\n\nvar www = {tokenize: tokenizeWww, partial: true}\nvar domain = {tokenize: tokenizeDomain, partial: true}\nvar path = {tokenize: tokenizePath, partial: true}\nvar punctuation = {tokenize: tokenizePunctuation, partial: true}\nvar namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\n\nvar wwwAutolink = {tokenize: tokenizeWwwAutolink, previous: previousWww}\nvar httpAutolink = {tokenize: tokenizeHttpAutolink, previous: previousHttp}\nvar emailAutolink = {tokenize: tokenizeEmailAutolink, previous: previousEmail}\n\nvar text = {}\n\n// Export hooked constructs.\nexports.text = text\n\n// `0`\nvar code = 48\n\n// While the code is smaller than `{`.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  // Jump from `:` -> `A`\n  if (code === 58) code = 65\n  // Jump from `[` -> `a`\n  else if (code === 91) code = 97\n}\n\n// `+`\ntext[43] = emailAutolink\n// `-`\ntext[45] = emailAutolink\n// `.`\ntext[46] = emailAutolink\n// `_`\ntext[95] = emailAutolink\n// `h`.\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\n// `w`.\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  var self = this\n  var hasDot\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    // `@`\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n\n  function label(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (\n      // `-`\n      code === 45 ||\n      // `_`\n      code === 95\n    ) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    return label\n  }\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n\n  function afterDashOrUnderscore(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n\n  function done(code) {\n    if (hasDot) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      (code !== 87 && code - 32 !== 87) ||\n      !previousWww(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      (code !== 72 && code - 32 !== 72) ||\n      !previousHttp(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n\n  function t1(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n\n  function t2(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n\n  function p(code) {\n    // `p`\n    if (code === 80 || code - 32 === 80) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n\n  function s(code) {\n    // `s`\n    if (code === 83 || code - 32 === 83) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n\n  function colon(code) {\n    // `:`\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n\n  function slash1(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n\n  function slash2(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume a `w`.\n    effects.consume(code)\n    return w2\n  }\n\n  function w2(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n\n  function w3(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n\n  function dot(code) {\n    // `.`\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n\nfunction tokenizeDomain(effects, ok, nok) {\n  var hasUnderscoreInLastSegment\n  var hasUnderscoreInLastLastSegment\n\n  return domain\n\n  function domain(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 /* `.` */ || code === 95 /* `_` */) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    if (\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 /* `-` */ && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n\n  function punctuationContinuation(code) {\n    // `.`\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    // `_`\n    if (code === 95) hasUnderscoreInLastSegment = true\n\n    effects.consume(code)\n    return domain\n  }\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizePath(effects, ok) {\n  var balance = 0\n\n  return inPath\n\n  function inPath(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    // `(`\n    if (code === 40) {\n      balance++\n    }\n\n    // `)`\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume an ampersand.\n    effects.consume(code)\n    return inside\n  }\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    // `;`\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Always a valid trailing punctuation marker.\n    effects.consume(code)\n    return after\n  }\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    }\n\n    // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n\nfunction trailingPunctuation(code) {\n  return (\n    // `!`\n    code === 33 ||\n    // `\"`\n    code === 34 ||\n    // `'`\n    code === 39 ||\n    // `)`\n    code === 41 ||\n    // `*`\n    code === 42 ||\n    // `,`\n    code === 44 ||\n    // `.`\n    code === 46 ||\n    // `:`\n    code === 58 ||\n    // `;`\n    code === 59 ||\n    // `<`\n    code === 60 ||\n    // `?`\n    code === 63 ||\n    // `_`.\n    code === 95 ||\n    // `~`\n    code === 126\n  )\n}\n\nfunction pathEnd(code) {\n  return (\n    // EOF.\n    code === null ||\n    // CR, LF, CRLF, HT, VS.\n    code < 0 ||\n    // Space.\n    code === 32 ||\n    // `<`\n    code === 60\n  )\n}\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 /* `+` */ ||\n    code === 45 /* `-` */ ||\n    code === 46 /* `.` */ ||\n    code === 95 /* `_` */ ||\n    asciiAlphanumeric(code)\n  )\n}\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code < 0 ||\n    code === 32 /* ` ` */ ||\n    code === 40 /* `(` */ ||\n    code === 42 /* `*` */ ||\n    code === 95 /* `_` */ ||\n    code === 126 /* `~` */\n  )\n}\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n\nfunction previousEmail(code) {\n  return code !== 47 /* `/` */ && previousHttp(code)\n}\n\nfunction previous(events) {\n  var index = events.length\n\n  while (index--) {\n    if (\n      (events[index][1].type === 'labelLink' ||\n        events[index][1].type === 'labelImage') &&\n      !events[index][1]._balanced\n    ) {\n      return true\n    }\n  }\n}\n","module.exports = create\n\nvar classifyCharacter = require('micromark/dist/util/classify-character')\nvar chunkedSplice = require('micromark/dist/util/chunked-splice')\nvar resolveAll = require('micromark/dist/util/resolve-all')\nvar shallow = require('micromark/dist/util/shallow')\n\nfunction create(options) {\n  var settings = options || {}\n  var single = settings.singleTilde\n  var tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {text: {126: tokenizer}, insideSpan: {null: tokenizer}}\n\n  // Take events and resolve strikethrough.\n  function resolveAllStrikethrough(events, context) {\n    var index = -1\n    var strikethrough\n    var text\n    var open\n    var nextEvents\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            strikethrough = {\n              type: 'strikethrough',\n              start: shallow(events[open][1].start),\n              end: shallow(events[index][1].end)\n            }\n\n            text = {\n              type: 'strikethroughText',\n              start: shallow(events[open][1].end),\n              end: shallow(events[index][1].start)\n            }\n\n            // Opening.\n            nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n\n            // Between.\n            chunkedSplice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            )\n\n            // Closing.\n            chunkedSplice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n\n            chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    return removeRemainingSequences(events)\n  }\n\n  function removeRemainingSequences(events) {\n    var index = -1\n    var length = events.length\n\n    while (++index < length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    var previous = this.previous\n    var events = this.events\n    var size = 0\n\n    return start\n\n    function start(code) {\n      if (\n        code !== 126 ||\n        (previous === 126 &&\n          events[events.length - 1][1].type !== 'characterEscape')\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    function more(code) {\n      var before = classifyCharacter(previous)\n      var token\n      var after\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      token = effects.exit('strikethroughSequenceTemporary')\n      after = classifyCharacter(code)\n      token._open = !after || (after === 2 && before)\n      token._close = !before || (before === 2 && after)\n      return ok(code)\n    }\n  }\n}\n","module.exports = require('./syntax')\n","exports.flow = {\n  null: {tokenize: tokenizeTable, resolve: resolveTable, interruptible: true}\n}\n\nvar createSpace = require('micromark/dist/tokenize/factory-space')\n\nvar setextUnderlineMini = {tokenize: tokenizeSetextUnderlineMini, partial: true}\nvar nextPrefixedOrBlank = {tokenize: tokenizeNextPrefixedOrBlank, partial: true}\n\nfunction resolveTable(events, context) {\n  var length = events.length\n  var index = -1\n  var token\n  var inHead\n  var inDelimiterRow\n  var inRow\n  var cell\n  var content\n  var text\n  var contentStart\n  var contentEnd\n  var cellStart\n\n  while (++index < length) {\n    token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          contentType: 'text'\n        }\n\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        length = events.length\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart &&\n      cellStart + 1 < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      length = events.length\n      cellStart = index + 1\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeTable(effects, ok, nok) {\n  var align = []\n  var tableHeaderCount = 0\n  var seenDelimiter\n  var hasDash\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore if - used to be passed in beta micromark versions. */\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return nok(code)\n    }\n\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent')\n    // Can’t be space or eols at the start of a construct, so we’re in a cell.\n    return inCellContentHead(code)\n  }\n\n  function cellDividerHead(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n\n  function cellBreakHead(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndHead(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    // `|`\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n\n  function inWhitespaceHead(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    // `\\`\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n\n  function inCellContentEscapeHead(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    }\n\n    // Anything else.\n    return inCellContentHead(code)\n  }\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n\n    // If a setext heading, exit.\n    return effects.check(\n      setextUnderlineMini,\n      nok,\n      // Support an indent before the delimiter row.\n      createSpace(effects, rowStartDelimiter, 'linePrefix', 4)\n    )\n  }\n\n  function rowStartDelimiter(code) {\n    // If there’s another space, or we’re at the EOL/EOF, exit.\n    if (code === null || code < 0 || code === 32) {\n      return nok(code)\n    }\n\n    effects.enter('tableDelimiterRow')\n    return atDelimiterRowBreak(code)\n  }\n\n  function atDelimiterRowBreak(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push(null)\n      return inFillerDelimiter\n    }\n\n    // `:`\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    }\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n\n  function inWhitespaceDelimiter(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n\n  function inFillerDelimiter(code) {\n    // `-`\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    // `:`\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n\n  function afterLeftAlignment(code) {\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    }\n\n    // Anything else is not ok.\n    return nok(code)\n  }\n\n  function afterRightAlignment(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    // `|`\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow')\n\n    // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(nextPrefixedOrBlank, tableClose, tableContinue)(code)\n  }\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n\n  function tableContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    // We checked that it’s not a prefixed or blank line, so we’re certain a\n    // body is coming, though it may be indented.\n    return createSpace(effects, bodyStart, 'linePrefix', 4)\n  }\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n\n  function rowStartBody(code) {\n    effects.enter('tableRow')\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent')\n    // Can’t be space or eols at the start of a construct, so we’re in a cell.\n    return inCellContentBody(code)\n  }\n\n  function cellDividerBody(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n\n  function cellBreakBody(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndBody(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    // `|`\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n\n  function inWhitespaceBody(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    // `\\`\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n\n  function inCellContentEscapeBody(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    }\n\n    // Anything else.\n    return inCellContentBody(code)\n  }\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      tableBodyContinue\n    )(code)\n  }\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n\n  function tableBodyContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    // Support an optional prefix, then start a body row.\n    return createSpace(effects, rowStartBody, 'linePrefix', 4)\n  }\n}\n\n// Based on micromark, but that won’t work as we’re in a table, and that expects\n// content.\n// <https://github.com/micromark/micromark/blob/main/lib/tokenize/setext-underline.js>\nfunction tokenizeSetextUnderlineMini(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // `-`\n    if (code !== 45) {\n      return nok(code)\n    }\n\n    effects.enter('setextUnderline')\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return sequence\n    }\n\n    return whitespace(code)\n  }\n\n  function whitespace(code) {\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return whitespace\n    }\n\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  var size = 0\n\n  return start\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check')\n    // EOL.\n    effects.consume(code)\n    return whitespace\n  }\n\n  function whitespace(code) {\n    // VS or SP.\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    }\n\n    // EOF or whitespace\n    if (code === null || code < 0) {\n      return ok(code)\n    }\n\n    // Anything else.\n    return nok(code)\n  }\n}\n","module.exports = require('./syntax')\n","var markdownLineEndingOrSpace = require('micromark/dist/character/markdown-line-ending-or-space')\nvar spaceFactory = require('micromark/dist/tokenize/factory-space')\nvar prefixSize = require('micromark/dist/util/prefix-size')\n\nvar tasklistCheck = {tokenize: tokenizeTasklistCheck}\n\nexports.text = {91: tasklistCheck}\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  var self = this\n\n  return open\n\n  function open(code) {\n    if (\n      // Exit if not `[`.\n      code !== 91 ||\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  function inside(code) {\n    // Tab or space.\n    if (code === -2 || code === 32) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    // Upper- and lower `x`.\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n\n  function close(code) {\n    // `]`\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check({tokenize: spaceThenNonSpace}, ok, nok)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  var self = this\n\n  return spaceFactory(effects, after, 'whitespace')\n\n  function after(code) {\n    return prefixSize(self.events, 'whitespace') &&\n      code !== null &&\n      !markdownLineEndingOrSpace(code)\n      ? ok(code)\n      : nok(code)\n  }\n}\n","module.exports = require('./syntax')\n","var combine = require('micromark/dist/util/combine-extensions')\nvar autolink = require('micromark-extension-gfm-autolink-literal')\nvar strikethrough = require('micromark-extension-gfm-strikethrough')\nvar table = require('micromark-extension-gfm-table')\nvar tasklist = require('micromark-extension-gfm-task-list-item')\n\nmodule.exports = create\n\nfunction create(options) {\n  return combine([autolink, strikethrough(options), table, tasklist])\n}\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict'\n\nvar characterEntities = require('character-entities')\n\nmodule.exports = decodeEntity\n\nvar own = {}.hasOwnProperty\n\nfunction decodeEntity(characters) {\n  return own.call(characterEntities, characters)\n    ? characterEntities[characters]\n    : false\n}\n","'use strict'\n\nvar syntax = require('micromark-extension-footnote')\nvar fromMarkdown = require('mdast-util-footnote/from-markdown')\nvar toMarkdown = require('mdast-util-footnote/to-markdown')\nvar warningIssued\n\nmodule.exports = footnotes\n\nfunction footnotes(options) {\n  var data = this.data()\n\n  /* istanbul ignore next - old remark. */\n  if (\n    !warningIssued &&\n    ((this.Parser &&\n      this.Parser.prototype &&\n      this.Parser.prototype.blockTokenizers) ||\n      (this.Compiler &&\n        this.Compiler.prototype &&\n        this.Compiler.prototype.visitors))\n  ) {\n    warningIssued = true\n    console.warn(\n      '[remark-footnotes] Warning: please upgrade to remark 13 to use this plugin'\n    )\n  }\n\n  add('micromarkExtensions', syntax(options))\n  add('fromMarkdownExtensions', fromMarkdown)\n  add('toMarkdownExtensions', toMarkdown)\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n","'use strict'\n\nvar syntax = require('micromark-extension-frontmatter')\nvar fromMarkdown = require('mdast-util-frontmatter/from-markdown')\nvar toMarkdown = require('mdast-util-frontmatter/to-markdown')\n\nmodule.exports = frontmatter\n\nfunction frontmatter(options) {\n  var data = this.data()\n  add('micromarkExtensions', syntax(options))\n  add('fromMarkdownExtensions', fromMarkdown(options))\n  add('toMarkdownExtensions', toMarkdown(options))\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n","'use strict'\n\nvar syntax = require('micromark-extension-gfm')\nvar fromMarkdown = require('mdast-util-gfm/from-markdown')\nvar toMarkdown = require('mdast-util-gfm/to-markdown')\n\nvar warningIssued\n\nmodule.exports = gfm\n\nfunction gfm(options) {\n  var data = this.data()\n\n  /* istanbul ignore next - old remark. */\n  if (\n    !warningIssued &&\n    ((this.Parser &&\n      this.Parser.prototype &&\n      this.Parser.prototype.blockTokenizers) ||\n      (this.Compiler &&\n        this.Compiler.prototype &&\n        this.Compiler.prototype.visitors))\n  ) {\n    warningIssued = true\n    console.warn(\n      '[remark-gfm] Warning: please upgrade to remark 13 to use this plugin'\n    )\n  }\n\n  add('micromarkExtensions', syntax(options))\n  add('fromMarkdownExtensions', fromMarkdown)\n  add('toMarkdownExtensions', toMarkdown(options))\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n","'use strict'\n\nmodule.exports = parse\n\nvar fromMarkdown = require('mdast-util-from-markdown')\n\nfunction parse(options) {\n  var self = this\n\n  this.Parser = parse\n\n  function parse(doc) {\n    return fromMarkdown(\n      doc,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('micromarkExtensions') || [],\n        mdastExtensions: self.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet flagForceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tflagForceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m') ||\n\t\t\thasFlag('color=full') ||\n\t\t\thasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream, options = {}) {\n\tconst level = supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options\n\t});\n\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel({isTTY: tty.isatty(1)}),\n\tstderr: getSupportLevel({isTTY: tty.isatty(2)})\n};\n","'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n// Create new middleware.\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n","'use strict'\n\nvar slice = [].slice\n\nmodule.exports = wrap\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked\n\n  return wrapped\n\n  function wrapped() {\n    var params = slice.call(arguments, 0)\n    var callback = fn.length > params.length\n    var result\n\n    if (callback) {\n      params.push(done)\n    }\n\n    try {\n      result = fn.apply(null, params)\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error\n      }\n\n      return done(error)\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true\n\n      callback.apply(null, arguments)\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value)\n  }\n}\n","import {\n    BouncedTy,\n    ContractTy,\n    MapTy,\n    MessageTy,\n    NullTy,\n    OptionTy,\n    PlaceholderTy,\n    PrimitiveTy,\n    StructTy,\n    TraitTy,\n    Ty,\n} from \"./types/BaseTy\"\nimport {CallLike, Expression, NamedNode, Node} from \"@server/psi/Node\"\nimport {Reference} from \"@server/psi/Reference\"\nimport {Struct, Message, Fun, Primitive, Contract, Trait} from \"@server/psi/Decls\"\nimport {isTypeOwnerNode} from \"@server/psi/utils\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {CACHE} from \"./cache\"\nimport {index, IndexKey} from \"./indexes\"\n\nexport class TypeInferer {\n    public static inferType(node: Node): Ty | null {\n        return new TypeInferer().inferType(node)\n    }\n\n    public inferType(node: Node): Ty | null {\n        return CACHE.typeCache.cached(node.node.id, () => this.inferTypeImpl(node))\n    }\n\n    private inferTypeImpl(node: Node): Ty | null {\n        if (node.node.type === \"string\") {\n            return this.primitiveType(\"String\")\n        }\n\n        if (node.node.type === \"integer\") {\n            return this.primitiveType(\"Int\")\n        }\n\n        if (node.node.type === \"boolean\") {\n            return this.primitiveType(\"Bool\")\n        }\n\n        if (node.node.type === \"type_identifier\") {\n            const resolved = Reference.resolve(new NamedNode(node.node, node.file))\n            if (resolved === null) {\n                if (\n                    node.node.text === \"K\" ||\n                    node.node.text === \"V\" ||\n                    node.node.text === \"S\" ||\n                    node.node.text === \"M\"\n                ) {\n                    return new PlaceholderTy(node.node.text, new NamedNode(node.node, node.file))\n                }\n                return null\n            }\n\n            const inferred = this.inferTypeFromResolved(resolved)\n            if (\n                inferred &&\n                !(inferred instanceof OptionTy) &&\n                node.node.nextSibling?.text === \"?\"\n            ) {\n                return new OptionTy(inferred)\n            }\n            return inferred\n        }\n\n        if (node.node.type === \"identifier\" || node.node.type === \"self\") {\n            const resolved = Reference.resolve(new NamedNode(node.node, node.file))\n            if (resolved === null) return null\n\n            const parent = resolved.node.parent\n            if (parent === null) return null\n\n            if (parent.type === \"let_statement\") {\n                const typeHint = parent.childForFieldName(\"type\")\n                if (typeHint !== null) {\n                    return this.inferTypeMaybeOption(typeHint, resolved)\n                }\n                const value = parent.childForFieldName(\"value\")\n                if (!value) return null\n                return this.inferType(new Expression(value, resolved.file))\n            }\n\n            if (parent.type === \"foreach_statement\") {\n                const expr = parent.childForFieldName(\"map\")\n                if (!expr) return null\n                const exprTy = new Expression(expr, node.file).type()\n                if (!(exprTy instanceof MapTy)) return null\n\n                const key = parent.childForFieldName(\"key\")\n                if (!key) return null\n\n                if (resolved.node.equals(key)) {\n                    return exprTy.keyTy\n                }\n\n                const value = parent.childForFieldName(\"value\")\n                if (!value) return null\n\n                if (resolved.node.equals(value)) {\n                    return exprTy.valueTy\n                }\n            }\n\n            if (parent.type === \"catch_clause\") {\n                return this.primitiveType(\"Int\")\n            }\n\n            if (resolved.node.type === \"field\" || resolved.node.type === \"storage_variable\") {\n                const typeNode = resolved.node.childForFieldName(\"type\")\n                if (!typeNode) return null\n                return this.inferTypeMaybeTlB(typeNode, resolved)\n            }\n\n            if (isTypeOwnerNode(resolved.node)) {\n                const typeNode = resolved.node.childForFieldName(\"type\")\n                if (!typeNode) return null\n                return this.inferTypeMaybeOption(typeNode, resolved)\n            }\n\n            return this.inferTypeFromResolved(resolved)\n        }\n\n        if (node.node.type === \"bounced_type\") {\n            const innerTy = this.inferChildFieldType(node, \"message\")\n            if (innerTy === null) return null\n            return new BouncedTy(innerTy)\n        }\n\n        if (node.node.type === \"map_type\") {\n            const keyTy = this.inferChildFieldType(node, \"key\")\n            if (keyTy === null) return null\n\n            const valueTy = this.inferChildFieldType(node, \"value\")\n            if (valueTy === null) return null\n\n            if (keyTy instanceof PrimitiveTy) {\n                const tlb = node.node.childForFieldName(\"tlb_key\")\n                const tlbType = tlb?.childForFieldName(\"type\")\n                if (tlbType) {\n                    keyTy.tlb = tlbType.text\n                }\n            }\n\n            if (valueTy instanceof PrimitiveTy) {\n                const tlb = node.node.childForFieldName(\"tlb_value\")\n                const tlbType = tlb?.childForFieldName(\"type\")\n                if (tlbType) {\n                    valueTy.tlb = tlbType.text\n                }\n            }\n\n            return new MapTy(keyTy, valueTy)\n        }\n\n        if (node.node.type === \"instance_expression\") {\n            const name = node.node.childForFieldName(\"name\")\n            if (name === null) return null\n\n            const element = new NamedNode(name, node.file)\n            const resolved = Reference.resolve(element)\n            if (resolved === null) return null\n            return this.inferTypeFromResolved(resolved)\n        }\n\n        if (node.node.type === \"non_null_assert_expression\") {\n            const inferred = this.inferChildFieldType(node, \"argument\")\n            if (inferred instanceof OptionTy) {\n                return inferred.innerTy\n            }\n            return inferred\n        }\n\n        if (node.node.type === \"initOf\") {\n            const stateInit = index.elementByName(IndexKey.Structs, \"StateInit\")\n            if (!stateInit) return null\n            return new StructTy(\"StateInit\", stateInit)\n        }\n\n        if (node.node.type === \"codeOf\") {\n            const cell = index.elementByName(IndexKey.Primitives, \"Cell\")\n            if (!cell) return null\n            return new PrimitiveTy(\"Cell\", cell, null)\n        }\n\n        if (node.node.type === \"parenthesized_expression\") {\n            const inner = node.node.children[1]\n            if (!inner) return null\n            return this.inferType(new Expression(inner, node.file))\n        }\n\n        if (node.node.type === \"parameter\") {\n            return this.inferChildFieldType(node, \"type\")\n        }\n\n        if (node.node.type === \"field_access_expression\") {\n            const name = node.node.childForFieldName(\"name\")\n            if (name === null) return null\n\n            const element = new NamedNode(name, node.file)\n            const resolved = Reference.resolve(element)\n            if (resolved === null) return null\n\n            if (resolved.node.type === \"field\") {\n                const typeNode = resolved.node.childForFieldName(\"type\")\n                if (!typeNode) return null\n                return this.inferTypeMaybeOption(typeNode, resolved)\n            }\n\n            if (resolved.node.type === \"storage_variable\") {\n                const typeNode = resolved.node.childForFieldName(\"type\")\n                if (!typeNode) return null\n                return this.inferTypeMaybeOption(typeNode, resolved)\n            }\n\n            if (resolved.node.type === \"storage_constant\") {\n                const typeNode = resolved.node.childForFieldName(\"type\")\n                if (!typeNode) return null\n                return this.inferTypeMaybeOption(typeNode, resolved)\n            }\n\n            if (resolved.node.type === \"parameter\") {\n                const typeNode = resolved.node.childForFieldName(\"type\")\n                if (!typeNode) return null\n                return this.inferTypeMaybeOption(typeNode, resolved)\n            }\n\n            return this.inferTypeFromResolved(resolved)\n        }\n\n        if (\n            node.node.type === \"static_call_expression\" ||\n            node.node.type === \"method_call_expression\"\n        ) {\n            const name = node.node.childForFieldName(\"name\")\n            if (name === null) return null\n\n            const element = new NamedNode(name, node.file)\n            const resolved = Reference.resolve(element)\n            if (resolved === null) return null\n            if (!(resolved instanceof Fun)) return null\n            const calledName = resolved.name()\n\n            const returnType = resolved.returnType()\n            if (returnType === null) return null\n            const type = this.inferTypeMaybeOption(returnType.node, returnType)\n            if (!type) return null\n\n            const qualifier = node.node.childForFieldName(\"object\")\n\n            // Handle `Struct.fromCell()` calls\n            if (\n                qualifier &&\n                (calledName.startsWith(\"AnyStruct_\") || calledName.startsWith(\"AnyMessage_\"))\n            ) {\n                return new Expression(qualifier, node.file).type()\n            }\n\n            // following code is completely garbage, we need to replace it with actual generics\n            if (\n                type instanceof PlaceholderTy ||\n                (type instanceof OptionTy && type.innerTy instanceof PlaceholderTy)\n            ) {\n                const innerTy = type instanceof OptionTy ? type.innerTy : type\n\n                const call = new CallLike(node.node, node.file)\n                const selfArgument =\n                    node.node.type === \"method_call_expression\"\n                        ? call.node.childForFieldName(\"object\")\n                        : call.rawArguments()[0]\n                if (!selfArgument) return type\n\n                const selfType = this.inferType(new Expression(selfArgument, node.file))\n                if (!selfType) return type\n                if (!(selfType instanceof MapTy)) return type\n\n                const resultType =\n                    innerTy.name() === \"K\"\n                        ? selfType.keyTy\n                        : innerTy.name() === \"V\"\n                          ? selfType.valueTy\n                          : null\n                if (!resultType) return type\n\n                if (type instanceof OptionTy) {\n                    return new OptionTy(resultType)\n                }\n                return resultType\n            }\n\n            return type\n        }\n\n        if (node.node.type === \"null\") {\n            return new NullTy()\n        }\n\n        if (node.node.type === \"unary_expression\") {\n            const operator = node.node.childForFieldName(\"operator\")?.text\n            const argument = node.node.childForFieldName(\"argument\")\n            if (!argument) return null\n\n            const argType = this.inferType(new Expression(argument, node.file))\n            if (!argType) return null\n\n            if (operator === \"!\") {\n                return this.primitiveType(\"Bool\")\n            }\n            if (operator === \"-\") {\n                return this.primitiveType(\"Int\")\n            }\n            return argType\n        }\n\n        if (node.node.type === \"binary_expression\") {\n            const operator = node.node.children[1]?.text\n            const left = node.node.children[0]\n            const right = node.node.children[2]\n            if (!operator || !left || !right) return null\n\n            const leftType = this.inferType(new Expression(left, node.file))\n            const rightType = this.inferType(new Expression(right, node.file))\n            if (!leftType || !rightType) return null\n\n            if (operator === \"&&\" || operator === \"||\") {\n                return this.primitiveType(\"Bool\")\n            }\n\n            if ([\"+\", \"-\", \"*\", \"/\", \"%\", \"<<\", \">>\", \"&\", \"|\", \"^\"].includes(operator)) {\n                if (\n                    leftType instanceof PrimitiveTy &&\n                    leftType.name() === \"String\" &&\n                    operator === \"+\"\n                ) {\n                    return this.primitiveType(\"String\")\n                }\n                return this.primitiveType(\"Int\")\n            }\n\n            if ([\"<\", \">\", \"<=\", \">=\", \"==\", \"!=\"].includes(operator)) {\n                return this.primitiveType(\"Bool\")\n            }\n\n            return leftType\n        }\n\n        if (node.node.type === \"ternary_expression\") {\n            const consequent = node.node.childForFieldName(\"consequence\")\n            const alternate = node.node.childForFieldName(\"alternative\")\n            if (!consequent || !alternate) return null\n\n            const trueType = this.inferType(new Expression(consequent, node.file))\n            const falseType = this.inferType(new Expression(alternate, node.file))\n            if (!falseType) return trueType\n            if (!trueType) return falseType\n\n            if (trueType instanceof NullTy) {\n                return new OptionTy(falseType)\n            }\n\n            if (falseType instanceof NullTy) {\n                return new OptionTy(trueType)\n            }\n\n            return trueType\n        }\n\n        if (node instanceof NamedNode) {\n            return this.inferTypeFromResolved(node)\n        }\n\n        return null\n    }\n\n    private primitiveType(name: string): PrimitiveTy | null {\n        const node = index.elementByName(IndexKey.Primitives, name)\n        if (!node) return null\n        return new PrimitiveTy(name, node, null)\n    }\n\n    private inferTypeMaybeOption(typeNode: SyntaxNode, resolved: Node): Ty | null {\n        const inferred = this.inferType(new Expression(typeNode, resolved.file))\n        if (inferred && !(inferred instanceof OptionTy) && typeNode.nextSibling?.text === \"?\") {\n            return new OptionTy(inferred)\n        }\n        return inferred\n    }\n\n    private inferTypeMaybeTlB(typeNode: SyntaxNode, resolved: Node): Ty | null {\n        const inferredType = this.inferTypeMaybeOption(typeNode, resolved)\n        if (inferredType instanceof PrimitiveTy) {\n            const tlb = resolved.node.childForFieldName(\"tlb\")\n            const tlbType = tlb?.childForFieldName(\"type\")\n            if (tlbType) {\n                inferredType.tlb = tlbType.text\n            }\n        }\n        return inferredType\n    }\n\n    private inferTypeFromResolved(resolved: NamedNode): Ty | null {\n        if (resolved instanceof Primitive) {\n            return new PrimitiveTy(resolved.name(), resolved, null)\n        }\n        if (resolved instanceof Struct) {\n            return new StructTy(resolved.name(), resolved)\n        }\n        if (resolved instanceof Message) {\n            return new MessageTy(resolved.name(), resolved)\n        }\n        if (resolved instanceof Trait) {\n            return new TraitTy(resolved.name(), resolved)\n        }\n        if (resolved instanceof Contract) {\n            return new ContractTy(resolved.name(), resolved)\n        }\n        return null\n    }\n\n    private inferChildFieldType(node: Node, fieldName: string): Ty | null {\n        const child = node.node.childForFieldName(fieldName)\n        if (!child) return null\n        return this.inferType(new Expression(child, node.file))\n    }\n}\n","import {AsmInstr} from \"@server/psi/Node\"\nimport {getStackPresentation} from \"@server/completion/data/types\"\nimport type {File} from \"@server/psi/File\"\nimport {Node as SyntaxNode} from \"web-tree-sitter\"\n\nexport interface GasConsumption {\n    value: number\n    unknown: boolean\n    exact: boolean\n}\n\nexport function computeSeqGasConsumption(\n    arg: SyntaxNode,\n    file: File,\n    gasSettings: {\n        loopGasCoefficient: number\n    },\n): GasConsumption {\n    const instructions = arg.children\n        .filter(it => it?.type === \"asm_expression\")\n        .filter(it => it !== null)\n        .map(it => new AsmInstr(it, file))\n\n    return computeGasConsumption(instructions, gasSettings)\n}\n\nexport function computeGasConsumption(\n    instructions: AsmInstr[],\n    gasSettings: {\n        loopGasCoefficient: number\n    },\n): GasConsumption {\n    let exact = true\n    let res = 0\n\n    for (const instr of instructions) {\n        const info = instr.info()\n        if (!info || info.doc.gas === \"\") {\n            exact = false\n            continue\n        }\n\n        const args = instr.arguments()\n        const continuations = args.filter(it => it.type === \"asm_sequence\")\n        const continuationsGas = continuations.map(it =>\n            computeSeqGasConsumption(it, instr.file, gasSettings),\n        )\n\n        exact &&= continuationsGas.reduce((prev, it) => prev && it.exact, true)\n\n        // For if-else choose the most expensive branch\n        if (\n            (info.mnemonic.startsWith(\"IFELSE\") || info.mnemonic.startsWith(\"IFREFELSEREF\")) &&\n            continuationsGas.length === 2\n        ) {\n            const trueBranchGas = continuationsGas[0].value\n            const falseBranchGas = continuationsGas[1].value\n\n            res += Math.max(falseBranchGas, trueBranchGas)\n        } else {\n            const allBranchesGas = continuationsGas.reduce((prev, gas) => prev + gas.value, 0)\n\n            res +=\n                info.mnemonic.startsWith(\"REPEAT\") ||\n                info.mnemonic.startsWith(\"UNTIL\") ||\n                info.mnemonic.startsWith(\"WHILE\")\n                    ? gasSettings.loopGasCoefficient * allBranchesGas\n                    : allBranchesGas\n        }\n\n        if (info.doc.gas.includes(\"|\") || info.doc.gas.includes(\"+\")) {\n            exact = false\n        }\n        if (\n            info.mnemonic === \"WHILE\" ||\n            info.mnemonic === \"REPEAT\" ||\n            info.mnemonic === \"UNTIL\" ||\n            info.mnemonic === \"IFNOT\" ||\n            info.mnemonic === \"IFREF\" ||\n            info.mnemonic === \"IFNOTREF\" ||\n            info.mnemonic === \"IFJMPREF\" ||\n            info.mnemonic === \"IFNOTJMPREF\" ||\n            info.mnemonic === \"IFREFELSEREF\" ||\n            info.mnemonic === \"IFELSE\" ||\n            info.mnemonic === \"IF\"\n        ) {\n            exact = false\n        }\n        res += Number.parseInt(info.doc.gas)\n    }\n\n    return {\n        value: res,\n        unknown: false,\n        exact,\n    }\n}\n\nexport function instructionPresentation(\n    gas: string | undefined,\n    stack: string | undefined,\n    format: string,\n): string {\n    if (!gas || gas === \"\") {\n        return \": no data\"\n    }\n    return format.replace(\"{gas}\", gas).replace(\"{stack}\", getStackPresentation(stack))\n}\n","import type {Ty} from \"./types/BaseTy\"\nimport type {NamedNode} from \"@server/psi/Node\"\n\nexport class Cache<TKey, TValue> {\n    private readonly data: Map<TKey, TValue>\n\n    public constructor() {\n        this.data = new Map()\n    }\n\n    public cached(key: TKey, cb: () => TValue): TValue {\n        const cached = this.data.get(key)\n        if (cached !== undefined) {\n            return cached\n        }\n\n        const value = cb()\n        this.data.set(key, value)\n        return value\n    }\n\n    public clear(): void {\n        this.data.clear()\n    }\n\n    public get size(): number {\n        return this.data.size\n    }\n}\n\nexport class CacheManager {\n    public readonly typeCache: Cache<number, Ty | null>\n    public readonly resolveCache: Cache<number, NamedNode | null>\n\n    public constructor() {\n        this.typeCache = new Cache()\n        this.resolveCache = new Cache()\n    }\n\n    public clear(): void {\n        console.info(\n            `Clearing caches (types: ${this.typeCache.size}, resolve: ${this.resolveCache.size})`,\n        )\n        this.typeCache.clear()\n        this.resolveCache.clear()\n    }\n}\n\nexport const CACHE = new CacheManager()\n","import * as cp from \"node:child_process\"\nimport {CompilerError, Severity, TactCompiler} from \"@server/compiler/TactCompiler\"\nimport {TactSettings} from \"@server/utils/settings\"\n\nexport interface MistiJsonOutput {\n    readonly kind: \"warnings\"\n    readonly warnings: MistiProjectWarning[]\n}\n\nexport interface MistiProjectWarning {\n    readonly projectName?: string\n    readonly warnings: string[]\n}\n\nexport interface MistiWarning {\n    readonly file: string\n    readonly line: number | string\n    readonly col: number | string\n    readonly detectorId?: string\n    readonly severity: string\n    readonly message: string\n}\n\nexport class MistiAnalyzer {\n    private static parseCompilerOutput(output: string): CompilerError[] {\n        const errors: CompilerError[] = []\n        const jsonStart = output.indexOf(\"{\")\n        const jsonEnd = output.lastIndexOf(\"}\")\n        if (jsonStart === -1 || jsonEnd === -1) {\n            return TactCompiler.parseCompilerOutput(output)\n        }\n\n        const jsonString = output.slice(jsonStart, jsonEnd + 1)\n        try {\n            const jsonData = JSON.parse(jsonString) as MistiJsonOutput\n            for (const projectWarning of jsonData.warnings) {\n                if (!Array.isArray(projectWarning.warnings)) continue\n\n                for (const warningJSON of projectWarning.warnings) {\n                    try {\n                        const warning = JSON.parse(warningJSON) as MistiWarning\n                        errors.push({\n                            file: warning.file.trim(),\n                            line: Number(warning.line) - 1,\n                            character: Number(warning.col) - 1,\n                            message: `[${warning.severity.toUpperCase()}] ${warning.message}`,\n                            id: warning.detectorId ?? \"\",\n                            severity: MistiAnalyzer.mapSeverity(warning.severity),\n                        })\n                    } catch {\n                        console.error(`Failed to parse internal warning: ${warningJSON}`)\n                    }\n                }\n            }\n            return errors\n        } catch (error: unknown) {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            console.error(`Failed to parse JSON output: ${error}`)\n        }\n\n        return TactCompiler.parseCompilerOutput(output)\n    }\n\n    private static mapSeverity(sev: string): Severity {\n        const s = sev.toUpperCase()\n        if (s === \"INFO\") return Severity.INFO\n        if (s === \"LOW\") return Severity.LOW\n        if (s === \"MEDIUM\") return Severity.MEDIUM\n        if (s === \"HIGH\") return Severity.HIGH\n        if (s === \"CRITICAL\") return Severity.CRITICAL\n        return Severity.HIGH\n    }\n\n    public static async checkFile(settings: TactSettings, path: string): Promise<CompilerError[]> {\n        return this.runMistiCommand(settings.linters.misti.binPath, \"--output-format\", \"json\", path)\n    }\n\n    public static async checkProject(settings: TactSettings): Promise<CompilerError[]> {\n        return this.runMistiCommand(\n            settings.linters.misti.binPath,\n            \"./tact.config.json\",\n            \"--output-format\",\n            \"json\",\n        )\n    }\n\n    private static async runMistiCommand(...args: string[]): Promise<CompilerError[]> {\n        return new Promise((resolve, reject) => {\n            const process = cp.exec(args.join(\" \"), (_error, stdout, stderr) => {\n                const output = stdout + \"\\n\" + stderr\n                const errors = this.parseCompilerOutput(output)\n                resolve(errors)\n            })\n\n            process.on(\"error\", error => {\n                console.error(`Failed to start misti: ${error}`)\n                reject(error)\n            })\n        })\n    }\n}\n","import * as cp from \"node:child_process\"\nimport {toolchain} from \"@server/toolchain\"\n\nexport enum Severity {\n    INFO = 1,\n    LOW = 2,\n    MEDIUM = 3,\n    HIGH = 4,\n    CRITICAL = 5,\n}\n\nexport interface CompilerError {\n    readonly line: number\n    readonly character: number\n    readonly message: string\n    readonly file: string\n    readonly length?: number\n    readonly id: string\n    readonly severity: Severity\n}\n\nexport class TactCompiler {\n    public static parseCompilerOutput(output: string): CompilerError[] {\n        const errors: CompilerError[] = []\n        const lines = output.split(\"\\n\")\n\n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i]\n            const match =\n                /^(Compilation error:|Syntax error:|Error:)([^:]+):(\\d+):(\\d+): (.+)$/.exec(line)\n            if (!match) continue\n\n            const [, _, file, lineNum, char, message] = match\n\n            let length = 0\n\n            for (let j = i + 1; j < lines.length; j++) {\n                const nextLine = lines[j]\n                if (\n                    nextLine.startsWith(\"Compilation error:\") ||\n                    nextLine.startsWith(\"Syntax error:\") ||\n                    nextLine.startsWith(\"Error:\")\n                ) {\n                    break\n                }\n                if (nextLine.includes(\"Line\") || nextLine.includes(\"|\") || nextLine.includes(\"^\")) {\n                    i = j\n                }\n\n                if (nextLine.includes(\"^\")) {\n                    length = nextLine.trim().length\n                }\n            }\n\n            errors.push({\n                file: file.trim(),\n                line: Number.parseInt(lineNum, 10) - 1,\n                character: Number.parseInt(char, 10) - 1,\n                message,\n                length,\n                id: \"\",\n                severity: Severity.CRITICAL,\n            } satisfies CompilerError)\n        }\n\n        return errors\n    }\n\n    public static async checkFile(path: string): Promise<CompilerError[]> {\n        return this.runCompilerCommand(toolchain.compilerPath, \"--check\", path)\n    }\n\n    public static async checkProject(): Promise<CompilerError[]> {\n        return this.runCompilerCommand(\n            toolchain.compilerPath,\n            \"--check\",\n            \"--config\",\n            \"./tact.config.json\",\n        )\n    }\n\n    private static async runCompilerCommand(...args: string[]): Promise<CompilerError[]> {\n        return new Promise((resolve, reject) => {\n            const process = cp.exec(args.join(\" \"), (_error, _stdout, stderr) => {\n                const errors = this.parseCompilerOutput(stderr)\n                resolve(errors)\n            })\n\n            process.on(\"error\", error => {\n                console.error(`Failed to start compiler: ${error}`)\n                reject(error)\n            })\n        })\n    }\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport type {File} from \"@server/psi/File\"\nimport {CallLike} from \"@server/psi/Node\"\nimport {createHash} from \"node:crypto\"\n\nexport function requireFunctionExitCode(\n    callNode: SyntaxNode,\n    file: File,\n    exitCodeFormat: \"decimal\" | \"hex\",\n): {\n    value: string\n    node: SyntaxNode\n} | null {\n    const call = new CallLike(callNode, file)\n    const rawArgs = call.rawArguments()\n    const args = rawArgs.filter(value => value.type === \"argument\")\n    if (args.length === 0) return null // no arguments, no need to resolve anything\n\n    const message = args.at(-1)\n    if (message && args.length > 1) {\n        const content = message.text.slice(1, -1)\n        const buff = createHash(\"sha256\").update(content).digest()\n        const code = (buff.readUInt32BE(0) % 63_000) + 1000\n\n        return {\n            value:\n                exitCodeFormat === \"hex\" ? `0x${code.toString(16).toUpperCase()}` : code.toString(),\n            node: message,\n        }\n    }\n\n    return null\n}\n","import {Expression, Node} from \"@server/psi/Node\"\nimport type * as lsp from \"vscode-languageserver\"\nimport {parentOfType} from \"@server/psi/utils\"\nimport {MapTy, NullTy, OptionTy, Ty} from \"@server/types/BaseTy\"\nimport {TypeInferer} from \"@server/TypeInferer\"\nimport type {TactSettings} from \"@server/utils/settings\"\n\nexport class CompletionContext {\n    public element: Node\n    public position: lsp.Position\n    public triggerKind: lsp.CompletionTriggerKind\n\n    public isType: boolean = false\n    public isExpression: boolean = false\n    public isStatement: boolean = false\n    public isSelectorExpressionInStatement: boolean = false\n    public insideTraitOrContract: boolean = false\n    public insideTrait: boolean = false\n    public topLevel: boolean = false\n    public topLevelInTraitOrContract: boolean = false\n    public topLevelInStructOrMessage: boolean = false\n    public inTlbSerialization: boolean = false\n    public afterDot: boolean = false\n    public beforeParen: boolean = false\n    public beforeSemicolon: boolean = false\n    public inNameOfFieldInit: boolean = false\n    public inMultilineStructInit: boolean = false\n    public inTraitList: boolean = false\n    public inParameter: boolean = false\n    public isMessageContext: boolean = false\n    public isBouncedMessage: boolean = false\n    public isInitOfName: boolean = false\n    public isCodeOfName: boolean = false\n    public afterFieldType: boolean = false\n    public insideImport: boolean = false\n    public inDestruct: boolean = false\n\n    public contextTy: Ty | null = null\n\n    public settings: TactSettings\n\n    public constructor(\n        content: string,\n        element: Node,\n        position: lsp.Position,\n        triggerKind: lsp.CompletionTriggerKind,\n        settings: TactSettings,\n    ) {\n        this.element = element\n        this.position = position\n        this.triggerKind = triggerKind\n        this.settings = settings\n\n        const lines = content.split(/\\n/g)\n        const currentLine = lines[position.line]\n        if (currentLine && currentLine[position.character - 1]) {\n            const symbolAfter = currentLine[position.character - 1]\n            this.afterDot = symbolAfter === \".\"\n            const symbolAfterDummy = currentLine[position.character + \"DummyIdentifier\".length]\n            this.beforeParen = symbolAfterDummy === \"(\"\n        }\n\n        const symbolAfter = element.file.symbolAt(element.node.endIndex)\n        this.beforeSemicolon = symbolAfter === \";\"\n\n        const parent = element.node.parent\n        if (!parent) return\n\n        if (parent.type !== \"expression_statement\" && parent.type !== \"field_access_expression\") {\n            this.isExpression = true\n        }\n\n        if (element.node.type === \"string\") {\n            this.isExpression = false\n            this.isStatement = false\n        }\n\n        if (\n            parent.type === \"field_access_expression\" &&\n            parent.parent?.type === \"expression_statement\"\n        ) {\n            this.isSelectorExpressionInStatement = true\n        }\n\n        if (parent.type === \"expression_statement\") {\n            this.isStatement = true\n        }\n\n        const valueNode = parent.childForFieldName(\"value\")\n        if (parent.type === \"instance_argument\") {\n            const nameNode = parent.childForFieldName(\"name\")\n            // hack for completion\n            if (valueNode === null || parent.text.includes(\"\\n\")) {\n                // Foo { name }\n                //       ^^^^\n                this.inNameOfFieldInit = true\n\n                const init = parentOfType(parent, \"instance_expression\")\n                const args = init?.childForFieldName(\"arguments\")\n                if (args) {\n                    const openBracket = args.firstChild\n                    const closeBracket = args.lastChild\n                    if (!openBracket || !closeBracket) return\n\n                    if (openBracket.startPosition.row != closeBracket.startPosition.row) {\n                        this.inMultilineStructInit = true\n                    }\n                }\n            }\n\n            if (nameNode !== null) {\n                this.contextTy = TypeInferer.inferType(new Expression(nameNode, this.element.file))\n            }\n        }\n\n        if (parent.type === \"assignment_statement\") {\n            const left = parent.childForFieldName(\"left\")\n            if (left) {\n                this.contextTy = TypeInferer.inferType(new Expression(left, this.element.file))\n            }\n        }\n\n        if (parent.type === \"let_statement\") {\n            const type = parent.childForFieldName(\"type\")\n            if (type) {\n                this.contextTy = TypeInferer.inferType(new Expression(type, this.element.file))\n            }\n        }\n\n        if (parent.type === \"storage_variable\" || parent.type === \"field\") {\n            if (parent.text.includes(\"\\n\")) {\n                // hack for:\n                // contract Foo {\n                //     <caret>\n                //     field: Int;\n                // }\n                this.topLevelInTraitOrContract = true\n                this.isExpression = false\n                this.isStatement = false\n            }\n\n            const type = parent.childForFieldName(\"type\")\n            if (type) {\n                this.contextTy = TypeInferer.inferType(new Expression(type, this.element.file))\n            }\n\n            const anchor = parent.childForFieldName(\"_completion_anchor\")\n            if (anchor && element.node.equals(anchor)) {\n                this.afterFieldType = true\n                this.isExpression = false\n                this.isStatement = false\n            }\n        }\n\n        if (element.node.type === \"type_identifier\") {\n            this.isType = true\n        }\n\n        if (parent.type === \"bounced_type\") {\n            this.isMessageContext = true\n        }\n\n        if (parent.type === \"parameter\") {\n            const grand = parent.parent\n            if (grand?.type === \"bounced_function\") {\n                this.isBouncedMessage = true\n                this.isMessageContext = true\n            }\n        }\n\n        if (parent.type === \"parameter\") {\n            const grand = parent.parent\n            if (grand?.type === \"receive_function\") {\n                this.isMessageContext = true\n            }\n            if (grand?.type === \"external_function\") {\n                this.isMessageContext = true\n            }\n        }\n\n        if (parent.type === \"tlb_serialization\") {\n            this.inTlbSerialization = true\n            this.isExpression = false\n            this.isStatement = false\n        }\n\n        if (parent.type === \"import\") {\n            this.insideImport = true\n        }\n\n        if (parent.type === \"destruct_bind\") {\n            this.inDestruct = true\n            this.isExpression = false\n            this.isStatement = false\n        }\n\n        if (\n            parent.type === \"let_statement\" &&\n            parent.childForFieldName(\"name\")?.equals(this.element.node)\n        ) {\n            this.isExpression = false\n            this.isStatement = false\n        }\n\n        if (\n            parent.type.endsWith(\"_function\") &&\n            parent.childForFieldName(\"name\")?.equals(this.element.node)\n        ) {\n            this.isExpression = false\n            this.isStatement = false\n            this.inParameter = true\n        }\n\n        if (parent.type === \"asm_expression\") {\n            this.isExpression = false\n        }\n\n        if (parent.type === \"ERROR\" && parent.parent?.type.endsWith(\"_function\")) {\n            this.isExpression = false\n            this.isStatement = false\n            this.inParameter = true\n        }\n\n        if (parent.type === \"trait_list\") {\n            this.inTraitList = true\n        }\n\n        if (parent.type === \"initOf\" && parent.childForFieldName(\"name\")?.equals(element.node)) {\n            this.isInitOfName = true\n        }\n\n        if (parent.type === \"codeOf\" && parent.childForFieldName(\"name\")?.equals(element.node)) {\n            this.isCodeOfName = true\n        }\n\n        if (parent.type === \"ERROR\" && parent.parent?.type === \"map_type\") {\n            this.isType = true\n            this.isExpression = false\n            this.isStatement = false\n        }\n\n        if (parent.type === \"ERROR\" && parent.parent?.type === \"parameter_list\") {\n            this.inParameter = true\n        }\n\n        // skip additional ERROR node\n        if (parent.type === \"ERROR\" && parent.parent?.type === \"source_file\") {\n            this.topLevel = true\n            this.isExpression = false\n            this.isStatement = false\n            this.isType = false\n        }\n\n        // skip additional ERROR node\n        if (\n            parent.type === \"ERROR\" &&\n            (parent.parent?.type === \"contract_body\" || parent.parent?.type === \"trait_body\")\n        ) {\n            this.topLevelInTraitOrContract = true\n            this.isExpression = false\n            this.isStatement = false\n            this.isType = false\n        }\n\n        // skip additional ERROR node\n        if (\n            parent.type === \"ERROR\" &&\n            (parent.parent?.type === \"struct_body\" || parent.parent?.type === \"message_body\")\n        ) {\n            this.topLevelInStructOrMessage = true\n            this.isExpression = false\n            this.isStatement = false\n            this.isType = false\n        }\n\n        const traitOrContractOwner = parentOfType(element.node, \"contract\", \"trait\")\n        this.insideTraitOrContract = traitOrContractOwner !== null\n        this.insideTrait = parentOfType(element.node, \"trait\") !== null\n    }\n\n    public matchContextTy(typeCb: () => Ty | null | undefined): boolean {\n        if (!this.contextTy) return true\n        if (!this.settings.completion.typeAware) return true\n\n        const type = typeCb()\n        if (!type) return false\n\n        if (this.contextTy instanceof OptionTy && type instanceof OptionTy) {\n            return this.contextTy.innerTy.qualifiedName() === type.innerTy.qualifiedName()\n        }\n\n        if (this.contextTy instanceof MapTy && type instanceof MapTy) {\n            return true\n        }\n\n        if (this.contextTy instanceof OptionTy && type instanceof NullTy) {\n            return true\n        }\n\n        if (type instanceof OptionTy) {\n            // Int and Int?\n            return type.innerTy.qualifiedName() === this.contextTy.qualifiedName()\n        }\n\n        if (this.contextTy instanceof OptionTy) {\n            // Int? and Int\n            return this.contextTy.innerTy.qualifiedName() === type.qualifiedName()\n        }\n\n        return this.contextTy.qualifiedName() === type.qualifiedName()\n    }\n\n    public expression(): boolean {\n        return (\n            (this.isExpression || this.isStatement) &&\n            !this.isType &&\n            !this.afterDot &&\n            !this.inTlbSerialization &&\n            !this.inNameOfFieldInit &&\n            !this.inTraitList &&\n            !this.inParameter &&\n            !this.afterFieldType &&\n            !this.insideImport &&\n            !this.isInitOfName &&\n            !this.isCodeOfName\n        )\n    }\n}\n","import {ResolveState, ScopeProcessor} from \"@server/psi/Reference\"\nimport {NamedNode, Node} from \"@server/psi/Node\"\nimport {Constant, Contract, Field, Fun, Message, Primitive, Struct, Trait} from \"@server/psi/Decls\"\nimport {CompletionItem, InsertTextFormat, CompletionItemKind} from \"vscode-languageserver-types\"\nimport {TypeInferer} from \"@server/TypeInferer\"\nimport {CompletionContext} from \"./CompletionContext\"\nimport {\n    CompletionWeight,\n    contextWeight,\n    WeightedCompletionItem,\n} from \"@server/completion/WeightedCompletionItem\"\nimport {MessageTy, StructTy} from \"@server/types/BaseTy\"\nimport {tactCodeBlock} from \"@server/documentation/documentation\"\nimport {trimPrefix} from \"@server/utils/strings\"\nimport {File} from \"@server/psi/File\"\n\nexport interface CompletionItemAdditionalInformation {\n    readonly name: string | undefined\n    readonly file: File | undefined\n    readonly elementFile: File | undefined\n}\n\nexport class ReferenceCompletionProcessor implements ScopeProcessor {\n    public constructor(private readonly ctx: CompletionContext) {}\n\n    public result: Map<string, CompletionItem> = new Map()\n\n    private allowedInContext(node: Node): boolean {\n        if (node instanceof NamedNode && node.name() === \"BaseTrait\") return false\n\n        if (this.ctx.isType) {\n            if (this.ctx.isMessageContext) {\n                // in `receive(msg: <caret>)` allow only messages\n                return node instanceof Message\n            }\n\n            if (this.ctx.inTraitList) {\n                // for trait list allow only traits\n                return node instanceof Trait\n            }\n\n            if (this.ctx.isInitOfName || this.ctx.isCodeOfName) {\n                // only contracts can be used in `initOf Name()` or in `codeOf Name`\n                return node instanceof Contract\n            }\n\n            // for types, we want to complete only types\n            return (\n                node instanceof Trait ||\n                node instanceof Struct ||\n                node instanceof Message ||\n                node instanceof Primitive\n            )\n        }\n\n        if (this.ctx.inDestruct) {\n            return node instanceof Field\n        }\n\n        // for non types context things like traits and primitives are prohibited\n        if (node instanceof Trait || node instanceof Primitive) return false\n        // but since structs and messages can be created like `Foo{}` we allow them\n        if (node instanceof Struct || node instanceof Message) return true\n        if (node instanceof Contract) return false // filter contracts for now\n\n        return true\n    }\n\n    public execute(node: Node, state: ResolveState): boolean {\n        if (!(node instanceof NamedNode)) return true\n\n        const prefix = state.get(\"prefix\") ?? \"\"\n        const name = trimPrefix(trimPrefix(node.name(), \"AnyMessage_\"), \"AnyStruct_\")\n        if (name.endsWith(\"DummyIdentifier\") || name === \"AnyStruct\" || name === \"AnyMessage\") {\n            return true\n        }\n\n        if (!this.allowedInContext(node)) {\n            return true\n        }\n\n        const additionalData = {\n            elementFile: node.file,\n            file: this.ctx.element.file,\n            name: name,\n        }\n\n        if (node instanceof Fun) {\n            // don't add `self.` prefix for global functions\n            const thisPrefix = prefix !== \"\" && node.owner() === null ? \"\" : prefix\n\n            const signature = node.signaturePresentation()\n            const hasNoParams =\n                node.parameters().length === 0 || (node.withSelf() && node.parameters().length == 1)\n\n            const needSemicolon = this.ctx.isStatement && !this.ctx.beforeSemicolon\n\n            // We want to place cursor in parens only if there are any parameters to write.\n            // and add brackets only if they are not there yet\n            const parensPart = this.ctx.beforeParen ? \"\" : hasNoParams ? \"()\" : \"($1)\"\n            const semicolonPart = needSemicolon ? \"$2;$0\" : \"\"\n            const insertText = thisPrefix + name + parensPart + semicolonPart\n\n            this.addItem({\n                label: thisPrefix + name,\n                kind: CompletionItemKind.Function,\n                labelDetails: {\n                    detail: signature,\n                },\n                documentation: tactCodeBlock(`fun ${name}${signature}`),\n                insertText: insertText,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: contextWeight(\n                    CompletionWeight.FUNCTION,\n                    this.ctx.matchContextTy(() => node.returnType()?.type()),\n                ),\n                data: additionalData,\n            })\n        } else if (node instanceof Struct || node instanceof Message) {\n            // we don't want to add `{}` for type completion\n            const bracesSnippet = this.ctx.isType ? \"\" : \"{$1}\"\n            const braces = this.ctx.isType ? \"\" : \"{}\"\n\n            this.addItem({\n                label: name,\n                labelDetails: {\n                    detail: braces,\n                },\n                kind: CompletionItemKind.Struct,\n                insertText: `${name}${bracesSnippet}$0`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: contextWeight(\n                    CompletionWeight.STRUCT,\n                    this.ctx.matchContextTy(() =>\n                        node instanceof Struct\n                            ? new StructTy(node.name(), node)\n                            : new MessageTy(node.name(), node),\n                    ),\n                ),\n                data: additionalData,\n            })\n        } else if (node instanceof Trait) {\n            this.addItem({\n                label: name,\n                kind: CompletionItemKind.TypeParameter,\n                insertText: `${name}$0`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.TRAIT,\n                data: additionalData,\n            })\n        } else if (node instanceof Contract) {\n            const parameters = node.initFunction()?.parametersPresentation() ?? \"()\"\n            const suffix = this.ctx.isInitOfName ? parameters : \"\"\n            const initFunction = node.initFunction()\n            const needParens = this.ctx.isInitOfName && !this.ctx.beforeParen\n            const hasParameters = initFunction !== null && initFunction.parameters().length > 0\n\n            const insertSuffix = needParens ? (hasParameters ? \"($1)\" : \"()\") : \"\"\n\n            this.addItem({\n                label: name,\n                labelDetails: {\n                    detail: suffix,\n                },\n                kind: CompletionItemKind.Constructor,\n                insertText: `${name}${insertSuffix}$0`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.CONTRACT,\n                data: additionalData,\n            })\n        } else if (node instanceof Primitive) {\n            this.addItem({\n                label: name,\n                kind: CompletionItemKind.Property,\n                insertText: name,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.PRIMITIVE,\n                data: additionalData,\n            })\n        } else if (node instanceof Constant) {\n            // don't add `self.` prefix for global constants\n            const thisPrefix = prefix !== \"\" && node.owner() === null ? \"\" : prefix\n\n            const typeNode = node.typeNode()\n            const value = node.value()\n            const valueType = typeNode?.type()?.qualifiedName() ?? \"\"\n            this.addItem({\n                label: thisPrefix + name,\n                kind: CompletionItemKind.Constant,\n                labelDetails: {\n                    detail: \": \" + valueType + \" = \" + (value?.node.text ?? \"unknown\"),\n                },\n                insertText: thisPrefix + name,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: contextWeight(\n                    CompletionWeight.CONSTANT,\n                    this.ctx.matchContextTy(() => typeNode?.type()),\n                ),\n                data: additionalData,\n            })\n        } else if (node instanceof Field) {\n            const owner = node.dataOwner()?.name() ?? \"\"\n\n            // don't add `self.` for completion of field in init\n            const thisPrefix = this.ctx.inNameOfFieldInit ? \"\" : prefix\n            const comma = this.ctx.inMultilineStructInit ? \",\" : \"\"\n            const suffix = this.ctx.inNameOfFieldInit ? `: $1${comma}$0` : \"\"\n\n            const typeNode = node.typeNode()\n            const valueType = typeNode?.type()?.qualifiedName() ?? \"\"\n            const details = this.ctx.inNameOfFieldInit ? `: ${valueType} ` : \": \" + valueType\n            const labelSuffix = this.ctx.inNameOfFieldInit ? ` ` : \"\" // needed to distinguish from variable\n\n            this.addItem({\n                label: thisPrefix + name + labelSuffix,\n                kind: CompletionItemKind.Property,\n                labelDetails: {\n                    detail: details,\n                    description: ` of ${owner}`,\n                },\n                insertText: thisPrefix + name + suffix,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: contextWeight(\n                    CompletionWeight.FIELD,\n                    this.ctx.matchContextTy(() => node.typeNode()?.type()),\n                ),\n                data: additionalData,\n            })\n        } else if (node.node.type === \"identifier\") {\n            const parent = node.node.parent\n            if (!parent) return true\n\n            if (\n                parent.type === \"let_statement\" ||\n                parent.type === \"foreach_statement\" ||\n                parent.type === \"catch_clause\"\n            ) {\n                const type = TypeInferer.inferType(node)\n                const typeName = type?.qualifiedName() ?? \"unknown\"\n\n                this.addItem({\n                    label: name,\n                    kind: CompletionItemKind.Variable,\n                    labelDetails: {\n                        description: ` ${typeName}`,\n                    },\n                    insertText: name,\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    weight: contextWeight(\n                        CompletionWeight.VARIABLE,\n                        this.ctx.matchContextTy(() => type),\n                    ),\n                    data: additionalData,\n                })\n            }\n        } else if (node.node.type === \"parameter\") {\n            const parent = node.node.parent\n            if (!parent) return true\n\n            const type = TypeInferer.inferType(node)\n            const typeName = type?.qualifiedName() ?? \"unknown\"\n\n            this.addItem({\n                label: name,\n                kind: CompletionItemKind.Variable,\n                labelDetails: {\n                    description: ` ${typeName}`,\n                },\n                insertText: name,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: contextWeight(\n                    CompletionWeight.PARAM,\n                    this.ctx.matchContextTy(() => type),\n                ),\n                data: additionalData,\n            })\n        } else {\n            this.addItem({\n                label: name,\n                weight: CompletionWeight.LOWEST,\n            })\n        }\n\n        return true\n    }\n\n    public addItem(node: WeightedCompletionItem): void {\n        if (node.label === \"\") return\n        const lookup = this.lookupString(node)\n        const prev = this.result.get(lookup)\n        if (prev && prev.kind === node.kind) return\n        this.result.set(lookup, node)\n    }\n\n    private lookupString(item: WeightedCompletionItem): string {\n        return (item.kind ?? 1).toString() + item.label\n    }\n}\n","import {CompletionItem} from \"vscode-languageserver-types\"\n\nexport enum CompletionWeight {\n    CONTEXT_ELEMENT = 0,\n    VARIABLE = 50,\n    PARAM = 60,\n    FIELD = 70,\n    KEYWORD = 80,\n    FUNCTION = 90,\n    SNIPPET = 95,\n    CONSTANT = 100,\n    PRIMITIVE = 105,\n    STRUCT = 110,\n    TRAIT = 120,\n    CONTRACT = 130,\n    LOWEST = 500,\n}\n\nexport function contextWeight(weight: CompletionWeight, match: boolean): CompletionWeight {\n    if (match) return weight\n    return weight + 500\n}\n\nexport type WeightedCompletionItem = CompletionItem & {\n    weight?: CompletionWeight\n}\n\nexport class CompletionResult {\n    public elements: WeightedCompletionItem[] = []\n\n    public add(...element: WeightedCompletionItem[]): void {\n        this.elements.push(...element)\n    }\n\n    public sorted(): CompletionItem[] {\n        if (this.elements.length === 0) return []\n\n        const sorted = this.elements.sort((a, b) => {\n            if (a.weight === undefined || b.weight === undefined) return 0\n            return a.weight - b.weight\n        })\n\n        let groupIndex = 0\n        let lastWeight = sorted[0].weight ?? 0\n\n        sorted.forEach(item => {\n            const weight = item.weight as number\n            if (lastWeight !== weight) {\n                groupIndex++\n                lastWeight = weight\n            }\n\n            item.sortText = groupIndex.toString()\n        })\n\n        return sorted\n    }\n}\n","import * as fs from \"node:fs\"\nimport * as path from \"node:path\"\nimport {Node as SyntaxNode} from \"web-tree-sitter\"\n\nexport interface AsmInstruction {\n    mnemonic: string\n    doc: {\n        opcode: string\n        stack: string\n        category: string\n        description: string\n        gas: string\n        fift: string\n        fift_examples: {\n            fift: string\n            description: string\n        }[]\n    }\n    since_version: number\n    alias_info?: AsmAlias\n}\n\nexport interface AsmAlias {\n    mnemonic: string\n    alias_of: string\n    doc_fift?: string\n    doc_stack?: string\n    description?: string\n    operands: Record<string, number | string>\n}\n\nexport interface AsmData {\n    instructions: AsmInstruction[]\n    aliases: AsmAlias[]\n}\n\nlet data: AsmData | null = null\n\nexport function asmData(): AsmData {\n    if (data !== null) {\n        return data\n    }\n\n    const filePath = path.join(__dirname, \"asm.json\")\n    const content = fs.readFileSync(filePath, \"utf8\")\n    data = JSON.parse(content) as AsmData\n    return data\n}\n\nexport function findInstruction(name: string, args: SyntaxNode[] = []): AsmInstruction | null {\n    const data = asmData()\n\n    const realName = adjustName(name, args)\n    const instruction = data.instructions.find(i => i.mnemonic === realName)\n    if (instruction) {\n        return instruction\n    }\n\n    const alias = data.aliases.find(i => i.mnemonic === name)\n    if (alias) {\n        const instruction = data.instructions.find(i => i.mnemonic === alias.alias_of)\n        if (instruction) {\n            return {\n                ...instruction,\n                alias_info: alias,\n            }\n        }\n    }\n\n    return null\n}\n\nfunction adjustName(name: string, args: SyntaxNode[]): string {\n    if (name === \"PUSHINT\") {\n        if (args.length === 0) return \"PUSHINT_4\"\n\n        const arg = Number.parseInt(args[0].text)\n        if (Number.isNaN(arg)) return \"PUSHINT_4\"\n\n        if (arg >= 0 && arg <= 15) return \"PUSHINT_4\"\n        if (arg >= -128 && arg <= 127) return \"PUSHINT_8\"\n        if (arg >= -32_768 && arg <= 32_767) return \"PUSHINT_16\"\n\n        return \"PUSHINT_LONG\"\n    }\n\n    if (name === \"PUSH\") {\n        if (args.length === 1 && args[0].type === \"asm_stack_register\") return \"PUSH\"\n        if (args.length === 2) return \"PUSH2\"\n        if (args.length === 3) return \"PUSH3\"\n        return name\n    }\n\n    if (name === \"XCHG0\") {\n        return \"XCHG_0I\"\n    }\n\n    if (name === \"XCHG\") {\n        return \"XCHG_IJ\"\n    }\n\n    return name\n}\n\nexport function getStackPresentation(rawStack: string | undefined): string {\n    if (!rawStack) return \"\"\n    const trimmedStack = rawStack.trim()\n    const prefix = trimmedStack.startsWith(\"-\") ? \"∅ \" : \"\"\n    const suffix = trimmedStack.endsWith(\"-\") ? \" ∅\" : \"\"\n    const stack = prefix + rawStack.replace(\"-\", \"→\") + suffix\n    return `(${stack})`\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class AsKeywordCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.afterFieldType\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        result.add({\n            label: \"as\",\n            labelDetails: {\n                detail: \" type\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"as $0\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.CONTEXT_ELEMENT,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {asmData, getStackPresentation} from \"@server/completion/data/types\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class AsmInstructionCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.element.node.type === \"tvm_instruction\"\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        const data = asmData()\n\n        for (const instruction of data.instructions) {\n            const name = this.adjustName(instruction.mnemonic)\n            const stack = getStackPresentation(instruction.doc.stack)\n\n            result.add({\n                label: name,\n                kind: CompletionItemKind.Function,\n                labelDetails: {\n                    detail: \" \" + stack,\n                    description: ` ${instruction.doc.gas}`,\n                },\n                detail: stack,\n                weight: CompletionWeight.CONTEXT_ELEMENT,\n            })\n        }\n\n        for (const alias of data.aliases) {\n            const stack = alias.doc_stack ? getStackPresentation(alias.doc_stack) : undefined\n            result.add({\n                label: alias.mnemonic,\n                kind: CompletionItemKind.Function,\n                detail: stack ?? `Alias of ${alias.alias_of}`,\n                weight: CompletionWeight.CONTEXT_ELEMENT,\n            })\n        }\n    }\n\n    private adjustName(name: string): string {\n        if (name.startsWith(\"PUSHINT_\")) return \"PUSHINT\"\n        if (name === \"XCHG_0I\") return \"XCHG0\"\n        if (name === \"XCHG_IJ\") return \"XCHG\"\n        if (name === \"XCHG_0I_LONG\") return \"XCHG\"\n        if (name === \"XCHG_1I\") return \"XCHG\"\n        return name\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class BouncedTypeCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.isType && ctx.isBouncedMessage\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        result.add({\n            label: \"bounced<Type>\",\n            kind: CompletionItemKind.Keyword,\n            insertText: \"bounced<$1>$0\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport type {CompletionResult} from \"@server/completion/WeightedCompletionItem\"\n\nexport class ContractDeclCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevel\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        result.add({\n            label: `contract`,\n            labelDetails: {\n                detail: \" Name {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"contract ${1:Name} {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n        })\n\n        result.add({\n            label: `contract`,\n            labelDetails: {\n                detail: \" Name with Trait {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"contract ${1:Name} with ${2:Trait} {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\nimport {parentOfType} from \"@server/psi/utils\"\nimport {StorageMembersOwner} from \"@server/psi/Decls\"\n\nexport class GetterCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevelInTraitOrContract\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const ownerNode = parentOfType(ctx.element.node, \"trait\", \"contract\")\n        if (!ownerNode) return\n\n        const owner = new StorageMembersOwner(ownerNode, ctx.element.file)\n\n        const fields = owner.fields()\n\n        fields.forEach(field => {\n            const type = field.typeNode()?.type()\n            if (\n                !type ||\n                field.name() === \"DummyIdentifier\" ||\n                field.name().endsWith(\"DummyIdentifier\")\n            ) {\n                return\n            }\n\n            result.add({\n                label: field.name(),\n                labelDetails: {\n                    description: `generate getter for \"${field.name()}\" field`,\n                },\n                kind: CompletionItemKind.Keyword,\n                insertText: `get fun ${field.name()}(): ${type.qualifiedName()} {\\n\\treturn self.${field.name()};\\n}`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.SNIPPET,\n            })\n        })\n\n        if (owner.node.type === \"contract\") {\n            result.add({\n                label: \"state\",\n                labelDetails: {\n                    description: `generate getter for all contract state`,\n                },\n                kind: CompletionItemKind.Keyword,\n                insertText: `get fun contractState(): ${owner.name()} {\\n\\treturn self;\\n}`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.SNIPPET,\n            })\n        }\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\nimport * as path from \"node:path\"\nimport * as fs from \"node:fs\"\nimport {File} from \"@server/psi/File\"\nimport {projectStdlibPath} from \"@server/toolchain/toolchain\"\nimport {trimSuffix} from \"@server/utils/strings\"\n\nexport class ImportPathCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.insideImport\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const file = ctx.element.file\n        const currentDir = path.dirname(file.path)\n\n        const importPath = trimSuffix(ctx.element.node.text.slice(1, -1), \"DummyIdentifier\")\n\n        if (importPath.startsWith(\"@stdlib/\") && projectStdlibPath) {\n            const libsDir = path.join(projectStdlibPath, \"libs\")\n            this.addEntries(libsDir, file, \"\", result)\n            return\n        }\n\n        if (importPath.startsWith(\"./\") || importPath.startsWith(\"../\")) {\n            const targetDir = path.join(currentDir, importPath)\n            this.addEntries(targetDir, file, \"\", result)\n            return\n        }\n\n        // On empty path:\n        // import \"<caret>\";\n        this.addEntries(currentDir, file, \"./\", result)\n\n        result.add({\n            label: \"@stdlib/\",\n            kind: CompletionItemKind.Folder,\n            weight: CompletionWeight.CONTEXT_ELEMENT,\n        })\n    }\n\n    private addEntries(dir: string, file: File, prefix: string, result: CompletionResult): void {\n        this.files(dir, file).forEach(name => {\n            this.addFile(`${prefix}${name}`, result)\n        })\n\n        this.dirs(dir).forEach(name => {\n            result.add({\n                label: name + \"/\",\n                kind: CompletionItemKind.Folder,\n                weight: CompletionWeight.CONTEXT_ELEMENT,\n            })\n        })\n    }\n\n    private addFile(name: string, result: CompletionResult): void {\n        result.add({\n            label: name,\n            kind: CompletionItemKind.File,\n            labelDetails: {\n                detail: \".tact\",\n            },\n            weight: CompletionWeight.CONTEXT_ELEMENT,\n        })\n    }\n\n    private files(dir: string, currentFile: File): string[] {\n        return fs\n            .readdirSync(dir)\n            .filter(file => file.endsWith(\".tact\"))\n            .map(file => path.basename(file, \".tact\"))\n            .filter(name => name !== currentFile.name)\n    }\n\n    private dirs(dir: string): string[] {\n        return fs.readdirSync(dir).filter(file => fs.lstatSync(path.join(dir, file)).isDirectory())\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {\n    CompletionResult,\n    CompletionWeight,\n    contextWeight,\n} from \"@server/completion/WeightedCompletionItem\"\nimport {NullTy, PrimitiveTy} from \"@server/types/BaseTy\"\n\nexport class KeywordsCompletionProvider implements CompletionProvider {\n    private readonly boolTy: PrimitiveTy = new PrimitiveTy(\"Bool\", null, null)\n    private readonly nullTy: NullTy = new NullTy()\n\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.expression() && !ctx.inNameOfFieldInit\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const expectedBool = ctx.matchContextTy(() => this.boolTy)\n        const expectedNull = ctx.matchContextTy(() => this.nullTy)\n\n        result.add({\n            label: \"true\",\n            kind: CompletionItemKind.Keyword,\n            weight: contextWeight(CompletionWeight.KEYWORD, expectedBool),\n        })\n\n        result.add({\n            label: \"false\",\n            kind: CompletionItemKind.Keyword,\n            weight: contextWeight(CompletionWeight.KEYWORD, expectedBool),\n        })\n\n        result.add({\n            label: \"null\",\n            kind: CompletionItemKind.Keyword,\n            weight: contextWeight(CompletionWeight.KEYWORD, expectedNull),\n        })\n\n        result.add({\n            label: \"initOf\",\n            labelDetails: {\n                detail: \" Contract(params)\",\n                description: \" StateInit\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"initOf $1($2)$0\",\n            insertTextFormat: InsertTextFormat.Snippet,\n        })\n\n        result.add({\n            label: \"codeOf\",\n            labelDetails: {\n                detail: \" Contract\",\n                description: \" Cell\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"codeOf $1$0\",\n            insertTextFormat: InsertTextFormat.Snippet,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class MapTypeCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return (\n            ctx.isType &&\n            !ctx.inTraitList &&\n            !ctx.isMessageContext &&\n            !ctx.isInitOfName &&\n            !ctx.isCodeOfName\n        )\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        result.add({\n            label: \"map<K, V>\",\n            kind: CompletionItemKind.Keyword,\n            insertText: \"map<${1:Int}, ${2:String}>\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class MemberFunctionCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevelInTraitOrContract\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const funLabel = \"fun\"\n        const funTemplate = \"fun $1($2)$3 {$0}\"\n        const modifiers = [\"inline\", \"get\"]\n\n        result.add({\n            label: funLabel,\n            labelDetails: {\n                detail: \" name() {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: funTemplate,\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        modifiers.forEach(modifier => {\n            result.add({\n                label: modifier + \" \" + funLabel,\n                labelDetails: {\n                    detail: \" name() {}\",\n                },\n                kind: CompletionItemKind.Keyword,\n                insertText: modifier + \" \" + funTemplate,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n        })\n\n        if (ctx.insideTrait) {\n            result.add({\n                label: \"abstract fun\",\n                labelDetails: {\n                    detail: \" name();\",\n                },\n                kind: CompletionItemKind.Keyword,\n                insertText: \"abstract fun $1($2)$3;\",\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n\n            result.add({\n                label: \"virtual fun\",\n                labelDetails: {\n                    detail: \" name() {}\",\n                },\n                kind: CompletionItemKind.Keyword,\n                insertText: \"virtual fun $1($2)$3 {$0}\",\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n        }\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class MessageMethodCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevelInTraitOrContract\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        const options = [\"receive\", \"external\"]\n        options.forEach(name => {\n            result.add({\n                label: name,\n                labelDetails: {\n                    detail: \"(msg: <type>) {}\",\n                },\n                kind: CompletionItemKind.Keyword,\n                insertText: `${name}(msg: $1) {$0}`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n\n            result.add({\n                label: name,\n                labelDetails: {\n                    detail: `(\"<message>\") {}`,\n                },\n                kind: CompletionItemKind.Keyword,\n                insertText: `${name}(\"$1\") {$0}`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n\n            result.add({\n                label: name,\n                labelDetails: {\n                    detail: `() {}`,\n                },\n                kind: CompletionItemKind.Keyword,\n                insertText: `${name}() {$0}`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n        })\n\n        result.add({\n            label: \"bounced\",\n            labelDetails: {\n                detail: \"(msg: <type>) {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"bounced(msg: $1) {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: \"init\",\n            labelDetails: {\n                detail: \"() {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"init($1) {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {parentOfType} from \"@server/psi/utils\"\nimport {StorageMembersOwner} from \"@server/psi/Decls\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class OverrideCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevelInTraitOrContract\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const ownerNode = parentOfType(ctx.element.node, \"trait\", \"contract\")\n        if (!ownerNode) return\n\n        const owner = new StorageMembersOwner(ownerNode, ctx.element.file)\n\n        const inheritMethods = owner.inheritTraits().flatMap(trait => trait.methods())\n\n        const added: Set<string> = new Set()\n\n        // add already defined methods to avoid duplicates\n        for (const ownMethod of owner.ownMethods()) {\n            added.add(ownMethod.name())\n        }\n\n        for (const method of inheritMethods) {\n            if (added.has(method.name())) continue\n\n            const methodOwner = method.owner()\n            if (methodOwner === null) continue\n\n            result.add({\n                label: `override`,\n                kind: CompletionItemKind.Function,\n                labelDetails: {\n                    detail: ` fun ${method.name()}${method.signaturePresentation()} {} of ${methodOwner.name()}`,\n                },\n                insertText: `override fun ${method.name()}${method.signaturePresentation()} {$0}`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n\n            added.add(method.name())\n        }\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\nimport {asLspRange} from \"@server/utils/position\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\n\nexport class PostfixCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.afterDot\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        this.postfix(ctx, \"not\", \"Negate expression\", \"!$expr\", result)\n        this.postfix(ctx, \"call\", \"Use as function argument\", \"($expr)\", result)\n\n        if (ctx.isSelectorExpressionInStatement) {\n            this.postfix(ctx, \"if\", \"Create if statement\", \"if ($expr) {}\", result)\n            this.postfix(ctx, \"let\", \"Create variable\", \"let name = $expr;\", result)\n            this.postfix(ctx, \"repeat\", \"Create repeat loop\", \"repeat($expr) {}\", result)\n            this.postfix(ctx, \"do\", \"Create do-until loop\", \"do {} until ($expr);\", result)\n        }\n    }\n\n    private postfix(\n        ctx: CompletionContext,\n        selector: string,\n        description: string,\n        snippet: string,\n        result: CompletionResult,\n    ): void {\n        const expr = ctx.element.node.parent\n        if (expr?.type !== \"field_access_expression\") return\n        const object = expr.childForFieldName(\"object\")\n        if (!object) return\n\n        const finalObject = this.unwrapParens(object)\n        if (!finalObject) return\n\n        const objectRange = asLspRange(object)\n\n        const replacedSnippet = snippet.replace(\"$expr\", finalObject.text)\n        const preparedSnippet =\n            ctx.beforeSemicolon && snippet.endsWith(\";\")\n                ? replacedSnippet.slice(0, -1)\n                : replacedSnippet\n\n        const realRange = {\n            start: objectRange.start,\n            end: {\n                line: objectRange.end.line,\n                character: objectRange.end.character + 1, // + `.`\n            },\n        }\n\n        result.add({\n            label: selector,\n            labelDetails: {\n                description: description,\n            },\n            insertText: \"$0\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            kind: CompletionItemKind.Snippet,\n            additionalTextEdits: [\n                {\n                    newText: preparedSnippet,\n                    range: realRange,\n                },\n            ],\n            textEditText: preparedSnippet,\n            weight: CompletionWeight.SNIPPET,\n        })\n    }\n\n    private unwrapParens(object: SyntaxNode | null): SyntaxNode | null {\n        if (!object) return null\n        if (object.type === \"parenthesized_expression\") {\n            return object.children[1] ?? null\n        }\n        return object\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {Reference, ResolveState, ScopeProcessor} from \"@server/psi/Reference\"\nimport {ReferenceCompletionProcessor} from \"@server/completion/ReferenceCompletionProcessor\"\nimport {NamedNode, Node} from \"@server/psi/Node\"\nimport {FieldsOwner} from \"@server/psi/Decls\"\nimport type {CompletionResult} from \"@server/completion/WeightedCompletionItem\"\n\nenum CompletionKind {\n    ONLY_FIELDS = \"ONLY_FIELDS\",\n    ALL = \"ALL\",\n}\n\nexport class ReferenceCompletionProvider implements CompletionProvider {\n    public constructor(private readonly ref: Reference) {}\n\n    public isAvailable(ctx: CompletionContext): boolean {\n        return (\n            !ctx.topLevelInTraitOrContract &&\n            !ctx.topLevelInStructOrMessage &&\n            !ctx.topLevel &&\n            !ctx.inTlbSerialization &&\n            !ctx.afterFieldType &&\n            !ctx.insideImport &&\n            !ctx.inParameter\n        )\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const state = new ResolveState()\n        const processor = new ReferenceCompletionProcessor(ctx)\n\n        const kind = this.processFields(processor, state, ctx)\n\n        // process usual autocompletion for only non-instance expressions\n        if (kind === CompletionKind.ALL) {\n            this.ref.processResolveVariants(processor, state.withValue(\"completion\", \"true\"))\n        }\n\n        result.add(...processor.result.values())\n    }\n\n    public processFields(\n        processor: ScopeProcessor,\n        state: ResolveState,\n        ctx: CompletionContext,\n    ): CompletionKind {\n        const parent = ctx.element.node.parent\n        // Foo { value: 10 }\n        //     ^^^^^^^^^^^^^ looking for\n        if (parent?.type !== \"instance_argument\") return CompletionKind.ALL\n\n        // Foo { value: 10 }\n        //       ^^^^^ this\n        const name = parent.childForFieldName(\"name\")\n        if (!name) return CompletionKind.ALL\n        if (!name.equals(ctx.element.node)) return CompletionKind.ALL\n\n        // Foo { value: 10 }\n        // ^^^^^^^^^^^^^^^^^ this\n        const grand = parent.parent?.parent\n        if (grand?.type !== \"instance_expression\") return CompletionKind.ALL\n\n        // Foo { value: 10 }\n        // ^^^ this\n        const typeExpr = grand.childForFieldName(\"name\")\n        if (!typeExpr) return CompletionKind.ALL\n\n        const resolvedType = Reference.resolve(new NamedNode(typeExpr, ctx.element.file))\n        if (resolvedType === null) return CompletionKind.ALL\n        if (!(resolvedType instanceof FieldsOwner)) return CompletionKind.ALL\n\n        const fields = resolvedType.fields()\n\n        const initializedFieldsNode = grand.childForFieldName(\"arguments\")\n        if (!initializedFieldsNode) return CompletionKind.ALL\n        const initializedFields = initializedFieldsNode.children\n            .filter(it => it?.type === \"instance_argument\")\n            .filter(it => it !== null)\n\n        const fieldNames: Set<string> = new Set()\n        fields.forEach(field => {\n            fieldNames.add(field.name())\n        })\n\n        const alreadyInitialized: Set<string> = new Set()\n        initializedFields.forEach(it => {\n            const name = it.childForFieldName(\"name\")\n            if (!name) return\n            const fieldName = name.text\n            alreadyInitialized.add(fieldName)\n        })\n\n        for (const field of fields) {\n            if (alreadyInitialized.has(field.name())) continue\n            if (!processor.execute(field, state)) break\n        }\n\n        const variablesProcessor = new (class implements ScopeProcessor {\n            public execute(node: Node, state: ResolveState): boolean {\n                if (node.node.type !== \"identifier\" && node.node.type !== \"parameter\") return true\n\n                const name = node instanceof NamedNode ? node.name() : node.node.text\n                if (!fieldNames.has(name) || alreadyInitialized.has(name)) {\n                    // no such field for short initialization\n                    // or already initialized\n                    return true\n                }\n\n                return processor.execute(node, state)\n            }\n        })()\n\n        this.ref.processBlock(variablesProcessor, state)\n\n        return CompletionKind.ONLY_FIELDS\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {funNodesTypes, parentOfType} from \"@server/psi/utils\"\nimport {Fun} from \"@server/psi/Decls\"\nimport {OptionTy, PrimitiveTy} from \"@server/types/BaseTy\"\nimport {TypeInferer} from \"@server/TypeInferer\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class ReturnCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.isStatement\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const outerFunctionNode = parentOfType(ctx.element.node, ...funNodesTypes())\n        if (!outerFunctionNode) return\n        const outerFunction = new Fun(outerFunctionNode, ctx.element.file)\n\n        const returnTypeExpr = outerFunction.returnType()\n        if (!returnTypeExpr) {\n            result.add({\n                label: \"return;\",\n                kind: CompletionItemKind.Keyword,\n                insertText: \"return;\",\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n            return\n        }\n\n        const returnType = TypeInferer.inferType(returnTypeExpr)\n        if (!returnType) return\n\n        result.add({\n            label: \"return <expr>;\",\n            kind: CompletionItemKind.Keyword,\n            insertText: \"return $0;\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        if (returnType instanceof PrimitiveTy && returnType.name() === \"Bool\") {\n            result.add({\n                label: \"return true;\",\n                kind: CompletionItemKind.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n\n            result.add({\n                label: \"return false;\",\n                kind: CompletionItemKind.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n        }\n\n        if (returnType instanceof PrimitiveTy && returnType.name() === \"Int\") {\n            result.add({\n                label: \"return 0;\",\n                kind: CompletionItemKind.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n        }\n\n        if (returnType instanceof PrimitiveTy && returnType.name() === \"String\") {\n            result.add({\n                label: 'return \"\";',\n                kind: CompletionItemKind.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n        }\n\n        if (returnType instanceof OptionTy) {\n            result.add({\n                label: \"return null;\",\n                kind: CompletionItemKind.Snippet,\n                weight: CompletionWeight.KEYWORD,\n            })\n        }\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class SelfCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.expression() && ctx.insideTraitOrContract\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        result.add({\n            label: \"self\",\n            kind: CompletionItemKind.Keyword,\n            weight: CompletionWeight.LOWEST,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class SnippetsCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return (\n            ctx.isStatement &&\n            !ctx.isExpression &&\n            !ctx.topLevel &&\n            !ctx.afterDot &&\n            !ctx.topLevelInTraitOrContract &&\n            !ctx.topLevelInStructOrMessage &&\n            !ctx.inTlbSerialization\n        )\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        result.add({\n            label: \"let\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"let ${1:name} = ${2:value};\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"lett\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"let ${1:name}: ${2:Int} = ${3:value};\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"if\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"if (${1:condition}) {\\n\\t${0}\\n}\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"ife\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"if (${1:condition}) {\\n\\t${2}\\n} else {\\n\\t${0}\\n}\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"while\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"while (${1:condition}) {\\n\\t${0}\\n}\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"until\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"do {\\n\\t${0}\\n} until (${1:condition});\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"do\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"do {\\n\\t${0}\\n} until (${1:condition});\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"repeat\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"repeat(${1:index}) {\\n\\t${0}\\n}\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"foreach\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"foreach (${1:key}, ${2:value} in ${3:map}) {\\n\\t${0}\\n}\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"try\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"try {\\n\\t${0}\\n}\",\n            weight: CompletionWeight.SNIPPET,\n        })\n\n        result.add({\n            label: \"try-catch\",\n            kind: CompletionItemKind.Snippet,\n            insertTextFormat: InsertTextFormat.Snippet,\n            insertText: \"try {\\n\\t${1}\\n} catch (e) {\\n\\t${2}\\n}\",\n            weight: CompletionWeight.SNIPPET,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\nimport {Field} from \"@server/psi/Decls\"\n\nexport class TlbSerializationCompletionProvider implements CompletionProvider {\n    // see https://docs.tact-lang.org/book/integers/#common-serialization-types\n    private readonly types: string[] = [\n        \"uint8\",\n        \"uint16\",\n        \"uint32\",\n        \"uint64\",\n        \"uint128\",\n        \"uint256\",\n        \"int8\",\n        \"int16\",\n        \"int32\",\n        \"int64\",\n        \"int128\",\n        \"int256\",\n        \"int257\",\n        \"coins\",\n        \"int{X}\",\n        \"uint{X}\",\n    ]\n\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.inTlbSerialization\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const fieldNode = ctx.element.node.parent?.parent\n        if (fieldNode?.type !== \"field\" && fieldNode?.type !== \"storage_variable\") return\n\n        const field = new Field(fieldNode, ctx.element.file)\n        const type = field.typeNode()?.type()\n        if (!type) return\n\n        const semicolonPart = ctx.beforeSemicolon ? \"\" : \";\"\n\n        const typeName = type.name()\n        if (typeName === \"Cell\" || typeName === \"Slice\" || typeName === \"Builder\") {\n            result.add({\n                label: \"remaining\",\n                kind: CompletionItemKind.Keyword,\n                insertText: `remaining${semicolonPart}`,\n                weight: CompletionWeight.CONTEXT_ELEMENT,\n            })\n            return\n        }\n\n        if (typeName === \"Int\") {\n            for (const type of this.types) {\n                result.add({\n                    label: type,\n                    kind: CompletionItemKind.Keyword,\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    insertText: type.includes(\"{X}\")\n                        ? type.replace(\"{X}\", \"$1\")\n                        : type + semicolonPart,\n                    weight: CompletionWeight.CONTEXT_ELEMENT,\n                })\n            }\n        }\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class TopLevelCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevel\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        result.add({\n            label: `import`,\n            labelDetails: {\n                detail: ` \"\";`,\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: `import \"$1\";$0`,\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: `struct`,\n            labelDetails: {\n                detail: \" Name {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"struct ${1:Name} {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: `message`,\n            labelDetails: {\n                detail: \" Name {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"message ${1:Name} {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: `message`,\n            labelDetails: {\n                detail: \"(0xID) Name {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"message(${1:0x00}) ${2:Name} {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: `trait`,\n            labelDetails: {\n                detail: \" Name {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"trait ${1:Name} {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: `trait`,\n            labelDetails: {\n                detail: \" Name with Other {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"trait ${1:Name} with ${2:Other} {$0}\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: `const`,\n            labelDetails: {\n                detail: \" Foo: <type> = <value>\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"const ${1:Foo}: ${2:Int} = ${3:0};$0\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class TopLevelFunctionCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevel\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        const funLabel = \" name() {}\"\n        const funTemplate = \"$1($2)$3 {$0}\"\n        const extendsTemplate = \"$1(self: $2$3)$4 {$0}\"\n\n        result.add({\n            label: `fun`,\n            labelDetails: {\n                detail: funLabel,\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: `fun ${funTemplate}`,\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: `asm fun`,\n            labelDetails: {\n                detail: funLabel,\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: `asm fun ${funTemplate}`,\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: `native`,\n            labelDetails: {\n                detail: funLabel,\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: `@name($4)\\nnative $1($2)$3;$0`,\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: \"extends fun\",\n            labelDetails: {\n                detail: \" name(self: <type>) {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: `extends fun ${extendsTemplate}`,\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: \"extends mutates\",\n            labelDetails: {\n                detail: \" name(self: <type>) {}\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: `extends mutates fun ${extendsTemplate}`,\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n\n        result.add({\n            label: \"extends native\",\n            labelDetails: {\n                detail: \" name(self: <type>);\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: `@name($5)\\nextends native $1(self: $2$3)$4;`,\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class TraitOrContractConstantsCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevelInTraitOrContract\n    }\n\n    public addCompletion(_ctx: CompletionContext, result: CompletionResult): void {\n        result.add({\n            label: `const`,\n            labelDetails: {\n                detail: \" Foo: <type> = <value>\",\n            },\n            kind: CompletionItemKind.Keyword,\n            insertText: \"const ${1:Foo}: ${2:Int} = ${3:0};$0\",\n            insertTextFormat: InsertTextFormat.Snippet,\n            weight: CompletionWeight.KEYWORD,\n        })\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {parentOfType} from \"@server/psi/utils\"\nimport {StorageMembersOwner} from \"@server/psi/Decls\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\n\nexport class TraitOrContractFieldsCompletionProvider implements CompletionProvider {\n    public isAvailable(ctx: CompletionContext): boolean {\n        return ctx.topLevelInTraitOrContract\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        const ownerNode = parentOfType(ctx.element.node, \"trait\", \"contract\")\n        if (!ownerNode) return\n\n        const owner = new StorageMembersOwner(ownerNode, ctx.element.file)\n\n        const inheritFields = owner.inheritTraits().flatMap(trait => trait.fields())\n\n        const added: Set<string> = new Set()\n\n        // add already defined fields to avoid duplicates\n        for (const ownField of owner.ownFields()) {\n            added.add(ownField.name())\n        }\n\n        for (const field of inheritFields) {\n            if (added.has(field.name())) continue\n\n            const fieldOwner = field.owner()\n            if (fieldOwner === null) continue\n\n            const type = field.typeNode()?.type()?.qualifiedName() ?? \"unknown\"\n\n            result.add({\n                label: `${field.name()}: ${type};`,\n                kind: CompletionItemKind.Property,\n                labelDetails: {\n                    detail: ` of ${fieldOwner.name()}`,\n                },\n                insertText: `${field.name()}: ${type};$0`,\n                insertTextFormat: InsertTextFormat.Snippet,\n                weight: CompletionWeight.CONTEXT_ELEMENT,\n            })\n\n            added.add(field.name())\n        }\n    }\n}\n","import type {CompletionProvider} from \"@server/completion/CompletionProvider\"\nimport {CompletionItemKind, InsertTextFormat} from \"vscode-languageserver-types\"\nimport type {CompletionContext} from \"@server/completion/CompletionContext\"\nimport {CompletionResult, CompletionWeight} from \"@server/completion/WeightedCompletionItem\"\nimport {Field} from \"@server/psi/Decls\"\n\nexport class TypeTlbSerializationCompletionProvider implements CompletionProvider {\n    // see https://docs.tact-lang.org/book/integers/#common-serialization-types\n    private readonly types: string[] = [\n        \"uint8\",\n        \"uint16\",\n        \"uint32\",\n        \"uint64\",\n        \"uint128\",\n        \"uint256\",\n        \"int8\",\n        \"int16\",\n        \"int32\",\n        \"int64\",\n        \"int128\",\n        \"int256\",\n        \"int257\",\n        \"coins\",\n    ]\n\n    public isAvailable(ctx: CompletionContext): boolean {\n        if (!ctx.isType) return false\n        const node = ctx.element.node\n        const parent = node.parent\n        if (!parent) return false\n        const insideContract = parent.parent?.type === \"contract_body\"\n\n        if (parent.type === \"storage_variable\" || parent.type === \"field\") {\n            const field = new Field(parent, ctx.element.file)\n            const typeNode = field.typeNode()\n            if (!typeNode) return false\n            // contract Foo {\n            // ^^^^^^^^ parent is contract\n            //\n            //     foo: <caret>;\n            //     ^^^^^^^^^^^^^ field is complete\n            // }\n            return insideContract && typeNode.node.equals(node)\n        }\n\n        // contract Foo {\n        // ^^^^^^^^ parent is contract\n        //\n        //     foo: <caret> <--------------\n        //     |  ^ ^^^^^^^ type context  |\n        //     |  |                       |\n        //     |  colon before            |\n        // }   |                          |\n        //     field is not complete ------\n        //\n        return parent.type === \"ERROR\" && insideContract && node.previousSibling?.text === \":\"\n    }\n\n    public addCompletion(ctx: CompletionContext, result: CompletionResult): void {\n        for (const type of this.types) {\n            // contract Foo {\n            //     foo: <caret>;\n            //                 ^ semi, don't add second one\n            // }\n            const semicolon = ctx.beforeSemicolon ? \"\" : \";\"\n\n            result.add({\n                label: type[0].toUpperCase() + type.slice(1),\n                kind: CompletionItemKind.Keyword,\n                insertTextFormat: InsertTextFormat.Snippet,\n                insertText: `Int as ${type}${semicolon}`,\n                weight: CompletionWeight.CONTEXT_ELEMENT,\n            })\n        }\n    }\n}\n","import {createConnection, ProposedFeatures} from \"vscode-languageserver/node\"\n\nexport const connection = createConnection(ProposedFeatures.all)\n","import * as lsp from \"vscode-languageserver\"\nimport {TextDocuments} from \"vscode-languageserver\"\nimport {TextDocument} from \"vscode-languageserver-textdocument\"\n\nexport interface TextDocumentChange2 {\n    changes: {\n        range: lsp.Range\n        rangeOffset: number\n        rangeLength: number\n        text: string\n    }[]\n}\n\nexport class DocumentStore extends TextDocuments<TextDocument> {\n    public constructor(_connection: lsp.Connection) {\n        super({\n            create: TextDocument.create,\n            update: (doc, changes, version) => {\n                const event: TextDocumentChange2 = {changes: []}\n\n                for (const change of changes) {\n                    if (!lsp.TextDocumentContentChangeEvent.isIncremental(change)) {\n                        break\n                    }\n                    const rangeOffset = doc.offsetAt(change.range.start)\n                    event.changes.push({\n                        text: change.text,\n                        range: change.range,\n                        rangeOffset,\n                        rangeLength:\n                            // eslint-disable-next-line @typescript-eslint/no-deprecated\n                            change.rangeLength ?? doc.offsetAt(change.range.end) - rangeOffset,\n                    })\n                }\n                return TextDocument.update(doc, changes, version)\n            },\n        })\n\n        super.listen(_connection)\n    }\n}\n\nexport function getOffsetFromPosition(fileContent: string, line: number, column: number): number {\n    const lines = fileContent.split(\"\\n\")\n    if (line < 0 || line > lines.length) {\n        return 0\n    }\n\n    const targetLine = lines[line]\n    if (column < 1 || column > targetLine.length + 1) {\n        return 0\n    }\n\n    let offset = 0\n    for (let i = 0; i < line; i++) {\n        offset += lines[i].length + 1 // +1 for '\\n'\n    }\n    offset += column - 1\n    return offset\n}\n","import {AsmInstruction, getStackPresentation} from \"@server/completion/data/types\"\n\nfunction formatOperands(operands: Record<string, number | string>): string {\n    return Object.entries(operands)\n        .map(([_, value]) => value.toString())\n        .join(\" \")\n}\n\nexport function generateAsmDoc(instruction: AsmInstruction): string | null {\n    const stackInfo = instruction.doc.stack\n        ? `- Stack (top is on the right): \\`${getStackPresentation(instruction.doc.stack)}\\``\n        : \"\"\n\n    const gas = instruction.doc.gas.length > 0 ? instruction.doc.gas : `unknown`\n\n    const actualInstructionDescription = [\n        \"```\",\n        instruction.mnemonic,\n        \"```\",\n        stackInfo,\n        `- Gas: \\`${gas}\\``,\n        \"\",\n        instruction.doc.description,\n        \"\",\n        \"\",\n    ]\n\n    if (instruction.alias_info) {\n        const operandsStr = formatOperands(instruction.alias_info.operands) + \" \"\n        const aliasInfoDescription = ` (alias of ${operandsStr}${instruction.alias_info.alias_of})`\n\n        const alias = instruction.alias_info\n        const stackInfo = alias.doc_stack\n            ? `- Stack (top is on the right): \\`${getStackPresentation(alias.doc_stack)}\\``\n            : \"\"\n\n        return [\n            \"```\",\n            alias.mnemonic + aliasInfoDescription,\n            \"```\",\n            stackInfo,\n            \"\",\n            alias.description ?? \"\",\n            \"\",\n            \"---\",\n            \"Aliased instruction info:\",\n            \"\",\n            ...actualInstructionDescription,\n        ].join(\"\\n\")\n    }\n\n    return actualInstructionDescription.join(\"\\n\")\n}\n","import {NamedNode, Node} from \"@server/psi/Node\"\nimport {TypeInferer} from \"@server/TypeInferer\"\nimport {\n    Constant,\n    Contract,\n    Field,\n    FieldsOwner,\n    Fun,\n    InitFunction,\n    Message,\n    MessageFunction,\n    Struct,\n    Trait,\n} from \"@server/psi/Decls\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {trimPrefix} from \"@server/utils/strings\"\nimport * as compiler from \"@server/compiler/utils\"\nimport {getDocumentSettings, TactSettings} from \"@server/utils/settings\"\nimport {File} from \"@server/psi/File\"\nimport {Position} from \"vscode-languageclient\"\nimport {asLspPosition} from \"@server/utils/position\"\nimport {FieldsOwnerTy, sizeOfPresentation} from \"@server/types/BaseTy\"\n\nconst CODE_FENCE = \"```\"\nconst DOC_TMPL = `${CODE_FENCE}tact\\n{signature}\\n${CODE_FENCE}\\n{documentation}\\n`\nexport const tactCodeBlock = (s: string): string => `${CODE_FENCE}tact\\n${s}\\n${CODE_FENCE}`\n\n/**\n * Returns the documentation for the given symbol in Markdown format, or null\n * if there is no documentation for the element.\n * @param node for which we need documentation\n * @param place where symbol is used\n */\nexport async function generateDocFor(node: NamedNode, place: SyntaxNode): Promise<string | null> {\n    const settings = await getDocumentSettings(node.file.uri)\n    const astNode = node.node\n\n    function renderOwnerPresentation(symbol: Fun | Constant | Field): string | null {\n        const owner = symbol.owner()\n        if (!owner) return null // not possible in correct code\n        return owner.kind() + \" \" + owner.name() + \"\\n\"\n    }\n\n    function renderDataOwnerPresentation(symbol: Field): string | null {\n        const owner = symbol.dataOwner()\n        if (!owner) return null // not possible in correct code\n        return owner.kind() + \" \" + owner.name() + \"\\n\"\n    }\n\n    switch (astNode.type) {\n        case \"native_function\": {\n            const func = new Fun(astNode, node.file)\n            const doc = extractCommentsDoc(node)\n            const nameAttr = func.nameAttribute()\n            const nameAttrText = nameAttr ? `${nameAttr.text}\\n` : \"\"\n\n            return defaultResult(\n                `${nameAttrText}${func.modifiers()}native ${node.name()}${func.signaturePresentation()}`,\n                doc,\n            )\n        }\n        case \"global_function\": {\n            const func = new Fun(astNode, node.file)\n            const doc = extractCommentsDoc(node)\n\n            const extraDoc =\n                func.name() === \"require\" ? requireFunctionDoc(place, node.file, settings) : \"\"\n\n            const name = trimPrefix(trimPrefix(node.name(), \"AnyMessage_\"), \"AnyStruct_\")\n\n            return defaultResult(\n                `${func.modifiers()}fun ${name}${func.signaturePresentation()}`,\n                extraDoc + doc,\n            )\n        }\n        case \"storage_function\": {\n            const func = new Fun(astNode, node.file)\n            const doc = extractCommentsDoc(node)\n            const ownerPresentation = renderOwnerPresentation(func)\n            if (!ownerPresentation) return null // not possible in correct code\n\n            const actualId = func.computeMethodId()\n            const actualIdPresentation = `Method ID: \\`${actualId}\\`\\n\\n`\n\n            const idPresentation = func.isGetMethod ? actualIdPresentation : \"\"\n\n            return defaultResult(\n                `${ownerPresentation}${func.modifiers()}fun ${node.name()}${func.signaturePresentation()}`,\n                idPresentation + doc,\n            )\n        }\n        case \"asm_function\": {\n            const func = new Fun(astNode, node.file)\n            const doc = extractCommentsDoc(node)\n\n            const bodyPresentation = func.hasOneLineBody ? ` ${func.bodyPresentation}` : \"\"\n            const gas = func.computeGasConsumption(settings.gas)\n\n            const presentation = gas.exact ? gas.value.toString() : `~${gas.value}`\n            const gasPresentation = gas.unknown ? \"\" : `Gas: \\`${presentation}\\``\n\n            return defaultResult(\n                `${func.modifiers()}fun ${node.name()}${func.signaturePresentation()}${bodyPresentation}`,\n                gasPresentation + \"\\n\\n\" + doc,\n            )\n        }\n        case \"contract\": {\n            const contract = new Contract(astNode, node.file)\n            const inherited = contract\n                .inheritTraits()\n                .map(it => it.name())\n                .filter(it => it !== \"BaseTrait\")\n                .join(\", \")\n            const inheritedString = inherited.length > 0 ? ` with ${inherited}` : ``\n            const doc = extractCommentsDoc(node)\n\n            const init = contract.initFunction()\n\n            const members = generateMembers([\n                contract.ownFields(),\n                init === null ? [] : [init],\n                contract.messageFunctions(),\n                contract.ownMethods().filter(it => it.isGetMethod),\n            ])\n\n            const body = members === \"\" ? \"{}\" : `{\\n${members}\\n}`\n\n            return defaultResult(`contract ${node.name()}${inheritedString} ${body}`, doc)\n        }\n        case \"trait\": {\n            const trait = new Trait(astNode, node.file)\n            const inherited = trait\n                .inheritTraits()\n                .map(it => it.name())\n                .filter(it => it !== \"BaseTrait\")\n                .join(\", \")\n            const inheritedString = inherited.length > 0 ? ` with ${inherited}` : ``\n            const doc = extractCommentsDoc(node)\n\n            const members = generateMembers([\n                trait.ownConstants(),\n                trait.ownFields(),\n                trait.ownMethods(),\n            ])\n\n            const body = members === \"\" ? \"{}\" : `{\\n${members}\\n}`\n            return defaultResult(`trait ${node.name()}${inheritedString} ${body}`, doc)\n        }\n        case \"struct\": {\n            const doc = extractCommentsDoc(node)\n            const struct = new Struct(node.node, node.file)\n            const body = struct.body()?.text ?? \"\"\n            const sizeDoc = documentationSizeOf(struct)\n            return defaultResult(`struct ${node.name()} ${body}`, doc + sizeDoc)\n        }\n        case \"message\": {\n            const doc = extractCommentsDoc(node)\n            const message = new Message(node.node, node.file)\n            const body = message.body()?.text ?? \"\"\n            const value = message.value()\n            const sizeDoc = documentationSizeOf(message)\n            return defaultResult(`message${value} ${node.name()} ${body}`, doc + sizeDoc)\n        }\n        case \"primitive\": {\n            const doc = extractCommentsDoc(node)\n            return defaultResult(`primitive ${node.name()}`, doc)\n        }\n        case \"global_constant\": {\n            const constant = new Constant(astNode, node.file)\n            const type = constant.typeNode()?.type()?.qualifiedName() ?? \"unknown\"\n            if (!type) return null\n\n            const value = constant.value()\n            if (!value) return null\n\n            const doc = extractCommentsDoc(node)\n            return defaultResult(\n                `${constant.modifiers()}const ${node.name()}: ${type} = ${value.node.text}`,\n                doc,\n            )\n        }\n        case \"storage_constant\": {\n            const constant = new Constant(astNode, node.file)\n            const type = constant.typeNode()?.type()?.qualifiedName() ?? \"unknown\"\n            if (!type) return null\n\n            const ownerPresentation = renderOwnerPresentation(constant)\n            if (!ownerPresentation) return null // not possible in correct code\n\n            const value = constant.value()\n            if (!value) return null\n\n            const doc = extractCommentsDoc(node)\n            return defaultResult(\n                `${ownerPresentation}${constant.modifiers()}const ${node.name()}: ${type} = ${value.node.text}`,\n                doc,\n            )\n        }\n        case \"storage_variable\": {\n            const doc = extractCommentsDoc(node)\n            const field = new Field(node.node, node.file)\n\n            const ownerPresentation = renderOwnerPresentation(field)\n            if (!ownerPresentation) return null // not possible in correct code\n\n            const name = field.nameNode()\n            if (!name) return null\n\n            const type = TypeInferer.inferType(name)?.qualifiedName() ?? \"unknown\"\n\n            return defaultResult(\n                `${ownerPresentation}${node.name()}: ${type}${field.defaultValuePresentation()}`,\n                doc,\n            )\n        }\n        case \"field\": {\n            const doc = extractCommentsDoc(node)\n            const field = new Field(node.node, node.file)\n\n            const ownerPresentation = renderDataOwnerPresentation(field)\n            if (!ownerPresentation) return null // not possible in correct code\n\n            const name = field.nameNode()\n            if (!name) return null\n\n            const type = TypeInferer.inferType(name)?.qualifiedName() ?? \"unknown\"\n\n            return defaultResult(\n                `${ownerPresentation}${node.name()}: ${type}${field.defaultValuePresentation()}`,\n                doc,\n            )\n        }\n        case \"identifier\": {\n            const parent = astNode.parent\n            if (!parent) return null\n\n            if (parent.type === \"let_statement\") {\n                const valueNode = parent.childForFieldName(\"value\")\n                if (!valueNode) return null\n\n                const type = TypeInferer.inferType(node)\n                const typeName = type?.qualifiedName() ?? \"unknown\"\n                return defaultResult(`let ${node.name()}: ${typeName} = ${valueNode.text}`)\n            }\n\n            if (parent.type === \"foreach_statement\") {\n                const type = TypeInferer.inferType(node)\n                const typeName = type?.qualifiedName() ?? \"unknown\"\n                return defaultResult(`let ${node.name()}: ${typeName}`)\n            }\n\n            if (parent.type === \"catch_clause\") {\n                return defaultResult(`catch(${node.name()})`)\n            }\n            break\n        }\n        case \"parameter\": {\n            const type = TypeInferer.inferType(node)\n            const typeName = type?.qualifiedName() ?? \"unknown\"\n\n            if (astNode.parent?.parent?.type === \"contract\") {\n                const field = new Field(node.node, node.file)\n                const ownerPresentation = renderOwnerPresentation(field)\n                if (!ownerPresentation) return null // not possible in correct code\n\n                const name = field.nameNode()\n                if (!name) return null\n\n                const type = TypeInferer.inferType(name)?.qualifiedName() ?? \"unknown\"\n\n                return defaultResult(\n                    `${ownerPresentation}${node.name()}: ${type}${field.defaultValuePresentation()}`,\n                    \"\",\n                )\n            }\n\n            return defaultResult(`${node.name()}: ${typeName}`)\n        }\n    }\n\n    return null\n}\n\nfunction generateMembers(nodes: Node[][]): string {\n    const parts = nodes\n        .map(nodesPars =>\n            nodesPars\n                .map(it => generateMemberDocFor(it))\n                .filter(it => it !== null)\n                .map(it => `    ${it}`)\n                .join(\"\\n\"),\n        )\n        .filter(it => it !== \"\")\n    return parts.join(\"\\n\\n\")\n}\n\nfunction generateMemberDocFor(node: Node): string | null {\n    const astNode = node.node\n    switch (astNode.type) {\n        case \"storage_function\": {\n            const func = new Fun(astNode, node.file)\n            return `${func.modifiers()}fun ${func.name()}${func.signaturePresentation()};`\n        }\n        case \"storage_constant\": {\n            const constant = new Constant(astNode, node.file)\n            const type = constant.typeNode()?.type()?.qualifiedName() ?? \"unknown\"\n            if (!type) return null\n\n            const value = constant.value()\n            if (!value) return null\n\n            return `${constant.modifiers()}const ${constant.name()}: ${type} = ${value.node.text};`\n        }\n        case \"storage_variable\": {\n            const name = astNode.childForFieldName(\"name\")\n            if (!name) return null\n\n            const field = new Field(name, node.file)\n            const type = TypeInferer.inferType(field)?.qualifiedName() ?? \"unknown\"\n\n            return `${field.name()}: ${type}${field.defaultValuePresentation()};`\n        }\n        case \"init_function\": {\n            const func = new InitFunction(astNode, node.file)\n            return func.nameLike() + \";\"\n        }\n        case \"receive_function\":\n        case \"external_function\":\n        case \"bounced_function\": {\n            const func = new MessageFunction(astNode, node.file)\n            return func.nameLike() + \";\"\n        }\n        case \"parameter\": {\n            const field = new Field(node.node, node.file)\n            const name = field.nameNode()\n            if (!name) return null\n            const type = TypeInferer.inferType(name)?.qualifiedName() ?? \"unknown\"\n            return `${name.name()}: ${type}${field.defaultValuePresentation()};`\n        }\n    }\n\n    return null\n}\n\nexport function extractCommentsDocContent(node: Node): {\n    lines: string[]\n    startPosition: Position\n} | null {\n    const prevSibling = node.node.previousSibling\n    if (!prevSibling || prevSibling.type !== \"comment\") return null\n\n    const nodeStartLine = node.node.startPosition.row\n\n    const comments: SyntaxNode[] = []\n    let comment: SyntaxNode | null = prevSibling\n    while (comment?.type === \"comment\") {\n        const commentStartLine = comment.startPosition.row\n\n        if (commentStartLine + 1 + comments.length != nodeStartLine) {\n            break\n        }\n\n        comments.push(comment)\n        comment = comment.previousSibling\n    }\n\n    if (comments.length === 0) return null\n\n    const finalComments = comments.reverse()\n\n    return {\n        lines: finalComments.map(c =>\n            trimPrefix(trimPrefix(trimPrefix(c.text, \"///\"), \"//\"), \" \").trimEnd(),\n        ),\n        startPosition: asLspPosition(comments[0].startPosition),\n    }\n}\n\nexport function extractCommentsDoc(node: Node): string {\n    const content = extractCommentsDocContent(node)\n    if (!content) return \"\"\n\n    const lines = content.lines\n\n    let result = \"\"\n    let insideCodeBlock = false\n\n    for (const rawLine of lines) {\n        const line = rawLine.trimEnd()\n\n        if (line.replace(/-/g, \"\").length === 0 && line.length > 0) {\n            result += \"\\n\\n\"\n            continue\n        }\n\n        const isEndOfSentence = /[!.:?]$/.test(line)\n        const isList = line.startsWith(\"-\") || line.startsWith(\"*\")\n        const isHeader = line.startsWith(\"#\")\n        const isTable = line.startsWith(\"|\")\n        const isCodeBlock = line.startsWith(\"```\")\n\n        if (isCodeBlock && !insideCodeBlock) {\n            result += \"\\n\"\n        }\n\n        if (isList) {\n            result += \"\\n\"\n        }\n\n        result += line\n\n        if (insideCodeBlock || isCodeBlock || isTable || isList) {\n            result += \"\\n\"\n        }\n\n        if ((isEndOfSentence || isHeader) && !insideCodeBlock) {\n            result += \"\\n\\n\"\n        } else if (!insideCodeBlock && !isCodeBlock && !isList) {\n            result += \" \"\n        }\n\n        if (isCodeBlock) {\n            insideCodeBlock = !insideCodeBlock\n        }\n    }\n\n    return result.trimEnd()\n}\n\nfunction requireFunctionDoc(place: SyntaxNode, file: File, settings: TactSettings): string | null {\n    const callNode = place.parent\n    if (!callNode) return null\n\n    const exitCode = compiler.requireFunctionExitCode(callNode, file, settings.hints.exitCodeFormat)\n    if (!exitCode) return \"\"\n    return `Exit code: **${exitCode.value}**\\n\\n`\n}\n\nfunction documentationSizeOf(fieldsOwner: FieldsOwner): string {\n    const ty = new FieldsOwnerTy(fieldsOwner.name(), fieldsOwner)\n    const sizeOf = ty.sizeOf()\n    const sizeOfPres = sizeOfPresentation(sizeOf)\n    return `\\n\\n**Size**: ${sizeOfPres}`\n}\n\nfunction defaultResult(signature: string, documentation: string = \"\"): string {\n    return DOC_TMPL.replace(\"{signature}\", signature).replace(\"{documentation}\", documentation)\n}\n","export function generateExitCodeDocumentation(code: number): string | null {\n    const info = DATA[code]\n    if (!info) return null\n\n    return `${info.description}\n\n**Phase**: ${info.origin}\n\nLearn more about exit codes in documentation: https://docs.tact-lang.org/book/exit-codes/`\n}\n\nexport const DATA: Record<number, {origin: string; description: string} | undefined> = {\n    \"0\": {\n        origin: \"Compute and action phases\",\n        description: \"Standard successful execution exit code.\",\n    },\n    \"1\": {\n        origin: \"Compute phase\",\n        description: \"Alternative successful execution exit code. Reserved, but doesn’t occur.\",\n    },\n    \"2\": {origin: \"Compute phase\", description: \"Stack underflow.\"},\n    \"3\": {origin: \"Compute phase\", description: \"Stack overflow.\"},\n    \"4\": {origin: \"Compute phase\", description: \"Integer overflow.\"},\n    \"5\": {\n        origin: \"Compute phase\",\n        description: \"Range check error — some integer is out of its expected range.\",\n    },\n    \"6\": {origin: \"Compute phase\", description: \"Invalid TVM opcode.\"},\n    \"7\": {origin: \"Compute phase\", description: \"Type check error.\"},\n    \"8\": {origin: \"Compute phase\", description: \"Cell overflow.\"},\n    \"9\": {origin: \"Compute phase\", description: \"Cell underflow.\"},\n    \"10\": {origin: \"Compute phase\", description: \"Dictionary error.\"},\n    \"11\": {\n        origin: \"Compute phase\",\n        description: \"Described in TVM docs as “Unknown error, may be thrown by user programs”.\",\n    },\n    \"12\": {\n        origin: \"Compute phase\",\n        description: \"Fatal error. Thrown by TVM in situations deemed impossible.\",\n    },\n    \"13\": {origin: \"Compute phase\", description: \"Out of gas error.\"},\n    \"-14\": {\n        origin: \"Compute phase\",\n        description: \"Same as 13. Negative, so that it cannot be faked.\",\n    },\n    \"14\": {\n        origin: \"Compute phase\",\n        description: \"VM virtualization error. Reserved, but never thrown.\",\n    },\n    \"32\": {origin: \"Action phase\", description: \"Action list is invalid.\"},\n    \"33\": {origin: \"Action phase\", description: \"Action list is too long.\"},\n    \"34\": {origin: \"Action phase\", description: \"Action is invalid or not supported.\"},\n    \"35\": {origin: \"Action phase\", description: \"Invalid source address in outbound message.\"},\n    \"36\": {origin: \"Action phase\", description: \"Invalid destination address in outbound message.\"},\n    \"37\": {origin: \"Action phase\", description: \"Not enough Toncoin.\"},\n    \"38\": {origin: \"Action phase\", description: \"Not enough extra currencies.\"},\n    \"39\": {\n        origin: \"Action phase\",\n        description: \"Outbound message does not fit into a cell after rewriting.\",\n    },\n    \"40\": {\n        origin: \"Action phase\",\n        description:\n            \"Cannot process a message — not enough funds, the message is too large or its Merkle depth is too big.\",\n    },\n    \"41\": {\n        origin: \"Action phase\",\n        description: \"Library reference is null during library change action.\",\n    },\n    \"42\": {origin: \"Action phase\", description: \"Library change action error.\"},\n    \"43\": {\n        origin: \"Action phase\",\n        description:\n            \"Exceeded maximum number of cells in the library or the maximum depth of the Merkle tree.\",\n    },\n    \"50\": {origin: \"Action phase\", description: \"Account state size exceeded limits.\"},\n    \"128\": {\n        origin: \"Tact compiler (Compute phase)\",\n        description: \"Null reference exception. Configurable since Tact 1.6.\",\n    },\n    \"129\": {origin: \"Tact compiler (Compute phase)\", description: \"Invalid serialization prefix.\"},\n    \"130\": {\n        origin: \"Tact compiler (Compute phase)\",\n        description:\n            \"Invalid incoming message — there’s no receiver for the opcode of the received message.\",\n    },\n    \"131\": {\n        origin: \"Tact compiler (Compute phase)\",\n        description: \"Constraints error. Reserved, but never thrown.\",\n    },\n    \"132\": {\n        origin: \"Tact compiler (Compute phase)\",\n        description: \"Access denied — someone other than the owner sent a message to the contract.\",\n    },\n    \"133\": {\n        origin: \"Tact compiler (Compute phase)\",\n        description: \"Contract stopped. Reserved, but never thrown.\",\n    },\n    \"134\": {origin: \"Tact compiler (Compute phase)\", description: \"Invalid argument.\"},\n    \"135\": {\n        origin: \"Tact compiler (Compute phase)\",\n        description: \"Code of a contract was not found.\",\n    },\n    \"136\": {origin: \"Tact compiler (Compute phase)\", description: \"Invalid standard address.\"},\n    \"137\": {\n        origin: \"Tact compiler (Compute phase)\",\n        description:\n            \"Masterchain support is not enabled for this contract. Removed since Tact 1.6.\",\n    },\n}\n","const CODE_FENCE = \"```\"\n\nexport function generateKeywordDoc(word: string): string | null {\n    if (word === \"initOf\") {\n        return `${CODE_FENCE}tact\ninitOf ContractName(Arguments)\n${CODE_FENCE}\n\nExpression \\`initOf\\` computes initial state, i.e. \\`StateInit\\` of a contract:\n\n${CODE_FENCE}tact\n//                     argument values for the init() function of the contract\n//                     ↓   ↓\ninitOf ExampleContract(42, 100); // returns a Struct StateInit{}\n//     ---------------\n//     ↑\n//     name of the contract\n//     ↓\n//     ---------------\ninitOf ExampleContract(\n    42,  // first argument\n    100, // second argument, trailing comma is allowed\n);\n${CODE_FENCE}\n\nSee more details in documentation: https://docs.tact-lang.org/book/expressions/#initof\n`\n    }\n\n    return null\n}\n","import type {InitFunction, MessageFunction} from \"@server/psi/Decls\"\nimport {Expression} from \"@server/psi/Node\"\nimport {BouncedTy, MessageTy} from \"@server/types/BaseTy\"\nimport {extractCommentsDoc} from \"@server/documentation/documentation\"\n\nconst CODE_FENCE = \"```\"\n\nexport function generateInitDoc(func: InitFunction): string | null {\n    const name = func.nameLike()\n    const codeDoc = extractCommentsDoc(func)\n\n    const doc = `Constructor function \\`init()\\` runs on deployment of the contract.\nIf a contract has any persistent state variables without default values specified, it must initialize them in this function.`\n\n    const link = \"https://docs.tact-lang.org/book/contracts/#init-function\"\n    return defaultResult(name, codeDoc, doc, link)\n}\n\nexport function generateReceiverDoc(func: MessageFunction): string | null {\n    const name = func.nameLike()\n\n    const kind = func.kindIdentifier()?.text\n    if (!kind) return null\n\n    const codeDoc = extractCommentsDoc(func)\n\n    const link =\n        kind === \"receive\"\n            ? \"https://docs.tact-lang.org/book/receive/\"\n            : kind === \"bounced\"\n              ? \"https://docs.tact-lang.org/book/bounced/\"\n              : \"https://docs.tact-lang.org/book/external/\"\n\n    // receive() {}\n    //        ^^\n    const param = func.parameter()\n    if (!param) {\n        const doc = \"Called when an empty message is sent to the contract\"\n        return defaultResult(name, codeDoc, doc, link)\n    }\n\n    // receive(\"message\") {}\n    //         ^^^^^^^^^\n    if (param.type === \"string\") {\n        const doc = `Called when a text message ${param.text} is sent to the contract (maximum \"message\" length is 123 bytes)`\n        return defaultResult(name, codeDoc, doc, link)\n    }\n\n    const typeNode = param.childForFieldName(\"type\")\n    if (!typeNode) return null\n    const type = new Expression(typeNode, func.file).type()\n    if (!type) return null\n\n    // receive(str: String) {}\n    //              ^^^^^^\n    if (type.name() === \"String\") {\n        const doc = \"Called when an arbitrary text message is sent to the contract\"\n        return defaultResult(name, codeDoc, doc, link)\n    }\n\n    // receive(msg: ChangeOwner) {}\n    //              ^^^^^^^^^^^\n    if (type instanceof MessageTy) {\n        const doc = `Called when a binary message of type \\`${type.name()}\\` is sent to the contract`\n        return defaultResult(name, codeDoc, doc, link)\n    }\n\n    // bounced(msg: bounced<ChangeOwner>) {}\n    //              ^^^^^^^^^^^^^^^^^^^^\n    if (type instanceof BouncedTy) {\n        const doc = `Called when a binary message of type \\`${type.innerTy.name()}\\` is sent to the contract`\n        return defaultResult(name, codeDoc, doc, link)\n    }\n\n    // external(msg: Slice) {}\n    //               ^^^^^\n    if (type.name() === \"Slice\") {\n        const doc = \"Called when binary message of unknown type is sent to the contract\"\n        return defaultResult(name, codeDoc, doc, link)\n    }\n\n    return defaultResult(name, codeDoc, \"\", link)\n}\n\nfunction defaultResult(name: string, codeDoc: string, doc: string, link: string): string {\n    return (\n        `${CODE_FENCE}tact\\n${name} {}\\n${CODE_FENCE}` +\n        \"\\n\" +\n        (codeDoc.length > 0 ? `${codeDoc}\\n\\n----\\n` : \"\") +\n        doc +\n        \"\\n\\nLearn more in documentation: \" +\n        link\n    )\n}\n","interface TypeDoc {\n    range: string\n    size: string\n    description?: string\n    tlb?: string\n}\n\nconst TYPE_DOCS: Record<string, TypeDoc | undefined> = {\n    uint8: {range: \"0 to 255 (2^8 - 1)\", size: \"8 bits = 1 byte\"},\n    uint16: {range: \"0 to 65,535 (2^16 - 1)\", size: \"16 bits = 2 bytes\"},\n    uint32: {range: \"0 to 4,294,967,295 (2^32 - 1)\", size: \"32 bits = 4 bytes\"},\n    uint64: {range: \"0 to 2^64 - 1\", size: \"64 bits = 8 bytes\"},\n    uint128: {range: \"0 to 2^128 - 1\", size: \"128 bits = 16 bytes\"},\n    uint256: {range: \"0 to 2^256 - 1\", size: \"256 bits = 32 bytes\"},\n\n    int8: {range: \"-128 to 127 (-2^7 to 2^7 - 1)\", size: \"8 bits = 1 byte\"},\n    int16: {range: \"-32,768 to 32,767 (-2^15 to 2^15 - 1)\", size: \"16 bits = 2 bytes\"},\n    int32: {range: \"-2^31 to 2^31 - 1\", size: \"32 bits = 4 bytes\"},\n    int64: {range: \"-2^63 to 2^63 - 1\", size: \"64 bits = 8 bytes\"},\n    int128: {range: \"-2^127 to 2^127 - 1\", size: \"128 bits = 16 bytes\"},\n    int256: {range: \"-2^255 to 2^255 - 1\", size: \"256 bits = 32 bytes\"},\n    int257: {range: \"-2^256 to 2^256 - 1\", size: \"257 bits = 32 bytes + 1 bit\"},\n\n    coins: {\n        range: \"0 to 2^120 - 1\",\n        size: \"4 to 124 bits\",\n        description:\n            \"An alias to `VarUInteger16`, commonly used for storing `nanoToncoin` amounts. Takes variable bit length depending on the optimal number of bytes needed.\",\n        tlb: \"varuint16\",\n    },\n    varuint16: {range: \"0 to 2^120 - 1\", size: \"4 to 124 bits\"},\n    varint16: {range: \"-2^119 to 2^119 - 1\", size: \"4 to 124 bits\"},\n    varuint32: {range: \"0 to 2^248 - 1\", size: \"5 to 253 bits\"},\n    varint32: {range: \"-2^247 to 2^247 - 1\", size: \"5 to 253 bits\"},\n}\n\nfunction generateArbitraryIntDoc(type: string): TypeDoc | null {\n    const match = /^(u?int)(\\d+)$/.exec(type)\n    if (!match) return null\n\n    const [_, prefix, bits] = match\n    const bitWidth = Number.parseInt(bits)\n\n    if (prefix === \"uint\" && (bitWidth < 1 || bitWidth > 256)) return null\n    if (prefix === \"int\" && (bitWidth < 1 || bitWidth > 257)) return null\n\n    if (prefix === \"uint\") {\n        return {\n            range: `0 to 2^${bitWidth} - 1`,\n            size: `${bitWidth} bits`,\n            description: \"Arbitrary bit-width unsigned integer type (available since Tact 1.5)\",\n        }\n    }\n\n    return {\n        range: `-2^${bitWidth - 1} to 2^${bitWidth - 1} - 1`,\n        size: `${bitWidth} bits`,\n        description: \"Arbitrary bit-width signed integer type (available since Tact 1.5)\",\n    }\n}\n\nexport function generateTlBTypeDoc(word: string): string | null {\n    if (word === \"remaining\") {\n        return `\n**remaining** — direct serialization modifier\n\n- **Applies to**: Cell, Builder, and Slice types\n- **Effect**: Stores/loads data directly in the current cell instead of as a reference\n- **Usage**: \\`value: Type as remaining\\`\n\nAffects how values are serialized into cells. Instead of using references (default), stores data directly in the current cell.\n\nLearn more in documentation: https://docs.tact-lang.org/book/cells/#serialization-remaining\n`\n    }\n\n    const typeInfo: TypeDoc | null = TYPE_DOCS[word] ?? generateArbitraryIntDoc(word)\n    if (!typeInfo) return null\n\n    return `\n**${word}** — ${word.startsWith(\"var\") || word === \"coins\" ? \"variable-length\" : `${typeInfo.size.split(\" \")[0]}-bit`} ${word.startsWith(\"uint\") || word === \"coins\" ? \"unsigned\" : \"signed\"} integer\n\n- **Range**: ${typeInfo.range}\n- **Size**: ${typeInfo.size}\n- **TL-B**: ${typeInfo.tlb ?? word}${typeInfo.description ? `\\n\\n${typeInfo.description}` : \"\"}\n`\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {FiftReference} from \"@server/fift/psi/FiftReference\"\nimport {generateAsmDoc} from \"../../documentation/asm_documentation\"\nimport type {File} from \"@server/psi/File\"\nimport {findInstruction} from \"@server/completion/data/types\"\n\nconst CODE_FENCE = \"```\"\n\nexport function generateFiftDocFor(node: SyntaxNode, file: File): string | null {\n    const def = FiftReference.resolve(node, file)\n    if (def) {\n        return `${CODE_FENCE}fift\\n${def.parent?.text}\\n${CODE_FENCE}`\n    }\n\n    const instr = findInstruction(node.text, [])\n    if (!instr) return null\n\n    const doc = generateAsmDoc(instr)\n    if (doc) {\n        return doc\n    }\n\n    return null\n}\n","import {FoldingRange, FoldingRangeKind} from \"vscode-languageserver-types\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport type {File} from \"@server/psi/File\"\nimport type {Point} from \"web-tree-sitter\"\nimport type * as lsp from \"vscode-languageserver\"\n\nexport function collectFift(file: File): FoldingRange[] {\n    const result: FoldingRange[] = []\n\n    const genericFolding = (start: Point, end: Point): lsp.FoldingRange => {\n        return {\n            kind: FoldingRangeKind.Region,\n            startLine: start.row,\n            endLine: end.row - 1,\n            startCharacter: end.column,\n            endCharacter: end.column,\n        }\n    }\n\n    RecursiveVisitor.visit(file.rootNode, (n): boolean => {\n        if (\n            n.type === \"program\" ||\n            n.type === \"proc_definition\" ||\n            n.type === \"proc_inline_definition\" ||\n            n.type === \"method_definition\" ||\n            n.type === \"block_instruction\" ||\n            n.type === \"instruction_block\" ||\n            n.type === \"if_statement\" ||\n            n.type === \"ifjmp_statement\" ||\n            n.type === \"while_statement\" ||\n            n.type === \"repeat_statement\" ||\n            n.type === \"until_statement\"\n        ) {\n            const openBrace = n.firstChild\n            const closeBrace = n.lastChild\n            if (!openBrace || !closeBrace) return true\n\n            result.push(genericFolding(openBrace.endPosition, closeBrace.startPosition))\n        }\n\n        return true\n    })\n\n    return result\n}\n","import type {InlayHint} from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport {findInstruction} from \"@server/completion/data/types\"\nimport {InlayHintKind} from \"vscode-languageserver-types\"\nimport {instructionPresentation} from \"@server/asm/gas\"\n\nexport function collectFift(\n    file: File,\n    gasFormat: string,\n    settings: {\n        showGasConsumption: boolean\n    },\n): InlayHint[] {\n    const result: InlayHint[] = []\n\n    RecursiveVisitor.visit(file.rootNode, (n): boolean => {\n        if (n.type === \"identifier\" && settings.showGasConsumption) {\n            const instruction = findInstruction(n.text)\n            if (!instruction) return true\n\n            const presentation = instructionPresentation(\n                instruction.doc.gas,\n                instruction.doc.stack,\n                gasFormat,\n            )\n\n            result.push({\n                kind: InlayHintKind.Type,\n                label: presentation,\n                position: {\n                    line: n.endPosition.row,\n                    character: n.endPosition.column,\n                },\n            })\n        }\n        return true\n    })\n\n    return result\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport type {File} from \"../../psi/File\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\n\nexport class FiftReference {\n    private readonly node: SyntaxNode\n    private readonly file: File\n\n    public constructor(node: SyntaxNode, file: File) {\n        this.node = node\n        this.file = file\n    }\n\n    public resolve(): SyntaxNode | null {\n        if (\n            this.node.type !== \"identifier\" &&\n            !(this.node.parent?.type === \"proc_call\" && this.node.parent.firstChild === this.node)\n        ) {\n            return null\n        }\n\n        let definition: SyntaxNode | null = null\n        const word = this.node.text\n\n        RecursiveVisitor.visit(this.file.rootNode, (node): boolean => {\n            if (\n                node.type === \"proc_definition\" ||\n                node.type === \"proc_inline_definition\" ||\n                node.type === \"proc_ref_definition\" ||\n                node.type === \"method_definition\"\n            ) {\n                const nameNode = node.childForFieldName(\"name\")\n                if (nameNode?.text === word) {\n                    definition = nameNode\n                    return false\n                }\n            }\n            return true\n        })\n\n        return definition\n    }\n\n    public static resolve(node: SyntaxNode, file: File): SyntaxNode | null {\n        return new FiftReference(node, file).resolve()\n    }\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport type {File} from \"../../psi/File\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport {Node} from \"../../psi/Node\"\nimport {FiftReference} from \"./FiftReference\"\n\nexport class FiftReferent {\n    private readonly node: SyntaxNode\n    private readonly file: File\n    private readonly resolved: SyntaxNode | null = null\n\n    public constructor(node: SyntaxNode, file: File) {\n        this.node = node\n        this.file = file\n        this.resolved = FiftReference.resolve(node, file)\n    }\n\n    public findReferences(includeDefinition: boolean = false): Node[] {\n        if (!this.resolved) return []\n\n        const result: Node[] = []\n        if (includeDefinition) {\n            result.push(new Node(this.resolved, this.file))\n        }\n\n        const word = this.resolved.text\n\n        RecursiveVisitor.visit(this.file.rootNode, (node): boolean => {\n            if (node.type !== \"identifier\") return true\n            if (node.text !== word) return true\n\n            const parent = node.parent\n            if (!parent) return true\n\n            if (\n                (parent.type === \"proc_definition\" ||\n                    parent.type === \"proc_inline_definition\" ||\n                    parent.type === \"method_definition\" ||\n                    parent.type === \"declaration\") &&\n                parent.childForFieldName(\"name\")?.equals(node)\n            ) {\n                return true\n            }\n\n            const def = FiftReference.resolve(node, this.file)\n            if (def?.equals(this.node)) {\n                result.push(new Node(node, this.file))\n            }\n\n            return true\n        })\n\n        return result\n    }\n}\n","import type {SemanticTokens} from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport {SemanticTokensBuilder} from \"vscode-languageserver/lib/common/semanticTokens\"\nimport {SemanticTokenTypes} from \"vscode-languageserver-protocol\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport * as lsp from \"vscode-languageserver\"\nimport {FiftReference} from \"@server/fift/psi/FiftReference\"\n\nexport function collectFift(\n    file: File,\n    settings: {\n        enabled: boolean\n    },\n): SemanticTokens | null {\n    if (!settings.enabled) {\n        return null\n    }\n\n    const builder = new SemanticTokensBuilder()\n\n    function pushToken(n: SyntaxNode, tokenType: lsp.SemanticTokenTypes): void {\n        builder.push(\n            n.startPosition.row,\n            n.startPosition.column,\n            n.endPosition.column - n.startPosition.column,\n            Object.keys(lsp.SemanticTokenTypes).indexOf(tokenType.toString()),\n            0,\n        )\n    }\n\n    RecursiveVisitor.visit(file.rootNode, (node): boolean => {\n        if (\n            node.type === \"proc_definition\" ||\n            node.type === \"proc_inline_definition\" ||\n            node.type === \"proc_ref_definition\" ||\n            node.type === \"method_definition\" ||\n            node.type === \"declaration\"\n        ) {\n            const nameNode = node.childForFieldName(\"name\")\n            if (nameNode) {\n                pushToken(nameNode, SemanticTokenTypes.function)\n            }\n        }\n\n        if (\n            node.type === \"identifier\" &&\n            node.parent?.type === \"proc_call\" &&\n            node.parent.firstChild?.equals(node)\n        ) {\n            const def = FiftReference.resolve(node, file)\n            if (def) {\n                pushToken(node, SemanticTokenTypes.function)\n            }\n        }\n\n        return true\n    })\n\n    return builder.build()\n}\n","import {FoldingRange, FoldingRangeKind} from \"vscode-languageserver-types\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport type {File} from \"@server/psi/File\"\nimport type {Point} from \"web-tree-sitter\"\nimport type * as lsp from \"vscode-languageserver\"\nimport {isDocCommentOwner} from \"@server/psi/utils\"\nimport {extractCommentsDocContent} from \"@server/documentation/documentation\"\nimport {Node} from \"@server/psi/Node\"\n\nexport function collect(file: File): FoldingRange[] {\n    const result: FoldingRange[] = []\n\n    const genericFolding = (start: Point, end: Point): lsp.FoldingRange => {\n        return {\n            kind: FoldingRangeKind.Region,\n            startLine: start.row,\n            endLine: end.row - 1,\n            startCharacter: end.column,\n            endCharacter: end.column,\n        }\n    }\n\n    RecursiveVisitor.visit(file.rootNode, (n): boolean => {\n        if (\n            n.type === \"block_statement\" ||\n            n.type === \"instance_argument_list\" ||\n            n.type === \"function_body\" ||\n            n.type === \"asm_function_body\" ||\n            n.type === \"struct_body\" ||\n            n.type === \"message_body\" ||\n            n.type === \"contract_body\" ||\n            n.type === \"asm_sequence\" ||\n            n.type === \"trait_body\"\n        ) {\n            const openBrace = n.firstChild\n            const closeBrace = n.lastChild\n            if (!openBrace || !closeBrace) return true\n\n            result.push(genericFolding(openBrace.endPosition, closeBrace.startPosition))\n        }\n\n        if (isDocCommentOwner(n)) {\n            const node = new Node(n, file)\n            const comment = extractCommentsDocContent(node)\n            if (!comment) return true\n\n            result.push({\n                kind: FoldingRangeKind.Comment,\n                startLine: comment.startPosition.line,\n                endLine: comment.startPosition.line + comment.lines.length - 1,\n            })\n        }\n\n        return true\n    })\n\n    return result\n}\n","import {NamedNode} from \"@server/psi/Node\"\nimport {File} from \"@server/psi/File\"\nimport {Constant, Contract, Fun, Message, Primitive, Struct, Trait} from \"@server/psi/Decls\"\nimport {isNamedFunNode} from \"@server/psi/utils\"\nimport {ResolveState, ScopeProcessor} from \"@server/psi/Reference\"\nimport {CACHE} from \"@server/cache\"\nimport {PARSED_FILES_CACHE} from \"@server/indexing-root\"\n\nexport interface IndexKeyToType {\n    [IndexKey.Contracts]: Contract\n    [IndexKey.Funs]: Fun\n    [IndexKey.Messages]: Message\n    [IndexKey.Structs]: Struct\n    [IndexKey.Traits]: Trait\n    [IndexKey.Primitives]: Primitive\n    [IndexKey.Constants]: Constant\n}\n\nexport enum IndexKey {\n    Contracts = \"Contracts\",\n    Funs = \"Funs\",\n    Messages = \"Messages\",\n    Structs = \"Structs\",\n    Traits = \"Traits\",\n    Primitives = \"Primitives\",\n    Constants = \"Constants\",\n}\n\nexport interface IndexFinder {\n    processElementsByKey: (key: IndexKey, processor: ScopeProcessor, state: ResolveState) => boolean\n}\n\nexport class FileIndex {\n    private readonly elements: {\n        [IndexKey.Contracts]: Contract[]\n        [IndexKey.Funs]: Fun[]\n        [IndexKey.Messages]: Message[]\n        [IndexKey.Structs]: Struct[]\n        [IndexKey.Traits]: Trait[]\n        [IndexKey.Primitives]: Primitive[]\n        [IndexKey.Constants]: Constant[]\n    } = {\n        [IndexKey.Contracts]: [],\n        [IndexKey.Funs]: [],\n        [IndexKey.Messages]: [],\n        [IndexKey.Structs]: [],\n        [IndexKey.Traits]: [],\n        [IndexKey.Primitives]: [],\n        [IndexKey.Constants]: [],\n    }\n\n    public static create(file: File): FileIndex {\n        const index = new FileIndex()\n\n        for (const node of file.rootNode.children) {\n            if (!node) continue\n\n            if (isNamedFunNode(node)) {\n                index.elements[IndexKey.Funs].push(new Fun(node, file))\n            }\n            if (node.type === \"struct\") {\n                index.elements[IndexKey.Structs].push(new Struct(node, file))\n            }\n            if (node.type === \"contract\") {\n                index.elements[IndexKey.Contracts].push(new Contract(node, file))\n            }\n            if (node.type === \"message\") {\n                index.elements[IndexKey.Messages].push(new Message(node, file))\n            }\n            if (node.type === \"trait\") {\n                index.elements[IndexKey.Traits].push(new Trait(node, file))\n            }\n            if (node.type === \"primitive\") {\n                index.elements[IndexKey.Primitives].push(new Primitive(node, file))\n            }\n            if (node.type === \"global_constant\") {\n                index.elements[IndexKey.Constants].push(new Constant(node, file))\n            }\n        }\n\n        return index\n    }\n\n    public processElementsByKey(\n        key: IndexKey,\n        processor: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        const elements = this.elements[key]\n        for (const node of elements) {\n            if (!processor.execute(node, state)) return false\n        }\n        return true\n    }\n\n    public elementByName<K extends IndexKey>(key: K, name: string): IndexKeyToType[K] | null {\n        switch (key) {\n            case IndexKey.Contracts: {\n                return this.findElement(this.elements[IndexKey.Contracts], name) as\n                    | IndexKeyToType[K]\n                    | null\n            }\n            case IndexKey.Funs: {\n                return this.findElement(this.elements[IndexKey.Funs], name) as\n                    | IndexKeyToType[K]\n                    | null\n            }\n            case IndexKey.Messages: {\n                return this.findElement(this.elements[IndexKey.Messages], name) as\n                    | IndexKeyToType[K]\n                    | null\n            }\n            case IndexKey.Structs: {\n                return this.findElement(this.elements[IndexKey.Structs], name) as\n                    | IndexKeyToType[K]\n                    | null\n            }\n            case IndexKey.Traits: {\n                return this.findElement(this.elements[IndexKey.Traits], name) as\n                    | IndexKeyToType[K]\n                    | null\n            }\n            case IndexKey.Primitives: {\n                return this.findElement(this.elements[IndexKey.Primitives], name) as\n                    | IndexKeyToType[K]\n                    | null\n            }\n            case IndexKey.Constants: {\n                return this.findElement(this.elements[IndexKey.Constants], name) as\n                    | IndexKeyToType[K]\n                    | null\n            }\n            default: {\n                return null\n            }\n        }\n    }\n\n    private findElement<T extends NamedNode>(elements: T[], name: string): T | null {\n        return elements.find(value => value.name() === name) ?? null\n    }\n}\n\nexport class IndexRoot {\n    public readonly name: \"stdlib\" | \"stubs\" | \"workspace\"\n    public readonly root: string\n    public readonly files: Map<string, FileIndex> = new Map()\n\n    public constructor(name: \"stdlib\" | \"stubs\" | \"workspace\", root: string) {\n        this.name = name\n        this.root = root\n    }\n\n    public contains(file: string): boolean {\n        return file.startsWith(this.root)\n    }\n\n    public addFile(uri: string, file: File, clearCache: boolean = true): void {\n        if (this.files.has(uri)) {\n            return\n        }\n\n        if (clearCache) {\n            CACHE.clear()\n        }\n\n        const index = FileIndex.create(file)\n        this.files.set(uri, index)\n\n        console.info(`added ${uri} to index`)\n    }\n\n    public removeFile(uri: string): void {\n        CACHE.clear()\n\n        this.files.delete(uri)\n        PARSED_FILES_CACHE.delete(uri)\n\n        console.info(`removed ${uri} from index`)\n    }\n\n    public fileChanged(uri: string): void {\n        CACHE.clear()\n        this.files.delete(uri)\n        console.info(`found changes in ${uri}`)\n    }\n\n    public findFile(uri: string): FileIndex | undefined {\n        return this.files.get(uri)\n    }\n\n    public processElementsByKey(\n        key: IndexKey,\n        processor: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        for (const value of this.files.values()) {\n            if (!value.processElementsByKey(key, processor, state)) return false\n        }\n        return true\n    }\n\n    public processElsByKeyAndFile(\n        key: IndexKey,\n        file: File,\n        processor: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        const fileIndex = this.files.get(file.uri)\n        if (fileIndex !== undefined) {\n            if (!fileIndex.processElementsByKey(key, processor, state)) return false\n        }\n\n        for (const [k, value] of this.files) {\n            if (k === file.uri) continue\n            if (!value.processElementsByKey(key, processor, state)) return false\n        }\n        return true\n    }\n\n    public elementByName<K extends IndexKey>(key: K, name: string): IndexKeyToType[K] | null {\n        for (const value of this.files.values()) {\n            const result = value.elementByName(key, name)\n            if (result) {\n                return result\n            }\n        }\n        return null\n    }\n\n    public hasDeclaration(name: string): boolean {\n        for (const value of this.files.values()) {\n            const element =\n                value.elementByName(IndexKey.Funs, name) ??\n                value.elementByName(IndexKey.Contracts, name) ??\n                value.elementByName(IndexKey.Constants, name) ??\n                value.elementByName(IndexKey.Structs, name) ??\n                value.elementByName(IndexKey.Messages, name) ??\n                value.elementByName(IndexKey.Traits, name) ??\n                value.elementByName(IndexKey.Primitives, name)\n\n            if (element) {\n                return true\n            }\n        }\n        return false\n    }\n\n    public hasSeveralDeclarations(name: string): boolean {\n        let seen = false\n        for (const value of this.files.values()) {\n            const element =\n                value.elementByName(IndexKey.Funs, name) ??\n                value.elementByName(IndexKey.Contracts, name) ??\n                value.elementByName(IndexKey.Constants, name) ??\n                value.elementByName(IndexKey.Structs, name) ??\n                value.elementByName(IndexKey.Messages, name) ??\n                value.elementByName(IndexKey.Traits, name) ??\n                value.elementByName(IndexKey.Primitives, name)\n\n            if (element && seen) {\n                return true\n            }\n\n            if (element) {\n                seen = true\n            }\n        }\n        return false\n    }\n}\n\nexport class GlobalIndex {\n    public stdlibRoot: IndexRoot | undefined = undefined\n    public stubsRoot: IndexRoot | undefined = undefined\n    public roots: IndexRoot[] = []\n\n    public withStdlibRoot(root: IndexRoot): void {\n        this.stdlibRoot = root\n    }\n\n    public withStubsRoot(root: IndexRoot): void {\n        this.stubsRoot = root\n    }\n\n    public withRoots(roots: IndexRoot[]): void {\n        this.roots = roots\n    }\n\n    public allRoots(): IndexRoot[] {\n        const roots: IndexRoot[] = [...this.roots]\n        if (this.stdlibRoot) {\n            roots.push(this.stdlibRoot)\n        }\n        if (this.stubsRoot) {\n            roots.push(this.stubsRoot)\n        }\n        return roots\n    }\n\n    public findRootFor(path: string): IndexRoot | undefined {\n        for (const root of this.allRoots()) {\n            if (root.contains(path)) {\n                return root\n            }\n        }\n\n        console.warn(`cannot find index root for ${path}`)\n        return undefined\n    }\n\n    public addFile(uri: string, file: File, clearCache: boolean = true): void {\n        const indexRoot = this.findRootFor(uri)\n        if (!indexRoot) return\n\n        indexRoot.addFile(uri, file, clearCache)\n    }\n\n    public removeFile(uri: string): void {\n        const indexRoot = this.findRootFor(uri)\n        if (!indexRoot) return\n\n        indexRoot.removeFile(uri)\n    }\n\n    public fileChanged(uri: string): void {\n        const indexRoot = this.findRootFor(uri)\n        if (!indexRoot) return\n\n        indexRoot.fileChanged(uri)\n    }\n\n    public findFile(uri: string): FileIndex | undefined {\n        const indexRoot = this.findRootFor(uri)\n        if (!indexRoot) return undefined\n\n        return indexRoot.findFile(uri)\n    }\n\n    public processElementsByKey(\n        key: IndexKey,\n        processor: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        for (const root of this.allRoots()) {\n            if (!root.processElementsByKey(key, processor, state)) return false\n        }\n\n        return true\n    }\n\n    public processElsByKeyAndFile(\n        key: IndexKey,\n        file: File,\n        processor: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        for (const root of this.allRoots()) {\n            if (!root.processElsByKeyAndFile(key, file, processor, state)) return false\n        }\n\n        return true\n    }\n\n    public elementByName<K extends IndexKey>(key: K, name: string): IndexKeyToType[K] | null {\n        for (const root of this.allRoots()) {\n            const element = root.elementByName(key, name)\n            if (element) return element\n        }\n        return null\n    }\n\n    public hasSeveralDeclarations(name: string): boolean {\n        let seen = false\n        for (const root of this.allRoots()) {\n            const decl = root.hasDeclaration(name)\n            if (decl && seen) {\n                return true\n            }\n            if (decl) {\n                const hasSeveralDecls = root.hasSeveralDeclarations(name)\n                if (hasSeveralDecls) return true\n\n                seen = true\n            }\n        }\n\n        return false\n    }\n}\n\nexport const index = new GlobalIndex()\n","import {File} from \"@server/psi/File\"\nimport {glob} from \"glob\"\nimport * as fs from \"node:fs\"\nimport {URI} from \"vscode-uri\"\nimport {createTactParser, createFiftParser} from \"./parser\"\nimport {index} from \"./indexes\"\nimport {measureTime} from \"@server/psi/utils\"\nimport {readFile} from \"@server/vfs/vfs\"\n\nexport const PARSED_FILES_CACHE: Map<string, File> = new Map()\n\nexport const FIFT_PARSED_FILES_CACHE: Map<string, File> = new Map()\n\nexport enum IndexingRootKind {\n    Stdlib = \"stdlib\",\n    Workspace = \"workspace\",\n}\n\nexport class IndexingRoot {\n    public constructor(\n        public root: string,\n        public kind: IndexingRootKind,\n    ) {}\n\n    public async index(): Promise<void> {\n        const ignore =\n            this.kind === IndexingRootKind.Stdlib\n                ? []\n                : [\n                      \"**/node_modules/**\",\n                      \"**/cli/tact/output/**\",\n                      \"**/dist/**\",\n                      \"**/test/failed/**\",\n                      \"**/optimizer/test/**\",\n                      \"**/types/effects/**\",\n                      \"**/grammar/**/test/**\",\n                      \"**/test/compilation-failed/**\",\n                      \"**/pretty-printer-output/**\",\n                      \"**/types/test/**\",\n                      \"**/renamer-expected/**\",\n                      \"**/test/codegen/**\",\n                      \"**/test/contracts/**\",\n                      \"**/test/e2e-emulated/**\",\n                      \"**/__testdata/**\",\n                      \"**/test-failed/**\",\n                      \"**/types/stmts-failed/**\",\n                      \"**/types/stmts/**\",\n                      \"**/tact-lang/compiler/**\",\n                  ]\n\n        const files = await glob(\"**/*.tact\", {\n            cwd: new URL(this.root).pathname,\n            ignore: ignore,\n        })\n        if (files.length === 0) {\n            console.warn(`No file to index in ${this.root}`)\n        }\n        for (const filePath of files) {\n            console.info(\"Indexing:\", filePath)\n            const uri = this.root + \"/\" + filePath\n            const content = await readFile(uri)\n\n            const file = findFile(uri, content)\n            index.addFile(uri, file, false)\n        }\n    }\n}\n\nexport function findFile(uri: string, content?: string, changed: boolean = false): File {\n    const normalizedUri = uri.replace(/\\\\/g, \"/\")\n\n    const cached = PARSED_FILES_CACHE.get(normalizedUri)\n    if (cached !== undefined && !changed) {\n        return cached\n    }\n\n    if (!content) {\n        throw new Error(\"dont use fs\")\n    }\n\n    const fsPath = URI.parse(normalizedUri).fsPath\n    let realContent = content ?? safeFileRead(fsPath)\n    if (!realContent) {\n        console.error(`cannot read ${normalizedUri} file, path: ${fsPath}`)\n        realContent = \"\"\n    }\n\n    const parser = createTactParser()\n    const tree = measureTime(`reparse file ${normalizedUri}`, () => parser.parse(realContent))\n    if (!tree) {\n        throw new Error(`FATAL ERROR: cannot parse ${normalizedUri} file`)\n    }\n\n    const file = new File(normalizedUri, tree, realContent)\n    PARSED_FILES_CACHE.set(normalizedUri, file)\n    return file\n}\n\nexport function findFiftFile(uri: string, content?: string): File {\n    const cached = FIFT_PARSED_FILES_CACHE.get(uri)\n    if (cached !== undefined) {\n        return cached\n    }\n\n    let realContent = content ?? safeFileRead(URI.parse(uri).fsPath)\n    if (!realContent) {\n        console.error(`cannot read ${uri} file`)\n        realContent = \"\"\n    }\n\n    const parser = createFiftParser()\n    const tree = parser.parse(realContent)\n    if (!tree) {\n        throw new Error(`FATAL ERROR: cannot parse ${uri} file`)\n    }\n\n    const file = new File(uri, tree, realContent)\n    FIFT_PARSED_FILES_CACHE.set(uri, file)\n    return file\n}\n\nfunction safeFileRead(path: string): string | null {\n    try {\n        return fs.readFileSync(path).toString()\n    } catch {\n        return null\n    }\n}\n","import {InlayHint, InlayHintKind} from \"vscode-languageserver-types\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport type {File} from \"@server/psi/File\"\nimport {TypeInferer} from \"@server/TypeInferer\"\nimport {Reference} from \"@server/psi/Reference\"\nimport {Field, Fun, InitFunction} from \"@server/psi/Decls\"\nimport {AsmInstr, CallLike, Expression, NamedNode, Node, VarDeclaration} from \"@server/psi/Node\"\nimport {\n    BaseTy,\n    BouncedTy,\n    MapTy,\n    OptionTy,\n    PrimitiveTy,\n    sizeOfPresentation,\n    Ty,\n} from \"@server/types/BaseTy\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {computeSeqGasConsumption, instructionPresentation} from \"@server/asm/gas\"\nimport * as compiler from \"@server/compiler/utils\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport {InlayHintLabelPart, MarkupContent, MarkupKind} from \"vscode-languageserver\"\nimport {Location} from \"vscode-languageclient\"\nimport {asLspRange} from \"@server/utils/position\"\nimport {URI} from \"vscode-uri\"\n\nfunction processParameterHints(\n    shift: number,\n    params: NamedNode[],\n    args: SyntaxNode[],\n    result: InlayHint[],\n): void {\n    if (params.length === 0) return\n\n    if (params.length === 1 && params[0].file.fromStubs) {\n        // don't add extra noise for unary functions from stubs\n        return\n    }\n\n    for (let i = 0; i < Math.min(params.length - shift, args.length); i++) {\n        const param = params[i + shift]\n        const arg = args[i]\n        const paramName = param.name()\n\n        if (paramName.length === 1) {\n            // don't show hints for single letter parameters\n            continue\n        }\n\n        if (arg.text === paramName || arg.text.endsWith(`.${paramName}`)) {\n            // no need to add a hint for `takeFoo(foo)` or `takeFoo(val.foo)`\n            continue\n        }\n\n        const argExpr = arg.children[0]\n        if (!argExpr) continue\n\n        if (argExpr.type === \"instance_expression\") {\n            // no need to add a hint for `takeFoo(Foo{})`\n            continue\n        }\n\n        if (argExpr.type === \"static_call_expression\") {\n            const name = argExpr.childForFieldName(\"name\")\n            if (paramName === name?.text) {\n                // no need to add a hint for `takeSender(sender())`\n                continue\n            }\n        }\n\n        if (argExpr.type === \"method_call_expression\") {\n            const name = argExpr.childForFieldName(\"name\")\n            if (paramName === name?.text) {\n                // no need to add a hint for `takeSender(foo.sender())`\n                continue\n            }\n        }\n\n        result.push({\n            kind: InlayHintKind.Parameter,\n            label: [\n                {\n                    value: paramName,\n                    location: toLocation(param.nameNode()),\n                },\n                {\n                    value: \":\",\n                },\n            ],\n            position: {\n                line: arg.startPosition.row,\n                character: arg.startPosition.column,\n            },\n        })\n    }\n}\n\nfunction processToCellCall(call: CallLike, result: InlayHint[], showToCellSize: boolean): void {\n    if (!showToCellSize) return\n    if (call.node.type !== \"method_call_expression\" || call.name() !== \"toCell\") return\n\n    const parent = call.node.parent\n\n    // if:\n    // Foo{}.asCell().bits()\n    // Foo{}.asCell().bits\n    if (parent?.type === \"method_call_expression\" || parent?.type === \"field_access_expression\") {\n        return\n    }\n\n    const qualifier = call.node.childForFieldName(\"object\")\n    if (!qualifier) {\n        return\n    }\n\n    const ty = TypeInferer.inferType(new Expression(qualifier, call.file))\n    if (!ty) {\n        return\n    }\n\n    const sizeof = ty.sizeOf(new Map())\n    result.push({\n        kind: InlayHintKind.Parameter,\n        label: \" Size: \" + sizeOfPresentation(sizeof),\n        position: {\n            line: call.node.endPosition.row,\n            character: call.node.endPosition.column,\n        },\n        paddingLeft: true,\n    })\n}\n\nfunction hasObviousType(expr: SyntaxNode): boolean {\n    // don't show a hint for:\n    // let params = SomeParams{}\n    if (expr.type === \"instance_expression\") return true\n\n    // don't show a hint for:\n    // let foo = Foo.fromCell(cell)\n    if (expr.type === \"method_call_expression\") {\n        const name = expr.childForFieldName(\"name\")\n        if (name?.text === \"fromCell\") {\n            return true\n        }\n    }\n\n    return false\n}\n\nexport function collect(\n    file: File,\n    hints: {\n        types: boolean\n        parameters: boolean\n        exitCodeFormat: \"decimal\" | \"hex\"\n        showMethodId: boolean\n        showGasConsumption: boolean\n        showAsmInstructionGas: boolean\n        showExitCodes: boolean\n        showExplicitTLBIntType: boolean\n        gasFormat: string\n        showContinuationGas: boolean\n        showToCellSize: boolean\n    },\n    gasSettings: {\n        loopGasCoefficient: number\n    },\n): InlayHint[] | null {\n    if (!hints.types && !hints.parameters) return []\n\n    const result: InlayHint[] = []\n\n    const gasHintTooltip: MarkupContent = {\n        kind: \"markdown\",\n        value: \"Note that this value is approximate!\\n\\nLearn more about how LS calculates this: https://github.com/tact-lang/tact-language-server/blob/master/docs/manual/features/gas-calculation.md\",\n    }\n\n    RecursiveVisitor.visit(file.rootNode, (n): boolean => {\n        const type = n.type\n\n        if (type === \"let_statement\" && hints.types) {\n            const decl = new VarDeclaration(n, file)\n            if (decl.hasTypeHint()) return true // already have typehint\n\n            const expr = decl.value()\n            if (!expr) return true\n\n            if (hasObviousType(expr.node)) return true\n\n            const name = decl.nameIdentifier()\n            if (!name) return true\n\n            const type = TypeInferer.inferType(expr)\n            if (!type) return true\n\n            const position = {\n                line: name.endPosition.row,\n                character: name.endPosition.column,\n            }\n            const hintText = `: ${type.qualifiedName()}`\n\n            const diff = FileDiff.forFile(file.uri)\n            diff.appendTo(position, hintText)\n\n            result.push({\n                kind: InlayHintKind.Type,\n                label: typeHintParts(type),\n                position: position,\n                textEdits: diff.toTextEdits(),\n            })\n            return true\n        }\n\n        if (type === \"destruct_bind\" && hints.types) {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n\n            const field = Reference.findDestructField(n, file, name.text)\n            if (!field) return true\n\n            const fieldName = field.nameNode()\n            if (!fieldName) return true\n            const type = TypeInferer.inferType(fieldName)\n            if (!type) return true\n\n            // let Foo { name: otherName } = foo()\n            //                 ^^^^^^^^^\n            // or\n            // let Foo { name } = foo()\n            //           ^^^^\n            const target = n.childForFieldName(\"bind\") ?? n.childForFieldName(\"name\")\n            if (!target) return true\n\n            result.push({\n                kind: InlayHintKind.Type,\n                label: typeHintParts(type),\n                position: {\n                    line: target.endPosition.row,\n                    character: target.endPosition.column,\n                },\n            })\n            return true\n        }\n\n        if ((type === \"field\" || type === \"storage_variable\") && hints.showExplicitTLBIntType) {\n            const field = new Field(n, file)\n            const typeNode = field.typeNode()\n            if (!typeNode) return true\n            const type = typeNode.type()\n            if (!type) return true\n\n            const fieldTlb = field.tlbType()\n            if (fieldTlb !== null) return true\n\n            const addHint = (node: SyntaxNode): void => {\n                const position = {\n                    line: node.endPosition.row,\n                    character: node.endPosition.column,\n                }\n                const hintText = ` as int257`\n\n                const diff = FileDiff.forFile(file.uri)\n                diff.appendTo(position, hintText)\n\n                result.push({\n                    kind: InlayHintKind.Type,\n                    label: hintText,\n                    position: position,\n                    tooltip: {\n                        kind: MarkupKind.Markdown,\n                        value: \"Default TL-B serialization type for Int type.\\n\\nLearn more in documentation: https://docs.tact-lang.org/book/integers/#common-serialization-types\",\n                    },\n                    textEdits: diff.toTextEdits(),\n                })\n            }\n\n            if (type.name() === \"Int\") {\n                addHint(typeNode.node)\n            }\n\n            if (type instanceof MapTy) {\n                const tlbKey = typeNode.node.childForFieldName(\"tlb_key\")\n                const tlbValue = typeNode.node.childForFieldName(\"tlb_value\")\n\n                if (tlbKey === null) {\n                    const key = typeNode.node.childForFieldName(\"key\")\n                    if (key?.text === \"Int\") {\n                        addHint(key)\n                    }\n                }\n\n                if (tlbValue === null) {\n                    const value = typeNode.node.childForFieldName(\"value\")\n                    if (value?.text === \"Int\") {\n                        addHint(value)\n                    }\n                }\n            }\n        }\n\n        if (type === \"foreach_statement\" && hints.types) {\n            const expr = n.childForFieldName(\"map\")\n            if (!expr) return true\n            const exprTy = new Expression(expr, file).type()\n            if (!(exprTy instanceof MapTy)) return true\n\n            const key = n.childForFieldName(\"key\")\n            if (key) {\n                result.push({\n                    kind: InlayHintKind.Type,\n                    label: typeHintParts(exprTy.keyTy),\n                    position: {\n                        line: key.endPosition.row,\n                        character: key.endPosition.column,\n                    },\n                })\n            }\n\n            const value = n.childForFieldName(\"value\")\n            if (value) {\n                result.push({\n                    kind: InlayHintKind.Type,\n                    label: typeHintParts(exprTy.valueTy),\n                    position: {\n                        line: value.endPosition.row,\n                        character: value.endPosition.column,\n                    },\n                })\n            }\n            return true\n        }\n\n        if (type === \"catch_clause\") {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            const exprTy = new Expression(name, file).type()\n            if (!exprTy) return true\n\n            result.push({\n                kind: InlayHintKind.Type,\n                label: typeHintParts(exprTy),\n                position: {\n                    line: name.endPosition.row,\n                    character: name.endPosition.column,\n                },\n            })\n        }\n\n        if (\n            (type === \"static_call_expression\" || type === \"method_call_expression\") &&\n            hints.parameters &&\n            hints.showExitCodes\n        ) {\n            const call = new CallLike(n, file)\n\n            processToCellCall(call, result, hints.showToCellSize)\n\n            const rawArgs = call.rawArguments()\n            const args = rawArgs.filter(value => value.type === \"argument\")\n            if (args.length === 0) return true // no arguments, no need to resolve anything\n\n            const res = Reference.resolve(call.nameNode())\n            if (!(res instanceof Fun)) return true\n\n            const params = res.parameters()\n\n            // We want to show the actual exit code for message in require\n            // require(true, \"message\")\n            // =>\n            // require(true, \"message\" exit code: 999)\n            if (call.name() === \"require\") {\n                const exitCode = compiler.requireFunctionExitCode(n, file, hints.exitCodeFormat)\n                if (exitCode !== null) {\n                    result.push({\n                        kind: InlayHintKind.Parameter,\n                        label: ` exit code: ${exitCode.value}`,\n                        position: {\n                            line: exitCode.node.endPosition.row,\n                            character: exitCode.node.endPosition.column,\n                        },\n                    })\n                }\n            }\n\n            // skip self parameter\n            const shift = type === \"method_call_expression\" && res.withSelf() ? 1 : 0\n\n            processParameterHints(shift, params, args, result)\n            return true\n        }\n\n        if (type === \"initOf\" && n.text !== \"initOf\" && hints.parameters) {\n            const call = new CallLike(n, file)\n            const rawArgs = call.rawArguments()\n            const args = rawArgs.filter(value => value.type === \"argument\")\n            if (args.length === 0) return true // no arguments, no need to resolve anything\n\n            // initOf Contract(10)\n            // ^^^^^^\n            const initOfToken = n.firstChild\n            if (!initOfToken) return true\n\n            // init(some: Int)\n            // ^^^^\n            const res = Reference.resolve(new NamedNode(initOfToken, file))\n            if (res?.node.type !== \"init\") return true\n\n            // init(some: Int)\n            // ^^^^^^^^^^^^^^^\n            const parent = res.node.parent\n            if (!parent) return true\n\n            const init = new InitFunction(parent, file)\n            const params = init.parameters()\n\n            processParameterHints(0, params, args, result)\n            return true\n        }\n\n        if (type === \"asm_sequence\" && hints.showContinuationGas) {\n            const openBrace = n.firstChild\n            const closeBrace = n.lastChild\n            if (!openBrace || !closeBrace) return true\n            if (openBrace.startPosition.row === closeBrace.startPosition.row) return true\n\n            const gas = computeSeqGasConsumption(n, file, gasSettings)\n\n            result.push({\n                kind: InlayHintKind.Type,\n                label: instructionPresentation(gas.value.toString(), \"\", hints.gasFormat),\n                position: {\n                    line: openBrace.endPosition.row,\n                    character: openBrace.endPosition.column,\n                },\n                tooltip: gasHintTooltip,\n                paddingLeft: true,\n            })\n        }\n\n        if (type === \"asm_expression\" && hints.showAsmInstructionGas) {\n            const instr = new AsmInstr(n, file)\n            const info = instr.info()\n\n            const presentation = instructionPresentation(\n                info?.doc.gas,\n                info?.doc.stack,\n                hints.gasFormat,\n            )\n\n            result.push({\n                kind: InlayHintKind.Type,\n                label: presentation,\n                position: {\n                    line: n.endPosition.row,\n                    character: n.endPosition.column,\n                },\n                paddingLeft: true,\n            })\n            return true\n        }\n\n        if (type === \"asm_function\" && hints.showGasConsumption) {\n            const func = new Fun(n, file)\n            const openBrace = func.openBrace()\n            const closeBrace = func.closeBrace()\n            if (!openBrace || !closeBrace) return true\n            if (openBrace.startPosition.row === closeBrace.startPosition.row) return true\n\n            const gas = func.computeGasConsumption(gasSettings)\n            if (gas.unknown || gas.value === 0) {\n                console.log(\"here\", gas)\n                return true\n            }\n\n            const presentation = gas.exact ? `${gas.value} gas` : `~${gas.value} gas`\n\n            result.push({\n                kind: InlayHintKind.Type,\n                label: `  ${presentation}`,\n                position: {\n                    line: openBrace.endPosition.row,\n                    character: openBrace.endPosition.column,\n                },\n                tooltip: gasHintTooltip,\n            })\n            return true\n        }\n\n        if (type === \"storage_function\" && hints.showMethodId) {\n            const func = new Fun(n, file)\n            if (!func.isGetMethod) return true\n            if (func.hasExplicitMethodId) return true\n\n            const modifiers = n.childForFieldName(\"attributes\")\n            if (!modifiers) return true\n\n            const actualId = func.computeMethodId()\n\n            result.push({\n                kind: InlayHintKind.Type,\n                label: `(${actualId})`,\n                position: {\n                    line: modifiers.endPosition.row,\n                    character: modifiers.endPosition.column,\n                },\n            })\n            return true\n        }\n\n        return true\n    })\n\n    if (result.length > 0) {\n        return result\n    }\n\n    return null\n}\n\nfunction typeHintParts(ty: Ty): InlayHintLabelPart[] {\n    return [\n        {\n            value: \": \",\n        },\n        ...renderTypeToParts(ty),\n    ]\n}\n\nfunction renderTypeToParts(ty: Ty): InlayHintLabelPart[] {\n    if (ty instanceof PrimitiveTy) {\n        return [\n            {\n                value: ty.name(),\n                tooltip: \"\",\n                location: toLocation(ty.anchor?.nameNode()),\n            },\n        ]\n    }\n\n    if (ty instanceof OptionTy) {\n        return [\n            ...renderTypeToParts(ty.innerTy),\n            {\n                value: \"?\",\n            },\n        ]\n    }\n\n    if (ty instanceof BouncedTy) {\n        return [{value: \"bounced<\"}, ...renderTypeToParts(ty.innerTy), {value: \">\"}]\n    }\n\n    if (ty instanceof MapTy) {\n        return [\n            {value: \"map<\"},\n            ...renderTypeToParts(ty.keyTy),\n            {value: \", \"},\n            ...renderTypeToParts(ty.valueTy),\n            {value: \">\"},\n        ]\n    }\n\n    if (ty instanceof BaseTy) {\n        return [\n            {\n                value: ty.name(),\n                location: toLocation((ty.anchor as NamedNode | undefined)?.nameNode()),\n                tooltip: \"\",\n            },\n        ]\n    }\n\n    return [\n        {\n            value: ty.name(),\n            tooltip: \"\",\n        },\n    ]\n}\n\nfunction toLocation(node: Node | null | undefined): Location | undefined {\n    if (!node) return undefined\n\n    return {\n        uri: URI.parse(node.file.uri).toString(true),\n        range: asLspRange(node.node),\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {TactCompiler} from \"@server/compiler/TactCompiler\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\nimport {URI} from \"vscode-uri\"\nimport {workspaceRoot} from \"@server/toolchain\"\nimport * as path from \"node:path\"\nimport {existsSync} from \"node:fs\"\n\nexport class CompilerInspection implements Inspection {\n    public readonly id: \"tact-compiler-errors\" = InspectionIds.COMPILER\n\n    public async inspect(file: File): Promise<lsp.Diagnostic[]> {\n        if (file.fromStdlib) return []\n\n        const configPath = path.join(workspaceRoot, \"tact.config.json\")\n        const hasConfig = existsSync(configPath)\n\n        try {\n            const filePath = URI.parse(file.uri).fsPath\n\n            const errors = hasConfig\n                ? await TactCompiler.checkProject()\n                : await TactCompiler.checkFile(filePath)\n\n            return errors\n                .filter(error => filePath.endsWith(error.file))\n                .map(error => ({\n                    severity: lsp.DiagnosticSeverity.Error,\n                    range: {\n                        start: {\n                            line: error.line,\n                            character: error.character,\n                        },\n                        end: {\n                            line: error.line,\n                            character: error.character + (error.length ?? 1),\n                        },\n                    },\n                    message: error.message,\n                    source: \"tact-compiler\",\n                    code: this.id,\n                }))\n        } catch {\n            return []\n        }\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {UnusedInspection} from \"./UnusedInspection\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\nimport {asLspRange} from \"@server/utils/position\"\nimport {NamedNode} from \"@server/psi/Node\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport {Contract} from \"@server/psi/Decls\"\nimport {toolchain} from \"@server/toolchain\"\n\nexport class DontUseDeployableInspection extends UnusedInspection implements Inspection {\n    public readonly id: \"dont-use-deployable\" = InspectionIds.DONT_USE_DEPLOYABLE\n\n    protected checkFile(file: File, diagnostics: lsp.Diagnostic[]): void {\n        if (file.fromStdlib) return\n        if (!toolchain.isTact16()) return\n\n        const contracts = file.getContracts()\n        for (const contract of contracts) {\n            const inheritedTraits = contract.inheritTraitsList()\n            if (inheritedTraits.length === 0) continue\n\n            const deployable = inheritedTraits.find(t => t.name() === \"Deployable\")\n            if (!deployable) continue\n\n            diagnostics.push({\n                severity: lsp.DiagnosticSeverity.Warning,\n                range: asLspRange(deployable.node),\n                message: `Prefer empty receiver with cashback over Deployable trait for better performance`,\n                source: \"tact\",\n                code: \"performance\",\n                data: this.rewriteDeployableWithEmptyReceiver(\n                    contract,\n                    deployable,\n                    inheritedTraits,\n                    file,\n                ),\n            })\n        }\n    }\n\n    private rewriteDeployableWithEmptyReceiver(\n        contract: Contract,\n        deployableNode: NamedNode,\n        inheritedTraits: NamedNode[],\n        file: File,\n    ): undefined | lsp.CodeAction {\n        const diff = FileDiff.forFile(file.uri)\n\n        if (inheritedTraits.length === 1) {\n            const withClause = deployableNode.node.parent\n            if (!withClause || withClause.type !== \"trait_list\") return undefined\n\n            const range = asLspRange(withClause)\n            diff.replace(\n                {\n                    ...range,\n                    start: {\n                        line: range.start.line,\n                        character: range.start.character - 1, // space before\n                    },\n                },\n                \"\",\n            )\n        } else {\n            const range = asLspRange(deployableNode.node)\n            diff.replace(\n                {\n                    ...range,\n                    start: {\n                        line: range.start.line,\n                        character: range.start.character - 1, // space before\n                    },\n                },\n                \"\",\n            )\n\n            const prevSibling = deployableNode.node.previousSibling\n            if (prevSibling?.text === \",\") {\n                diff.replace(asLspRange(prevSibling), \"\")\n            }\n            const nextSibling = deployableNode.node.nextSibling\n            if (nextSibling?.text === \",\" && prevSibling?.text !== \",\") {\n                diff.replace(asLspRange(nextSibling), \"\")\n            }\n        }\n\n        const functions = contract.messageFunctions()\n        const hasEmptyReceiverFunction = functions.some(it => it.nameLike() === \"receive()\")\n\n        if (!hasEmptyReceiverFunction) {\n            const positionToInsert = contract.positionForReceiver()\n            if (positionToInsert) {\n                diff.appendAsNextLine(\n                    positionToInsert.line,\n                    `\n    receive() {\n        cashback(sender());\n    }`,\n                )\n            }\n        }\n\n        const edit = diff.toWorkspaceEdit()\n        return {\n            edit,\n            title: `Rewrite with empty receiver with cashback`,\n            isPreferred: true,\n        }\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {UnusedInspection} from \"./UnusedInspection\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\nimport {asLspRange} from \"@server/utils/position\"\n\nexport class DontUseTextReceiversInspection extends UnusedInspection implements Inspection {\n    public readonly id: \"dont-use-text-receivers\" = InspectionIds.DONT_USE_TEXT_RECEIVERS\n\n    protected checkFile(file: File, diagnostics: lsp.Diagnostic[]): void {\n        if (file.fromStdlib) return\n\n        const contracts = file.getContracts()\n        for (const contract of contracts) {\n            const functions = contract.messageFunctions()\n            if (functions.length === 0) continue\n\n            for (const f of functions) {\n                const param = f.parameter()\n                if (!param) continue // empty `receive()`\n                if (param.type !== \"string\") continue // not `receive(\"hello\")`\n\n                diagnostics.push({\n                    severity: lsp.DiagnosticSeverity.Warning,\n                    range: asLspRange(param),\n                    message: `Use binary messages instead of text messages to improve performance`,\n                    source: \"tact\",\n                    code: \"performance\",\n                })\n            }\n        }\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspRange} from \"@server/utils/position\"\nimport {RecursiveVisitor} from \"@server/psi/RecursiveVisitor\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\n\nexport class EmptyBlockInspection implements Inspection {\n    public readonly id: \"empty-block\" = InspectionIds.EMPTY_BLOCK\n\n    public inspect(file: File): lsp.Diagnostic[] {\n        if (file.fromStdlib) return []\n        const diagnostics: lsp.Diagnostic[] = []\n\n        const blockTypes = new Set([\n            \"function_body\",\n            \"receive_body\",\n            \"bounced_body\",\n            \"external_body\",\n            \"init_body\",\n            \"block_statement\",\n            \"if_statement\",\n            \"else_clause\",\n            \"while_statement\",\n            \"repeat_statement\",\n            \"try_statement\",\n            \"catch_clause\",\n            \"foreach_statement\",\n        ])\n\n        RecursiveVisitor.visit(file.rootNode, node => {\n            if (blockTypes.has(node.type)) {\n                const body = node.children.find(child => child?.type === \"block_statement\")\n                // only { and }\n                if (body && body.children.length <= 2) {\n                    const openBrace = body.firstChild\n                    if (!openBrace) return\n\n                    diagnostics.push({\n                        severity: lsp.DiagnosticSeverity.Warning,\n                        range: asLspRange(openBrace),\n                        message: \"Empty code block\",\n                        source: \"tact\",\n                        code: \"empty-block\",\n                    })\n                }\n            }\n        })\n\n        return diagnostics\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport {File} from \"@server/psi/File\"\n\nexport const InspectionIds = {\n    COMPILER: \"tact-compiler-errors\",\n    UNUSED_PARAMETER: \"unused-parameter\",\n    EMPTY_BLOCK: \"empty-block\",\n    REWRITE: \"rewrite\",\n    UNUSED_VARIABLE: \"unused-variable\",\n    STRUCT_INITIALIZATION: \"struct-initialization\",\n    UNUSED_CONTRACT_MEMBERS: \"unused-contract-members\",\n    UNUSED_IMPORT: \"unused-import\",\n    MISSED_FIELD_IN_CONTRACT: \"missed-field-in-contract\",\n    NOT_IMPORTED_SYMBOL: \"not-imported-symbol\",\n    DONT_USE_TEXT_RECEIVERS: \"dont-use-text-receivers\",\n    DONT_USE_DEPLOYABLE: \"dont-use-deployable\",\n    MISTI: \"misti\",\n} as const\n\nexport type InspectionId = (typeof InspectionIds)[keyof typeof InspectionIds]\n\nexport interface Inspection {\n    readonly id: InspectionId\n    inspect(file: File): Promise<lsp.Diagnostic[]> | lsp.Diagnostic[]\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport type {Contract, Field} from \"@server/psi/Decls\"\nimport {UnusedInspection} from \"./UnusedInspection\"\nimport {asLspRange} from \"@server/utils/position\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\n\nexport class MissedFieldInContractInspection extends UnusedInspection implements Inspection {\n    public readonly id: \"missed-field-in-contract\" = InspectionIds.MISSED_FIELD_IN_CONTRACT\n\n    protected checkFile(file: File, diagnostics: lsp.Diagnostic[]): void {\n        file.getContracts().forEach(contract => {\n            this.inspectContract(contract, diagnostics)\n        })\n    }\n\n    private inspectContract(contract: Contract, diagnostics: lsp.Diagnostic[]): void {\n        const inheritedTraits = contract.inheritTraits()\n        if (inheritedTraits.length === 0) return // nothing to check\n\n        const fieldsToImplement = inheritedTraits.flatMap(it => it.ownFields())\n        const contractFields = contract.ownFields()\n\n        const contractFieldsMapping: Map<string, Field> = new Map()\n        contractFields.forEach(field => {\n            contractFieldsMapping.set(field.name(), field)\n        })\n\n        fieldsToImplement.forEach(field => {\n            if (contractFieldsMapping.has(field.name())) {\n                return\n            }\n\n            const nameIdent = contract.nameIdentifier()\n            const owner = field.owner()\n            if (!nameIdent || !owner) return\n            diagnostics.push({\n                severity: lsp.DiagnosticSeverity.Error,\n                range: asLspRange(nameIdent),\n                message: `Contract \\`${contract.name()}\\` is missing \\`${field.name()}\\` field required by \\`${owner.name()}\\``,\n                source: \"tact\",\n                code: \"missing-field\",\n            })\n        })\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport {File} from \"@server/psi/File\"\nimport {URI} from \"vscode-uri\"\nimport {MistiAnalyzer} from \"@server/compiler/MistiAnalyzer\"\nimport {Severity} from \"@server/compiler/TactCompiler\"\nimport {Inspection, InspectionIds} from \"@server/inspections/Inspection\"\nimport * as path from \"node:path\"\nimport {workspaceRoot} from \"@server/toolchain\"\nimport {existsSync} from \"node:fs\"\nimport {getDocumentSettings} from \"@server/utils/settings\"\n\nexport class MistiInspection implements Inspection {\n    public readonly id: \"misti\" = InspectionIds.MISTI\n\n    public async inspect(file: File): Promise<lsp.Diagnostic[]> {\n        if (file.fromStdlib) return []\n\n        const configPath = path.join(workspaceRoot, \"tact.config.json\")\n        const hasConfig = existsSync(configPath)\n\n        const settings = await getDocumentSettings(file.uri)\n\n        try {\n            const filePath = URI.parse(file.uri).fsPath\n\n            const errors = hasConfig\n                ? await MistiAnalyzer.checkProject(settings)\n                : await MistiAnalyzer.checkFile(settings, filePath)\n\n            return errors\n                .filter(error => filePath.endsWith(error.file))\n                .map(error => ({\n                    severity: MistiInspection.mapSeverity(error.severity),\n                    range: {\n                        start: {\n                            line: error.line,\n                            character: error.character,\n                        },\n                        end: {\n                            line: error.line,\n                            character: error.character + (error.length ?? 1),\n                        },\n                    },\n                    message: error.message,\n                    source: \"misti\",\n                    code: error.id,\n                }))\n        } catch {\n            return []\n        }\n    }\n\n    private static mapSeverity(sev: Severity): lsp.DiagnosticSeverity {\n        if (sev === Severity.INFO) return lsp.DiagnosticSeverity.Information\n        if (sev === Severity.LOW) return lsp.DiagnosticSeverity.Hint\n        if (sev === Severity.MEDIUM) return lsp.DiagnosticSeverity.Warning\n        if (sev === Severity.HIGH) return lsp.DiagnosticSeverity.Error\n        return lsp.DiagnosticSeverity.Error\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspRange} from \"@server/utils/position\"\nimport {RecursiveVisitor} from \"@server/psi/RecursiveVisitor\"\nimport {Reference} from \"@server/psi/Reference\"\nimport {NamedNode} from \"@server/psi/Node\"\nimport {Contract, Field, Primitive} from \"@server/psi/Decls\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\nimport {index} from \"@server/indexes\"\n\nexport class NotImportedSymbolInspection implements Inspection {\n    public readonly id: \"not-imported-symbol\" = InspectionIds.NOT_IMPORTED_SYMBOL\n\n    public inspect(file: File): lsp.Diagnostic[] {\n        if (file.fromStdlib) return []\n        const diagnostics: lsp.Diagnostic[] = []\n\n        RecursiveVisitor.visit(file.rootNode, node => {\n            if (node.type !== \"identifier\" && node.type !== \"type_identifier\") return\n            const resolved = Reference.resolve(new NamedNode(node, file))\n            if (!resolved) return\n            if (\n                resolved instanceof Primitive ||\n                resolved instanceof Contract ||\n                resolved instanceof Field\n            ) {\n                return\n            }\n\n            // don't need to import same file\n            if (resolved.file.uri === file.uri) return\n\n            const importPath = resolved.file.importPath(file)\n            // already imported\n            if (file.alreadyImport(importPath)) return\n            // some files like stubs or stdlib imported implicitly\n            if (resolved.file.isImportedImplicitly()) return\n            // guard for multi projects\n            if (index.hasSeveralDeclarations(resolved.name())) return\n\n            diagnostics.push({\n                severity: lsp.DiagnosticSeverity.Error,\n                range: asLspRange(node),\n                message: \"Symbol from another file should be imported\",\n                source: \"tact\",\n                code: \"not-imported-symbol\",\n            })\n        })\n\n        return diagnostics\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspRange} from \"@server/utils/position\"\nimport {RecursiveVisitor} from \"@server/psi/RecursiveVisitor\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\nimport {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport {CallLike} from \"@server/psi/Node\"\nimport {toolchain} from \"@server/toolchain\"\n\nexport class RewriteInspection implements Inspection {\n    public readonly id: \"rewrite\" = InspectionIds.REWRITE\n\n    public inspect(file: File): lsp.Diagnostic[] {\n        if (!toolchain.isTact16()) return []\n        if (file.fromStdlib) return []\n        const diagnostics: lsp.Diagnostic[] = []\n\n        RecursiveVisitor.visit(file.rootNode, node => {\n            if (this.isContextSender(node)) {\n                diagnostics.push({\n                    severity: lsp.DiagnosticSeverity.Information,\n                    range: asLspRange(node),\n                    message: \"Can be rewritten as more efficient `sender()`\",\n                    source: \"tact\",\n                    code: \"performance\",\n                    data: this.rewriteContextSenderAction(node, file),\n                })\n            }\n\n            const sendFields = this.isSend(node, file)\n            if (sendFields && this.canBeRewrittenAsMessage(sendFields)) {\n                const name = node.childForFieldName(\"name\")\n                if (!name) return\n\n                diagnostics.push({\n                    severity: lsp.DiagnosticSeverity.Information,\n                    range: asLspRange(name),\n                    message:\n                        \"Can be rewritten as more efficient `message(MessageParameters { ... })`\",\n                    source: \"tact\",\n                    code: \"performance\",\n                    data: this.rewriteSendWithAction(node, file, \"message\", \"MessageParameters\"),\n                })\n            }\n\n            if (sendFields && this.canBeRewrittenAsDeploy(sendFields)) {\n                const name = node.childForFieldName(\"name\")\n                if (!name) return\n\n                diagnostics.push({\n                    severity: lsp.DiagnosticSeverity.Information,\n                    range: asLspRange(name),\n                    message:\n                        \"Can be rewritten as more efficient `deploy(DeployParameters { ... })`\",\n                    source: \"tact\",\n                    code: \"performance\",\n                    data: this.rewriteSendWithAction(node, file, \"deploy\", \"DeployParameters\"),\n                })\n            }\n        })\n\n        return diagnostics\n    }\n\n    /**\n     * Check for `context().sender`.\n     */\n    private isContextSender(node: SyntaxNode): boolean {\n        if (node.type !== \"field_access_expression\") return false\n\n        const left = node.childForFieldName(\"object\")\n        const right = node.childForFieldName(\"name\")\n\n        if (!left || !right) return false\n\n        if (right.text !== \"sender\") return false\n        if (left.type !== \"static_call_expression\") return false\n\n        const callName = left.childForFieldName(\"name\")\n        return callName?.text === \"context\"\n    }\n\n    private rewriteContextSenderAction(node: SyntaxNode, file: File): lsp.CodeAction {\n        const diff = FileDiff.forFile(file.uri)\n        diff.replace(asLspRange(node), \"sender()\")\n        const edit = diff.toWorkspaceEdit()\n        return {\n            edit,\n            title: \"Rewrite as `sender()`\",\n            isPreferred: true,\n        }\n    }\n\n    private canBeRewrittenAsMessage(fields: Map<string, string>): boolean {\n        if (fields.has(\"code\") && fields.get(\"code\") !== \"null\") {\n            // MessageParams doesn't have `code` field\n            return false\n        }\n        if (fields.has(\"data\") && fields.get(\"data\") !== \"null\") {\n            // MessageParams doesn't have `data` field\n            return false\n        }\n        // Any `send()` without these fields can be rewritten\n        return true\n    }\n\n    private canBeRewrittenAsDeploy(fields: Map<string, string>): boolean {\n        if (fields.has(\"to\")) {\n            // DeployParams doesn't have `to` field\n            return false\n        }\n        // Any `send()` without this field can be rewritten\n        return true\n    }\n\n    private isSend(node: SyntaxNode, file: File): undefined | Map<string, string> {\n        if (node.type !== \"static_call_expression\") return undefined\n        const callName = node.childForFieldName(\"name\")\n        if (callName?.text !== \"send\") return undefined\n\n        const call = new CallLike(node, file)\n        const args = call.arguments()\n        if (args.length !== 1) return undefined\n\n        const arg = args[0]\n        if (arg.type !== \"argument\") return undefined\n\n        const instanceExpression = arg.firstChild\n        if (instanceExpression?.type !== \"instance_expression\") return undefined\n\n        const name = instanceExpression.childForFieldName(\"name\")\n        if (name?.text !== \"SendParameters\") return undefined\n\n        const instanceArguments = instanceExpression.childForFieldName(\"arguments\")\n        if (!instanceArguments) return undefined\n\n        const fields = instanceArguments.children\n            .filter(it => it?.type === \"instance_argument\")\n            .filter(it => it !== null)\n\n        const fieldsMap: Map<string, string> = new Map()\n        for (const field of fields) {\n            const name = field.childForFieldName(\"name\")\n            const value = field.childForFieldName(\"value\")\n\n            if (!name) continue\n\n            if (value) {\n                fieldsMap.set(name.text, value.text)\n            } else {\n                // Foo { foo }\n                //       ^^^ field name and field initializer\n                fieldsMap.set(name.text, name.text)\n            }\n        }\n\n        return fieldsMap\n    }\n\n    private rewriteSendWithAction(\n        node: SyntaxNode,\n        file: File,\n        functionName: string,\n        paramsName: string,\n    ): undefined | lsp.CodeAction {\n        if (node.type !== \"static_call_expression\") return undefined\n        const callName = node.childForFieldName(\"name\")\n        if (callName?.text !== \"send\") return undefined\n\n        const call = new CallLike(node, file)\n        const args = call.arguments()\n        if (args.length !== 1) return undefined\n\n        const arg = args[0]\n        if (arg.type !== \"argument\") return undefined\n\n        const instanceExpression = arg.firstChild\n        if (instanceExpression?.type !== \"instance_expression\") return undefined\n\n        const name = instanceExpression.childForFieldName(\"name\")\n        if (name?.text !== \"SendParameters\") return undefined\n\n        const diff = FileDiff.forFile(file.uri)\n        diff.replace(asLspRange(callName), functionName)\n        diff.replace(asLspRange(name), paramsName)\n\n        const edit = diff.toWorkspaceEdit()\n        return {\n            edit,\n            title: `Rewrite as \\`${functionName}(${paramsName} { ... })\\``,\n            isPreferred: true,\n        }\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspRange} from \"@server/utils/position\"\nimport {RecursiveVisitor} from \"@server/psi/RecursiveVisitor\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {index, IndexKey} from \"@server/indexes\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\n\nexport class StructInitializationInspection implements Inspection {\n    public readonly id: \"struct-initialization\" = InspectionIds.STRUCT_INITIALIZATION\n\n    public inspect(file: File): lsp.Diagnostic[] {\n        if (file.fromStdlib) return []\n        const diagnostics: lsp.Diagnostic[] = []\n\n        RecursiveVisitor.visit(file.rootNode, node => {\n            if (node.type === \"instance_expression\") {\n                this.checkStructLiteral(node, diagnostics)\n            }\n        })\n\n        return diagnostics\n    }\n\n    private checkStructLiteral(node: SyntaxNode, diagnostics: lsp.Diagnostic[]): void {\n        const structName = node.childForFieldName(\"name\")\n        if (!structName) return\n        const args = node.childForFieldName(\"arguments\")\n        if (!args) return\n\n        const structDef =\n            index.elementByName(IndexKey.Structs, structName.text) ??\n            index.elementByName(IndexKey.Messages, structName.text)\n        if (!structDef) return\n\n        const fields = structDef.fields()\n        const requiredFields = fields.filter(f => f.defaultValue() === null).map(f => f.name())\n\n        const initializedFields: Set<string> = new Set()\n        args.children.forEach(child => {\n            if (!child) return\n            if (child.type !== \"instance_argument\") return\n            const name = child.childForFieldName(\"name\")\n            if (!name) return\n\n            // Foo { name }\n            //       ^^^^\n            // or\n            // Foo { name: value }\n            //       ^^^^\n            initializedFields.add(name.text)\n        })\n\n        const missingFields = requiredFields.filter(field => !initializedFields.has(field))\n\n        const message =\n            missingFields.length === 1\n                ? `Field '${missingFields[0]}' is required but not initialized`\n                : `Fields ${missingFields.map(f => `'${f}'`).join(\", \")} are required but not initialized`\n\n        if (missingFields.length > 0) {\n            diagnostics.push({\n                severity: lsp.DiagnosticSeverity.Error,\n                range: asLspRange(structName),\n                message: message,\n                source: \"tact\",\n                code: \"missing-fields\",\n            })\n        }\n    }\n}\n","import type * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport type {Contract} from \"@server/psi/Decls\"\nimport {UnusedInspection} from \"./UnusedInspection\"\nimport {superConstant, superField, superMethod} from \"@server/search/implementations\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\n\nexport class UnusedContractMembersInspection extends UnusedInspection implements Inspection {\n    public readonly id: \"unused-contract-members\" = InspectionIds.UNUSED_CONTRACT_MEMBERS\n\n    protected checkFile(file: File, diagnostics: lsp.Diagnostic[]): void {\n        file.getContracts().forEach(contract => {\n            this.inspectContract(contract, diagnostics)\n        })\n    }\n\n    private inspectContract(contract: Contract, diagnostics: lsp.Diagnostic[]): void {\n        contract.ownFields().forEach(field => {\n            const nameIdent = field.nameIdentifier()\n            if (!nameIdent) return\n\n            this.checkUnused(nameIdent, contract.file, diagnostics, {\n                kind: \"Field\",\n                code: \"unused-field\",\n                rangeNode: nameIdent,\n                skipIf: () => superField(field) !== null,\n            })\n        })\n\n        contract.ownConstants().forEach(constant => {\n            const nameIdent = constant.nameIdentifier()\n            if (!nameIdent) return\n\n            this.checkUnused(nameIdent, contract.file, diagnostics, {\n                kind: \"Constant\",\n                code: \"unused-constant\",\n                rangeNode: nameIdent,\n                skipIf: () => superConstant(constant) !== null,\n            })\n        })\n\n        contract.ownMethods().forEach(method => {\n            if (method.isGetMethod) return // get methods are always used\n\n            const nameIdent = method.nameIdentifier()\n            if (!nameIdent) return\n\n            this.checkUnused(nameIdent, contract.file, diagnostics, {\n                kind: \"Method\",\n                code: \"unused-method\",\n                rangeNode: nameIdent,\n                skipIf: () => superMethod(method) !== null,\n            })\n        })\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspRange} from \"@server/utils/position\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {ImportResolver} from \"@server/psi/ImportResolver\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\n\nexport class UnusedImportInspection implements Inspection {\n    public readonly id: \"unused-import\" = InspectionIds.UNUSED_IMPORT\n\n    public inspect(file: File): lsp.Diagnostic[] {\n        if (file.fromStdlib) return []\n        const diagnostics: lsp.Diagnostic[] = []\n\n        const imports: Map<\n            string,\n            {\n                node: SyntaxNode\n                names: Set<string>\n            }\n        > = new Map()\n\n        const importNodes = file.rootNode.children\n            .filter(it => it?.type === \"import\")\n            .filter(it => it !== null)\n\n        importNodes.forEach(imp => {\n            const pathNode = imp.childForFieldName(\"library\")\n            if (!pathNode) return\n\n            const importPath = pathNode.text.slice(1, -1)\n            const importedFile = ImportResolver.resolveAsFile(file, pathNode)\n            if (!importedFile) return\n\n            const decls = importedFile.getDecls()\n\n            const names: Set<string> = new Set()\n            decls.forEach(d => {\n                names.add(d.name())\n            })\n\n            imports.set(importPath, {\n                node: imp,\n                names,\n            })\n        })\n\n        for (const [importPath, {node, names}] of imports) {\n            if (!UnusedImportInspection.usedInFile(names, file)) {\n                diagnostics.push({\n                    severity: lsp.DiagnosticSeverity.Hint,\n                    range: asLspRange(node),\n                    message: `Import '${importPath}' is never used`,\n                    source: \"tact\",\n                    code: \"unused-import\",\n                    tags: [lsp.DiagnosticTag.Unnecessary],\n                })\n            }\n        }\n\n        return diagnostics\n    }\n\n    private static usedInFile(names: Set<string>, file: File): boolean {\n        for (const name of names) {\n            if (file.content.includes(name)) {\n                return true\n            }\n        }\n        return false\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspRange} from \"@server/utils/position\"\nimport {Referent} from \"@server/psi/Referent\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\n\nexport abstract class UnusedInspection {\n    public inspect(file: File): lsp.Diagnostic[] {\n        if (file.fromStdlib) return []\n        const diagnostics: lsp.Diagnostic[] = []\n        this.checkFile(file, diagnostics)\n        return diagnostics\n    }\n\n    protected abstract checkFile(file: File, diagnostics: lsp.Diagnostic[]): void\n\n    protected checkUnused(\n        node: SyntaxNode | null,\n        file: File,\n        diagnostics: lsp.Diagnostic[],\n        options: {\n            kind: string\n            severity?: lsp.DiagnosticSeverity\n            code?: string\n            rangeNode?: SyntaxNode\n            skipIf?: () => boolean\n        },\n    ): void {\n        if (!node || node.text === \"_\") return\n\n        const references = new Referent(node, file).findReferences()\n        if (references.length === 0) {\n            const range = asLspRange(options.rangeNode ?? node)\n\n            if (options.skipIf && options.skipIf()) {\n                return\n            }\n\n            diagnostics.push({\n                severity: options.severity ?? lsp.DiagnosticSeverity.Hint,\n                range,\n                message: `${options.kind} '${node.text}' is never used`,\n                source: \"tact\",\n                code: options.code ?? \"unused\",\n                tags: [lsp.DiagnosticTag.Unnecessary],\n            })\n\n            console.info(`Found unused ${options.kind.toLowerCase()} '${node.text}'`)\n        }\n    }\n}\n","import type * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport type {Fun} from \"@server/psi/Decls\"\nimport {UnusedInspection} from \"./UnusedInspection\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\n\nexport class UnusedParameterInspection extends UnusedInspection implements Inspection {\n    public readonly id: \"unused-parameter\" = InspectionIds.UNUSED_PARAMETER\n\n    protected checkFile(file: File, diagnostics: lsp.Diagnostic[]): void {\n        file.getFuns().forEach(fun => {\n            this.inspectFunction(fun, diagnostics)\n        })\n\n        file.getContracts().forEach(contract => {\n            contract.ownMethods().forEach(method => {\n                this.inspectFunction(method, diagnostics)\n            })\n        })\n\n        file.getTraits().forEach(trait => {\n            trait.ownMethods().forEach(method => {\n                this.inspectFunction(method, diagnostics)\n            })\n        })\n    }\n\n    private inspectFunction(fun: Fun, diagnostics: lsp.Diagnostic[]): void {\n        if (!fun.hasBody()) return\n        const parameters = fun.parameters()\n\n        parameters.forEach(param => {\n            const nameIdent = param.nameIdentifier()\n            if (!nameIdent) return\n\n            this.checkUnused(param.nameIdentifier(), fun.file, diagnostics, {\n                kind: \"Parameter\",\n                code: \"unused-parameter\",\n                rangeNode: nameIdent,\n            })\n        })\n    }\n}\n","import type * as lsp from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {UnusedInspection} from \"./UnusedInspection\"\nimport {RecursiveVisitor} from \"@server/psi/RecursiveVisitor\"\nimport {Inspection, InspectionIds} from \"./Inspection\"\n\nexport class UnusedVariableInspection extends UnusedInspection implements Inspection {\n    public readonly id: \"unused-variable\" = InspectionIds.UNUSED_VARIABLE\n\n    protected checkFile(file: File, diagnostics: lsp.Diagnostic[]): void {\n        RecursiveVisitor.visit(file.rootNode, node => {\n            if (node.type === \"destruct_bind\") {\n                // let Foo { name: otherName } = foo()\n                //                 ^^^^^^^^^\n                // or\n                // let Foo { name } = foo()\n                //           ^^^^\n                const target = node.childForFieldName(\"bind\") ?? node.childForFieldName(\"name\")\n                this.checkUnused(target, file, diagnostics, {\n                    kind: \"Variable\",\n                    code: \"unused-variable\",\n                })\n                return\n            }\n\n            if (node.type !== \"let_statement\") {\n                return\n            }\n\n            const nameNode = node.childForFieldName(\"name\")\n            if (!nameNode) return\n            this.checkUnused(nameNode, file, diagnostics, {\n                kind: \"Variable\",\n                code: \"unused-variable\",\n            })\n        })\n    }\n}\n","import type {Intention, IntentionContext} from \"@server/intentions/Intention\"\nimport type {WorkspaceEdit} from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspPosition, asParserPoint} from \"@server/utils/position\"\nimport type {Position} from \"vscode-languageclient\"\nimport {VarDeclaration} from \"@server/psi/Node\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\n\nexport class AddExplicitType implements Intention {\n    public readonly id: string = \"tact.add-explicit-type\"\n    public readonly name: string = \"Add explicit type\"\n\n    private static findVariable(ctx: IntentionContext): VarDeclaration | null {\n        const referenceNode = nodeAtPosition(ctx.position, ctx.file)\n        if (referenceNode?.type !== \"identifier\") return null\n        const parent = referenceNode.parent\n        if (parent?.type !== \"let_statement\") return null\n        return new VarDeclaration(parent, ctx.file)\n    }\n\n    public isAvailable(ctx: IntentionContext): boolean {\n        const variable = AddExplicitType.findVariable(ctx)\n        if (!variable) return false\n        return !variable.hasTypeHint()\n    }\n\n    public invoke(ctx: IntentionContext): WorkspaceEdit | null {\n        const variable = AddExplicitType.findVariable(ctx)\n        if (!variable) return null\n        if (variable.hasTypeHint()) return null\n\n        const name = variable.nameIdentifier()\n        if (!name) return null\n\n        const inferredType = variable.value()?.type()\n        if (!inferredType) return null\n\n        const diff = FileDiff.forFile(ctx.file.uri)\n        diff.appendTo(asLspPosition(name.endPosition), `: ${inferredType.qualifiedName()}`)\n\n        return diff.toWorkspaceEdit()\n    }\n}\n\nfunction nodeAtPosition(pos: Position, file: File): SyntaxNode | null {\n    const cursorPosition = asParserPoint(pos)\n    return file.rootNode.descendantForPosition(cursorPosition)\n}\n","import type {Intention, IntentionContext} from \"@server/intentions/Intention\"\nimport type {WorkspaceEdit} from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspPosition, asParserPoint} from \"@server/utils/position\"\nimport type {Position} from \"vscode-languageclient\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport {Field, InitFunction, StorageMembersOwner} from \"@server/psi/Decls\"\nimport {PrimitiveTy, StructTy, Ty} from \"@server/types/BaseTy\"\nimport {RecursiveVisitor} from \"@server/psi/RecursiveVisitor\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {TypeInferer} from \"@server/TypeInferer\"\nimport {NamedNode} from \"@server/psi/Node\"\n\nexport class AddFieldInitialization implements Intention {\n    public readonly id: string = \"tact.add-field-to-init\"\n    public readonly name: string = \"Initialize field in init()\"\n\n    private resolveField(ctx: IntentionContext): Field | null {\n        const node = nodeAtPosition(ctx.position, ctx.file)\n        if (node?.type !== \"identifier\") return null\n\n        const field = node.parent\n        if (field?.type !== \"storage_variable\") return null\n\n        return new Field(field, ctx.file)\n    }\n\n    public isAvailable(ctx: IntentionContext): boolean {\n        const resolved = this.resolveField(ctx)\n        if (!resolved) return false\n        const owner = resolved.owner()\n        if (!owner) return false\n        const initFunction = owner.initFunction()\n        if (initFunction === null) return true // no init function so no initialization\n\n        const fieldAccess = `self.${resolved.name()}`\n\n        // walk over init function to find if there are any initializations of field already\n        let initialized = false\n        RecursiveVisitor.visit(initFunction.node, node => {\n            if (node.type === \"assignment_statement\") {\n                const left = node.childForFieldName(\"left\")\n                if (left?.type !== \"field_access_expression\") return\n\n                if (left.text === fieldAccess) {\n                    initialized = true\n                }\n            }\n        })\n\n        return !initialized\n    }\n\n    public invoke(ctx: IntentionContext): WorkspaceEdit | null {\n        const field = this.resolveField(ctx)\n        if (!field) return null\n        const type = field.typeNode()?.type()\n        if (!type) return null\n\n        const owner = field.owner()\n        if (!owner) return null\n\n        const diff = FileDiff.forFile(ctx.file.uri)\n\n        // remove explicit default value\n        // contract Foo {\n        //     foo: Int = 0;\n        //             ^^^^ this\n        // }\n        const defaultValueRange = field.defaultValueRange()\n        if (defaultValueRange) {\n            diff.replace(defaultValueRange, \"\")\n        }\n\n        const initFunction = owner.initFunction()\n        if (!initFunction) {\n            // most simple case, mo init function, so we need to add one\n            return this.appendInitFunction(diff, field, type, owner)\n        }\n\n        const parameters = initFunction.parameters()\n        if (parameters.length === 1 && parameters[0].name() === \"init\") {\n            // add new field to `*Init` struct\n            return this.addInitializationViaField(diff, initFunction, parameters[0], field, type)\n        }\n\n        const placeToAddParameter = initFunction.endParen()\n        if (!placeToAddParameter) return null\n\n        const hasParameter = parameters.some(p => p.name() === field.name())\n        if (!hasParameter) {\n            // for `init()` we don't want to add comma at beginning\n            const commaPart = parameters.length === 0 ? \"\" : \", \"\n\n            const parameter = `${field.name()}: ${type.qualifiedName()}`\n            diff.appendTo(\n                asLspPosition(placeToAddParameter.startPosition),\n                `${commaPart}${parameter}`,\n            )\n        }\n        this.addFieldInit(diff, initFunction, field, field.name())\n        return diff.toWorkspaceEdit()\n    }\n\n    private addFieldInit(\n        diff: FileDiff,\n        initFunction: InitFunction,\n        field: Field,\n        initializer: string,\n    ): void {\n        // init(foo: Int) {\n        //     if (true) { ... }\n        //     self.foo = foo;\n        //     ^^^^^^^^^^^^^^^ this\n        // }\n        const lastStatementPos = initFunction.lastStatementPos()\n        if (!lastStatementPos) return\n\n        // contract Foo {\n        //     foo: Int;\n        //\n        //     init(foo: Int) {\n        //         self.foo = foo;\n        //^^^^^^^^^ this\n        //     }\n        // }\n        const indent = \" \".repeat(8)\n        const fieldInit = `${indent}self.${field.name()} = ${initializer};`\n\n        if (initFunction.hasOneLineBody) {\n            const closeBraceIndent = \" \".repeat(4)\n            diff.appendTo(lastStatementPos, `\\n${fieldInit}\\n${closeBraceIndent}`)\n        } else {\n            diff.appendAsNextLine(lastStatementPos.line, fieldInit)\n        }\n    }\n\n    private addInitializationViaField(\n        diff: FileDiff,\n        initFunction: InitFunction,\n        parameter: NamedNode,\n        field: Field,\n        type: Ty,\n    ): WorkspaceEdit | null {\n        const parameterType = TypeInferer.inferType(parameter)\n        if (!(parameterType instanceof StructTy)) return null\n\n        const initStruct = parameterType.anchor\n        if (!initStruct) return null\n\n        const placeToInsert = initStruct.lastFieldPos()\n        if (!placeToInsert) return null\n\n        diff.appendAsNextLine(placeToInsert.line, `    ${field.name()}: ${type.qualifiedName()};`)\n\n        // add `self.value = init.value`\n        this.addFieldInit(diff, initFunction, field, `init.${field.name()}`)\n        return diff.toWorkspaceEdit()\n    }\n\n    private appendInitFunction(\n        diff: FileDiff,\n        resolved: Field,\n        type: Ty,\n        owner: StorageMembersOwner,\n    ): WorkspaceEdit {\n        const lines = [\n            owner.node.startPosition.row + 1, // next line after name\n            ...owner.ownFields().map(f => f.node.endPosition.row),\n            ...owner.ownConstants().map(f => f.node.endPosition.row),\n        ]\n\n        // imagine we have:\n        // contract Foo {\n        //     field: Int;\n        // }\n        //\n        // line to add here will be line of `field: Int;` as we add new content after line\n        //\n        // for:\n        // contract Foo {\n        //     field: Int;\n        //\n        //     const FOO: Int = 10;\n        // }\n        //\n        // line to add here will be line of `const FOO: Int = 10;`\n        const lineToAdd = Math.max(...lines)\n\n        if (!this.fieldCanBeParameter(resolved)) {\n            // need to create `*Init` structure\n            const initStrucName = `${owner.name()}Init`\n\n            const initStructTemplate = `struct ${initStrucName} {\n    ${resolved.name()}: ${type.qualifiedName()};\n}\n`\n\n            const initFunctionTemplate = `\n    init(init: ${initStrucName}) {\n        self.$name = init.$name;\n    }`\n\n            const actualText = initFunctionTemplate\n                .replace(/\\$name/g, resolved.name())\n                .replace(/\\$type/g, type.qualifiedName())\n\n            diff.appendAsNextLine(lineToAdd, actualText)\n            diff.appendAsPrevLine(owner.node.startPosition.row, initStructTemplate)\n            return diff.toWorkspaceEdit()\n        }\n\n        const initFunctionTemplate = `\n    init($name: $type) {\n        self.$name = $name;\n    }`\n        const actualText = initFunctionTemplate\n            .replace(/\\$name/g, resolved.name())\n            .replace(/\\$type/g, type.qualifiedName())\n\n        diff.appendAsNextLine(lineToAdd, actualText)\n        return diff.toWorkspaceEdit()\n    }\n\n    private fieldCanBeParameter(field: Field): boolean {\n        const name = field.nameNode()\n        if (!name) return true\n        const ty = TypeInferer.inferType(name)\n        if (!ty) return true\n        if (ty instanceof PrimitiveTy && ty.tlb !== null) {\n            // cannot define parameter with `Int as uint8` type\n            return false\n        }\n        // any other can be defined as parameter\n        return true\n    }\n}\n\nfunction nodeAtPosition(pos: Position, file: File): SyntaxNode | null {\n    const cursorPosition = asParserPoint(pos)\n    return file.rootNode.descendantForPosition(cursorPosition)\n}\n","import type {Intention, IntentionContext} from \"@server/intentions/Intention\"\nimport type {WorkspaceEdit} from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asParserPoint} from \"@server/utils/position\"\nimport type {Position} from \"vscode-languageclient\"\nimport {NamedNode} from \"@server/psi/Node\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport {Reference} from \"@server/psi/Reference\"\nimport {Contract, Primitive} from \"@server/psi/Decls\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {index} from \"@server/indexes\"\n\nexport class AddImport implements Intention {\n    public readonly id: string = \"tact.add-import\"\n    public readonly name: string = \"Import symbol from other file\"\n\n    private static resolveIdentifier(ctx: IntentionContext): NamedNode | null {\n        const node = nodeAtPosition(ctx.position, ctx.file)\n        if (node?.type !== \"identifier\" && node?.type !== \"type_identifier\") return null\n\n        const resolved = Reference.resolve(new NamedNode(node, ctx.file))\n        if (!resolved) return null\n        if (resolved instanceof Primitive || resolved instanceof Contract) return null\n\n        return resolved\n    }\n\n    public isAvailable(ctx: IntentionContext): boolean {\n        const resolved = AddImport.resolveIdentifier(ctx)\n        if (!resolved) return false\n        if (resolved.file.uri === ctx.file.uri) return false\n\n        const importPath = resolved.file.importPath(ctx.file)\n        return (\n            !ctx.file.alreadyImport(importPath) &&\n            !resolved.file.isImportedImplicitly() &&\n            !index.hasSeveralDeclarations(resolved.name())\n        )\n    }\n\n    public invoke(ctx: IntentionContext): WorkspaceEdit | null {\n        const resolved = AddImport.resolveIdentifier(ctx)\n        if (!resolved) return null\n\n        const diff = FileDiff.forFile(ctx.file.uri)\n\n        const positionToInsert = ctx.file.positionForNextImport()\n        const importPath = resolved.file.importPath(ctx.file)\n\n        const extraLine = positionToInsert.line === 0 && ctx.file.imports().length === 0 ? \"\\n\" : \"\"\n\n        diff.appendAsPrevLine(positionToInsert.line, `import \"${importPath}\";${extraLine}`)\n\n        return diff.toWorkspaceEdit()\n    }\n}\n\nfunction nodeAtPosition(pos: Position, file: File): SyntaxNode | null {\n    const cursorPosition = asParserPoint(pos)\n    return file.rootNode.descendantForPosition(cursorPosition)\n}\n","import type {Intention, IntentionContext} from \"@server/intentions/Intention\"\nimport type {WorkspaceEdit} from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspPosition, asParserPoint} from \"@server/utils/position\"\nimport type {Position} from \"vscode-languageclient\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport {parentOfType} from \"@server/psi/utils\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {NamedNode} from \"@server/psi/Node\"\nimport {TypeInferer} from \"@server/TypeInferer\"\nimport {\n    FieldsOwnerTy,\n    MapTy,\n    MessageTy,\n    NullTy,\n    OptionTy,\n    PrimitiveTy,\n    StructTy,\n} from \"@server/types/BaseTy\"\nimport type {Field} from \"@server/psi/Decls\"\n\nexport class FillStructInitBase implements Intention {\n    public readonly id: string = \"tact.fill-struct-init-base\"\n    public readonly name: string = \"Fill all fields...\"\n\n    public constructor(private readonly allFields: boolean) {}\n\n    private static findInstanceExpression(ctx: IntentionContext): SyntaxNode | null {\n        const referenceNode = nodeAtPosition(ctx.position, ctx.file)\n        if (!referenceNode) return null\n        const initExpr = parentOfType(referenceNode, \"instance_expression\")\n        if (!initExpr) return null\n        return initExpr\n    }\n\n    public isAvailable(ctx: IntentionContext): boolean {\n        const instance = FillStructInitBase.findInstanceExpression(ctx)\n        if (!instance) return false\n        const argumentsNode = instance.childForFieldName(\"arguments\")\n        if (!argumentsNode) return false\n        const args = argumentsNode.children\n            .filter(it => it?.type === \"instance_argument\")\n            .filter(it => it !== null)\n        return args.length === 0\n    }\n\n    private static findBraces(instance: SyntaxNode): {\n        openBrace: SyntaxNode\n        closeBrace: SyntaxNode\n    } | null {\n        const args = instance.childForFieldName(\"arguments\")\n        if (!args) return null\n\n        const openBrace = args.children[0]\n        const closeBrace = args.children.at(-1)\n        if (!openBrace || !closeBrace) return null\n        return {openBrace, closeBrace}\n    }\n\n    private static findIndent(ctx: IntentionContext, instance: SyntaxNode): number {\n        const lines = ctx.file.content.split(/\\r?\\n/)\n        const line = lines[instance.startPosition.row]\n        const lineTrim = line.trimStart()\n        return line.indexOf(lineTrim)\n    }\n\n    public invoke(ctx: IntentionContext): WorkspaceEdit | null {\n        const instance = FillStructInitBase.findInstanceExpression(ctx)\n        if (!instance) return null\n\n        //    let some = Foo{}\n        //               ^^^ this\n        const name = instance.childForFieldName(\"name\")\n        if (!name) return null\n\n        const type = TypeInferer.inferType(new NamedNode(name, ctx.file))\n        if (!type) return null\n        if (!(type instanceof FieldsOwnerTy)) return null\n\n        const braces = FillStructInitBase.findBraces(instance)\n        if (!braces) return null\n\n        //    let some = Foo{}\n        //                  ^^ these\n        const {openBrace, closeBrace} = braces\n\n        //    let some = Foo{}\n        //^^^^ this\n        const indent = FillStructInitBase.findIndent(ctx, instance)\n\n        //    let some = Foo{\n        //        field: 1,\n        //^^^^^^^^ this\n        const fieldIndent = \" \".repeat(indent + 4)\n\n        //    let some = Foo{\n        //        field: 1,\n        //    }\n        //^^^^ this\n        const closeBraceIndent = \" \".repeat(indent)\n\n        const fields = type.fields().filter(field => {\n            // if `allFields` is false, filter all fields with default value\n            return this.allFields || field.defaultValue() === null\n        })\n\n        if (fields.length === 0) return null // no fields to init\n\n        //       field: false,\n        //       other: null,\n        const fieldsPresentation = fields\n            .map(field => {\n                const name = field.name()\n                const value = FillStructInitBase.fieldDefaultValue(field)\n                return `${fieldIndent}${name}: ${value},`\n            })\n            .join(\"\\n\")\n\n        //    let some = Foo{}\n        //                  ^^\n        const singleLine = openBrace.startPosition.row === closeBrace.endPosition.row\n\n        //    let some = Foo{\n        //    }\n        //    ^ don't add extra new line here\n        const newLine = singleLine ? \"\\n\" : \"\"\n        const suffix = newLine === \"\" ? \"\" : `${newLine}${closeBraceIndent}`\n\n        const diff = FileDiff.forFile(ctx.file.uri)\n        diff.appendTo(asLspPosition(openBrace.endPosition), `\\n${fieldsPresentation}${suffix}`)\n\n        return diff.toWorkspaceEdit()\n    }\n\n    private static fieldDefaultValue(field: Field): string {\n        const defaultValue = field.defaultValue()\n        if (defaultValue) return defaultValue.node.text\n\n        const type = field.typeNode()?.type()\n        if (!type) return \"null\"\n\n        if (type instanceof MapTy) {\n            return \"emptyMap()\"\n        }\n\n        if (type instanceof OptionTy || type instanceof NullTy) {\n            return \"null\"\n        }\n\n        if (type instanceof PrimitiveTy) {\n            switch (type.name()) {\n                case \"Int\": {\n                    return \"0\"\n                }\n                case \"Bool\": {\n                    return \"false\"\n                }\n                case \"Address\": {\n                    return \"sender()\"\n                }\n                case \"Cell\": {\n                    return \"emptyCell()\"\n                }\n                case \"Builder\": {\n                    return \"beginCell()\"\n                }\n                case \"Slice\": {\n                    return \"emptySlice()\"\n                }\n                case \"String\": {\n                    return `\"\"`\n                }\n                case \"StringBuilder\": {\n                    return `beginString()`\n                }\n            }\n        }\n\n        if (type instanceof StructTy || type instanceof MessageTy) {\n            return `${type.name()}{}`\n        }\n\n        return \"null\"\n    }\n}\n\nexport class FillFieldsStructInit extends FillStructInitBase {\n    public override readonly id: string = \"tact.fill-struct-init\"\n    public override readonly name: string = \"Fill all fields...\"\n\n    public constructor() {\n        super(true)\n    }\n}\n\nexport class FillRequiredStructInit extends FillStructInitBase {\n    public override readonly id: string = \"tact.fill-required-struct-init\"\n    public override readonly name: string = \"Fill required fields...\"\n\n    public constructor() {\n        super(false)\n    }\n}\n\nfunction nodeAtPosition(pos: Position, file: File): SyntaxNode | null {\n    const cursorPosition = asParserPoint(pos)\n    return file.rootNode.descendantForPosition(cursorPosition)\n}\n","import type {Intention, IntentionContext} from \"@server/intentions/Intention\"\nimport type {WorkspaceEdit} from \"vscode-languageserver\"\nimport type {File} from \"@server/psi/File\"\nimport {asLspRange, asParserPoint} from \"@server/utils/position\"\nimport type {Position} from \"vscode-languageclient\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {parentOfType} from \"@server/psi/utils\"\nimport {toPascalCase} from \"@server/utils/strings\"\nimport {index, IndexKey} from \"@server/indexes\"\n\nexport class ReplaceTextReceiverWithBinary implements Intention {\n    public readonly id: string = \"tact.replace-text-receiver-with-binary\"\n    public readonly name: string = \"Replace text receiver with binary\"\n\n    private static resolveString(ctx: IntentionContext): SyntaxNode | null {\n        const node = nodeAtPosition(ctx.position, ctx.file)\n        if (node?.type !== \"string\") return null\n\n        const parent = node.parent\n        if (!parent) return null\n        if (parent.type !== \"receive_function\" && parent.type !== \"external_function\") {\n            return null\n        }\n        return node\n    }\n\n    public isAvailable(ctx: IntentionContext): boolean {\n        return ReplaceTextReceiverWithBinary.resolveString(ctx) !== null\n    }\n\n    public invoke(ctx: IntentionContext): WorkspaceEdit | null {\n        const resolved = ReplaceTextReceiverWithBinary.resolveString(ctx)\n        if (!resolved) return null\n\n        const owner = parentOfType(resolved, \"contract\", \"trait\")\n        if (!owner) return null\n\n        const diff = FileDiff.forFile(ctx.file.uri)\n\n        const positionToInsert = Math.max(owner.startPosition.row - 1, 0)\n\n        const messageName = this.generateMessageName(resolved)\n\n        const beforeSpace = positionToInsert === 0 ? \"\" : \"\\n\"\n        const afterSpace = positionToInsert === 0 ? \"\\n\" : \"\"\n\n        diff.appendAsPrevLine(\n            positionToInsert,\n            `${beforeSpace}message ${messageName} {}${afterSpace}`,\n        )\n        diff.replace(asLspRange(resolved), `_: ${messageName}`)\n\n        return diff.toWorkspaceEdit()\n    }\n\n    private generateMessageName(stringNode: SyntaxNode): string {\n        const textReceiver = stringNode.text.slice(1, -1)\n        const messageName = toPascalCase(textReceiver)\n\n        const alreadyDefined = index.elementByName(IndexKey.Messages, messageName)\n        return alreadyDefined ? messageName + \"2\" : messageName\n    }\n}\n\nfunction nodeAtPosition(pos: Position, file: File): SyntaxNode | null {\n    const cursorPosition = asParserPoint(pos)\n    return file.rootNode.descendantForPosition(cursorPosition)\n}\n","import type {Intention, IntentionContext} from \"@server/intentions/Intention\"\nimport type {WorkspaceEdit} from \"vscode-languageserver\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\n\nexport class WrapSelected implements Intention {\n    public readonly id: string\n    public readonly name: string\n    public readonly snippet: string\n\n    private readonly statementsWithSemicolon: string[] = [\n        \"let_statement\",\n        \"return_statement\",\n        \"expression_statement\",\n        \"assignment_statement\",\n        \"augmented_assignment_statement\",\n        \"do_until_statement\",\n    ]\n\n    private readonly statementTypes: string[] = [\n        ...this.statementsWithSemicolon,\n\n        \"block_statement\",\n        \"if_statement\",\n        \"while_statement\",\n        \"repeat_statement\",\n        \"try_statement\",\n        \"foreach_statement\",\n    ]\n\n    public constructor(to: string, snippet: string) {\n        this.id = `tact.wrap-selected-${to}`\n        this.name = `Wrap selected to \"${to}\"`\n        this.snippet = snippet\n    }\n\n    public findStatements(ctx: IntentionContext): SyntaxNode[] {\n        if (ctx.noSelection) return []\n\n        const statements: SyntaxNode[] = []\n        const startLine = ctx.range.start.line\n        const endLine = ctx.range.end.line\n\n        // Find all top-level statements in selection\n        RecursiveVisitor.visit(ctx.file.rootNode, (node): boolean => {\n            if (!this.statementTypes.includes(node.type)) return true\n\n            const nodeStartLine = node.startPosition.row\n            const nodeEndLine = node.endPosition.row\n\n            // Check if node is within selection\n            if (nodeStartLine >= startLine && nodeEndLine <= endLine) {\n                // Check if node's parent is not a statement or is outside selection\n                const parent = node.parent\n                if (\n                    !parent ||\n                    !this.statementTypes.includes(parent.type) ||\n                    parent.startPosition.row < startLine ||\n                    parent.endPosition.row > endLine\n                ) {\n                    statements.push(node)\n                    // Skip visiting children since we don't want nested statements\n                    return false\n                }\n            }\n            return true\n        })\n\n        return statements.filter(statement => !this.statementTypes.includes(statement.text))\n    }\n\n    public isAvailable(ctx: IntentionContext): boolean {\n        return this.findStatements(ctx).length > 0\n    }\n\n    private static findIndent(ctx: IntentionContext, node: SyntaxNode): number {\n        const lines = ctx.file.content.split(/\\r?\\n/)\n        const line = lines[node.startPosition.row]\n        const lineTrim = line.trimStart()\n        return line.indexOf(lineTrim)\n    }\n\n    private indentStatement(stmt: SyntaxNode, baseIndent: string): string {\n        const needSemicolon = this.statementsWithSemicolon.includes(stmt.type)\n        const lines = stmt.text.split(\"\\n\")\n        if (lines.length === 1) {\n            if (needSemicolon) {\n                return baseIndent + stmt.text + \";\"\n            }\n\n            return baseIndent + stmt.text\n        }\n\n        return lines\n            .map((line, i) => {\n                if (i === 0) return baseIndent + line\n                if (i === lines.length - 1 && needSemicolon) return \"    \" + line + \";\"\n                return \"    \" + line\n            })\n            .join(\"\\n\")\n    }\n\n    public invoke(ctx: IntentionContext): WorkspaceEdit | null {\n        const statements = this.findStatements(ctx)\n        if (statements.length === 0) return null\n\n        const diff = FileDiff.forFile(ctx.file.uri)\n        const firstStmt = statements[0]\n        const lastStmt = statements.at(-1)\n        if (!lastStmt) return null\n\n        const indentCount = WrapSelected.findIndent(ctx, firstStmt)\n        const indent = \" \".repeat(indentCount)\n\n        const statementsText = statements\n            .map((stmt, i) => {\n                if (i === 0) return this.indentStatement(stmt, \"\")\n                return this.indentStatement(stmt, indent + \"    \")\n            })\n            .join(\"\\n\")\n\n        const result = this.snippet\n            .trimStart()\n            .replace(/\\$stmts/, statementsText)\n            .replace(/\\$indent/g, indent)\n\n        diff.replace(\n            {\n                start: {\n                    line: firstStmt.startPosition.row,\n                    character: firstStmt.startPosition.column,\n                },\n                end: {\n                    line: lastStmt.endPosition.row,\n                    character: lastStmt.endPosition.column + 1,\n                },\n            },\n            result,\n        )\n\n        return diff.toWorkspaceEdit()\n    }\n}\n\nexport class WrapSelectedToTry extends WrapSelected {\n    public constructor() {\n        super(\n            \"try\",\n            `\ntry {\n    $indent$stmts\n$indent}`,\n        )\n    }\n}\n\nexport class WrapSelectedToTryCatch extends WrapSelected {\n    public constructor() {\n        super(\n            \"try-catch\",\n            `\ntry {\n    $indent$stmts\n$indent} catch(e) {\n\n$indent}`,\n        )\n    }\n}\n\nexport class WrapSelectedToRepeat extends WrapSelected {\n    public constructor() {\n        super(\n            \"repeat\",\n            `\nrepeat(10) {\n    $indent$stmts\n$indent}`,\n        )\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport {File} from \"@server/psi/File\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {isNamedFunNode, parentOfType} from \"@server/psi/utils\"\nimport {Fun, StorageMembersOwner, Struct, Trait} from \"@server/psi/Decls\"\nimport {NamedNode} from \"@server/psi/Node\"\nimport {Referent} from \"@server/psi/Referent\"\nimport {asLspRange, asNullableLspRange} from \"@server/utils/position\"\nimport * as search from \"@server/search/implementations\"\n\nexport function collect(\n    file: File,\n    settings: {\n        enabled: boolean\n        showUsages: boolean\n        showOverrides: boolean\n        showTraitImplementations: boolean\n        showFunctionImplementations: boolean\n        showParentTraitFields: boolean\n        showParentTraitFunctions: boolean\n    },\n): lsp.CodeLens[] {\n    if (file.fromStdlib || !settings.enabled) {\n        // we don't need to count usages or show anything for stdlib symbols\n        return []\n    }\n\n    const result: lsp.CodeLens[] = []\n\n    RecursiveVisitor.visit(file.rootNode, (n): boolean => {\n        if (n.type === \"storage_variable\" && settings.showParentTraitFields) {\n            const ownerNode = parentOfType(n, \"trait\", \"contract\")\n            if (!ownerNode) return true\n\n            const field = new NamedNode(n, file)\n            const owner = new StorageMembersOwner(ownerNode, file)\n\n            const inheritFields = owner.inheritTraits().flatMap(trait => trait.fields())\n            if (inheritFields.length === 0) return true\n\n            const found = inheritFields.find(inheritField => inheritField.name() === field.name())\n            if (found) {\n                const nodeIdentifier = found.nameIdentifier()\n                if (!nodeIdentifier) return true\n\n                result.push(\n                    newLens(n, {\n                        title: \"Go to parent\",\n                        command: \"tact.showParent\",\n                        arguments: [\n                            found.file.uri,\n                            {\n                                line: nodeIdentifier.startPosition.row,\n                                character: nodeIdentifier.startPosition.column,\n                            } as lsp.Position,\n                        ],\n                    }),\n                )\n            }\n        }\n\n        if (n.type === \"storage_function\" && settings.showFunctionImplementations) {\n            const fun = new Fun(n, file)\n            if (fun.isAbstract()) {\n                const impls = search.implementationsFun(fun)\n\n                result.push(\n                    newLens(n, {\n                        title: `${impls.length} implementation` + (impls.length > 1 ? \"s\" : \"\"),\n                        command: \"tact.showReferences\",\n                        arguments: [\n                            file.uri,\n                            {\n                                line: n.startPosition.row,\n                                character: n.startPosition.column,\n                            } as lsp.Position,\n                            impls.map(r => {\n                                const nameNode = r.nameNode()\n                                return {\n                                    uri: r.file.uri,\n                                    range: asNullableLspRange(nameNode?.node),\n                                } as lsp.Location\n                            }),\n                        ],\n                    }),\n                )\n            }\n        }\n\n        if (n.type === \"storage_function\" && settings.showOverrides) {\n            const fun = new Fun(n, file)\n            if (fun.isVirtual()) {\n                const impls = search.implementationsFun(fun)\n\n                if (impls.length > 0) {\n                    result.push(\n                        newLens(n, {\n                            title: `${impls.length} override` + (impls.length > 1 ? \"s\" : \"\"),\n                            command: \"tact.showReferences\",\n                            arguments: [\n                                file.uri,\n                                {\n                                    line: n.startPosition.row,\n                                    character: n.startPosition.column,\n                                } as lsp.Position,\n                                impls.map(r => {\n                                    const nameNode = r.nameNode()\n                                    return {\n                                        uri: r.file.uri,\n                                        range: asNullableLspRange(nameNode?.node),\n                                    } as lsp.Location\n                                }),\n                            ],\n                        }),\n                    )\n                }\n            }\n        }\n\n        if (n.type === \"storage_function\" && settings.showParentTraitFunctions) {\n            const fun = new Fun(n, file)\n            if (!fun.isOverride()) return true\n\n            const ownerNode = parentOfType(n, \"trait\", \"contract\")\n            if (!ownerNode) return true\n            const owner = new StorageMembersOwner(ownerNode, file)\n\n            const inheritMethods = owner.inheritTraits().flatMap(trait => trait.methods())\n            if (inheritMethods.length === 0) return true\n\n            const found = inheritMethods.find(inheritMethod => inheritMethod.name() === fun.name())\n            if (found) {\n                const nodeIdentifier = found.nameIdentifier()\n                if (!nodeIdentifier) return true\n\n                result.push(\n                    newLens(n, {\n                        title: \"Go to parent\",\n                        command: \"tact.showParent\",\n                        arguments: [\n                            found.file.uri,\n                            {\n                                line: nodeIdentifier.startPosition.row,\n                                character: nodeIdentifier.startPosition.column,\n                            } as lsp.Position,\n                        ],\n                    }),\n                )\n            }\n        }\n\n        if (n.type === \"trait\" && n.text !== \"trait\" && settings.showTraitImplementations) {\n            const trait = new Trait(n, file)\n            const impls = search.implementations(trait)\n\n            result.push(\n                newLens(n, {\n                    title: `${impls.length} implementation` + (impls.length > 1 ? \"s\" : \"\"),\n                    command: \"tact.showReferences\",\n                    arguments: [\n                        file.uri,\n                        {\n                            line: n.startPosition.row,\n                            character: n.startPosition.column,\n                        } as lsp.Position,\n                        impls.map(r => {\n                            const nameNode = r.nameNode()\n                            return {\n                                uri: r.file.uri,\n                                range: asNullableLspRange(nameNode?.node),\n                            } as lsp.Location\n                        }),\n                    ],\n                }),\n            )\n        }\n\n        if (\n            settings.showUsages &&\n            (n.type === \"trait\" ||\n                n.type === \"struct\" ||\n                n.type === \"message\" ||\n                n.type === \"global_constant\" ||\n                n.type === \"storage_constant\" ||\n                isNamedFunNode(n))\n        ) {\n            usagesLens(n, file, result)\n        }\n\n        return true\n    })\n\n    return result\n}\n\nfunction usagesLens(n: SyntaxNode, file: File, result: lsp.CodeLens[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (file.fromStdlib || !file.fromStdlib) {\n        // disabled for now\n        return\n    }\n\n    const struct = new Struct(n, file)\n    const nodeIdentifier = struct.nameIdentifier()\n    if (!nodeIdentifier) return\n    const references = new Referent(nodeIdentifier, file).findReferences(false, false, false)\n\n    result.push(\n        newLens(n, {\n            title: `${references.length} usages`,\n            command: \"tact.showReferences\",\n            arguments: [\n                file.uri,\n                {\n                    line: nodeIdentifier.startPosition.row,\n                    character: nodeIdentifier.startPosition.column,\n                } as lsp.Position,\n                references.map(r => {\n                    return {\n                        uri: r.file.uri,\n                        range: asLspRange(r.node),\n                    } as lsp.Location\n                }),\n            ],\n        }),\n    )\n}\n\nfunction newLens(node: SyntaxNode, cmd: lsp.Command): lsp.CodeLens {\n    const start = {\n        line: node.startPosition.row,\n        character: node.startPosition.column,\n    } as lsp.Position\n    return {\n        range: {\n            start: start,\n            end: start,\n        },\n        command: cmd,\n    }\n}\n","import {Parser, Language} from \"web-tree-sitter\"\n\nexport let tactLanguage: Language | null = null\nexport let fiftLanguage: Language | null = null\n\nexport const initParser = async (\n    treeSitterUri: string,\n    tactLangUri: string,\n    fiftLangUri: string,\n): Promise<void> => {\n    if (tactLanguage && fiftLanguage) {\n        return\n    }\n    const options: object | undefined = {\n        locateFile() {\n            return treeSitterUri\n        },\n    }\n    await Parser.init(options)\n    tactLanguage = await Language.load(tactLangUri)\n    fiftLanguage = await Language.load(fiftLangUri)\n}\n\nexport function createTactParser(): Parser {\n    const parser = new Parser()\n    parser.setLanguage(tactLanguage)\n    return parser\n}\n\nexport function createFiftParser(): Parser {\n    const parser = new Parser()\n    parser.setLanguage(fiftLanguage)\n    return parser\n}\n","import {AsmInstr, Expression, NamedNode, Node} from \"./Node\"\nimport {Reference} from \"./Reference\"\nimport {index, IndexKey} from \"@server/indexes\"\nimport {parentOfType} from \"./utils\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {crc16} from \"@server/utils/crc16\"\nimport {Position} from \"vscode-languageclient\"\nimport {asLspPosition} from \"@server/utils/position\"\nimport {computeGasConsumption, GasConsumption} from \"@server/asm/gas\"\n\nexport class FieldsOwner extends NamedNode {\n    public kind(): string {\n        if (this.node.type === \"message\") {\n            return \"message\"\n        }\n        return \"struct\"\n    }\n\n    public fields(): Field[] {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return []\n        return body.children\n            .filter(value => value?.type === \"field\")\n            .filter(value => value !== null)\n            .map(value => new Field(value, this.file))\n    }\n}\n\nexport class Message extends FieldsOwner {\n    public body(): SyntaxNode | null {\n        return this.node.childForFieldName(\"body\")\n    }\n\n    public value(): string {\n        const value = this.node.childForFieldName(\"value\")\n        if (!value) return \"\"\n        return value.text\n    }\n}\n\nexport class Struct extends FieldsOwner {\n    public body(): SyntaxNode | null {\n        return this.node.childForFieldName(\"body\")\n    }\n\n    public lastFieldPos(): Position | null {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return null\n\n        const fields = this.fields()\n\n        if (fields.length === 0) {\n            const openBrace = body.firstChild\n            if (!openBrace) return null\n            return asLspPosition(openBrace.endPosition)\n        }\n\n        const field = fields.at(-1)\n        if (!field) return null\n\n        return asLspPosition(field.node.endPosition)\n    }\n}\n\nexport class Primitive extends NamedNode {}\n\nexport class StorageMembersOwner extends NamedNode {\n    public kind(): string {\n        if (this.node.type === \"trait\") {\n            return \"trait\"\n        }\n        return \"contract\"\n    }\n\n    public initFunction(): InitFunction | null {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return null\n        const candidates = body.children\n            .filter(value => value?.type === \"init_function\")\n            .filter(value => value !== null)\n            .map(value => new InitFunction(value, this.file))\n        if (candidates.length === 0) return null\n        return candidates[0]\n    }\n\n    public messageFunctions(): MessageFunction[] {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return []\n        return body.children\n            .filter(\n                value =>\n                    value?.type === \"receive_function\" ||\n                    value?.type === \"external_function\" ||\n                    value?.type === \"bounced_function\",\n            )\n            .filter(value => value !== null)\n            .map(value => new MessageFunction(value, this.file))\n    }\n\n    public ownMethods(): Fun[] {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return []\n        return body.children\n            .filter(value => value?.type === \"storage_function\")\n            .filter(value => value !== null)\n            .map(value => new Fun(value, this.file))\n    }\n\n    public parameters(): Field[] {\n        const params = this.node.childForFieldName(\"parameters\")\n        if (!params) return []\n        return params.children\n            .filter(value => value?.type === \"parameter\")\n            .filter(value => value !== null)\n            .map(value => new Field(value, this.file))\n    }\n\n    public ownFields(): Field[] {\n        const parameters = this.parameters()\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return parameters\n        const fields = body.children\n            .filter(value => value?.type === \"storage_variable\")\n            .filter(value => value !== null)\n            .map(value => new Field(value, this.file))\n        return [...parameters, ...fields]\n    }\n\n    public ownConstants(): Constant[] {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return []\n        return body.children\n            .filter(value => value?.type === \"storage_constant\")\n            .filter(value => value !== null)\n            .map(value => new Constant(value, this.file))\n    }\n\n    public methods(): Fun[] {\n        const own = this.ownMethods()\n        const inherited = this.inheritTraits().flatMap(trait => trait.methods())\n        return [...own, ...inherited]\n    }\n\n    public fields(): Field[] {\n        const own = this.ownFields()\n        const inherited = this.inheritTraits().flatMap(trait => trait.fields())\n        return [...own, ...inherited]\n    }\n\n    public constants(): Constant[] {\n        const own = this.ownConstants()\n        const inherited = this.inheritTraits().flatMap(trait => trait.constants())\n        return [...own, ...inherited]\n    }\n\n    public inheritTraits(): Trait[] {\n        if (this.name() === \"BaseTrait\") {\n            return []\n        }\n\n        const baseTraitNode = index.elementByName(IndexKey.Traits, \"BaseTrait\")\n\n        const traitList = this.node.childForFieldName(\"traits\")\n        const baseTraitOrEmpty =\n            baseTraitNode === null ? [] : [new Trait(baseTraitNode.node, baseTraitNode.file)]\n\n        if (!traitList) {\n            return [...baseTraitOrEmpty]\n        }\n\n        const inheritTraits = traitList.children\n            .filter(value => value?.type === \"type_identifier\")\n            .filter(value => value !== null)\n            .map(value => new NamedNode(value, this.file))\n            .map(node => Reference.resolve(node))\n            .filter(node => node !== null)\n            .map(node => (node instanceof Trait ? node : new Trait(node.node, node.file)))\n\n        return [...inheritTraits, ...baseTraitOrEmpty]\n    }\n\n    public inheritTraitsList(): NamedNode[] {\n        if (this.name() === \"BaseTrait\") {\n            return []\n        }\n\n        const traitList = this.node.childForFieldName(\"traits\")\n        if (!traitList) {\n            return []\n        }\n\n        const inheritTraits = traitList.children\n            .filter(value => value?.type === \"type_identifier\")\n            .filter(value => value !== null)\n            .map(value => new NamedNode(value, this.file))\n\n        return [...inheritTraits]\n    }\n\n    public positionForReceiver(): Position | null {\n        const initFunction = this.initFunction()\n        if (initFunction) {\n            return asLspPosition(initFunction.node.endPosition)\n        }\n\n        const fields = this.fields()\n        if (fields.length === 0) {\n            const openBrace = this.node.childForFieldName(\"body\")?.firstChild\n            if (!openBrace) return null\n            return asLspPosition(openBrace.endPosition)\n        }\n\n        const lastField = fields.at(-1)\n        if (!lastField) return null\n\n        return asLspPosition(lastField.node.endPosition)\n    }\n}\n\nexport class Trait extends StorageMembersOwner {}\n\nexport class Contract extends StorageMembersOwner {}\n\nexport class InitFunction extends Node {\n    public nameLike(): string {\n        const parametersNode = this.node.childForFieldName(\"parameters\")\n        if (!parametersNode) return \"init()\"\n        return `init${parametersNode.text}`\n    }\n\n    public parametersPresentation(): string {\n        const parametersNode = this.node.childForFieldName(\"parameters\")\n        if (!parametersNode) return \"()\"\n        return parametersNode.text\n    }\n\n    public endParen(): SyntaxNode | null {\n        const parametersNode = this.node.childForFieldName(\"parameters\")\n        if (!parametersNode) return null\n        return parametersNode.lastChild\n    }\n\n    public lastStatementPos(): Position | null {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return null\n\n        const children = body.children.filter(value => value !== null)\n        if (children.length === 0) return null\n        if (children.length <= 2) return asLspPosition(children[0].endPosition)\n\n        const statements = children.slice(1, -1)\n        const lastStatement = statements.at(-1)\n        if (!lastStatement) return null\n\n        return asLspPosition(lastStatement.endPosition)\n    }\n\n    public get hasOneLineBody(): boolean {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return false\n\n        const firstChild = body.firstChild\n        const lastChild = body.lastChild\n        if (!firstChild || !lastChild) return false\n\n        return firstChild.startPosition.row === lastChild.startPosition.row\n    }\n\n    public parameters(): NamedNode[] {\n        const parametersNode = this.node.childForFieldName(\"parameters\")\n        if (!parametersNode) return []\n\n        return parametersNode.children\n            .filter(value => value?.type === \"parameter\")\n            .filter(value => value !== null)\n            .map(value => new NamedNode(value, this.file))\n    }\n\n    public initIdentifier(): SyntaxNode | null {\n        return this.node.firstChild\n    }\n}\n\nexport class MessageFunction extends Node {\n    public nameLike(): string {\n        const parametersNode = this.node.childForFieldName(\"parameter\")\n        const kindIdent = this.kindIdentifier()\n        if (!kindIdent) return \"unknown()\"\n        if (!parametersNode) return `${kindIdent.text}()`\n        return `${kindIdent.text}(${parametersNode.text})`\n    }\n\n    public parameter(): SyntaxNode | null {\n        return this.node.childForFieldName(\"parameter\")\n    }\n\n    public kindIdentifier(): SyntaxNode | null {\n        return this.node.firstChild\n    }\n}\n\nexport class Fun extends NamedNode {\n    public hasBody(): boolean {\n        if (this.isAbstract()) return false\n        if (this.node.type === \"asm_function\" || this.node.type === \"native_function\") return false\n        return this.node.childForFieldName(\"body\") !== null\n    }\n\n    public get bodyPresentation(): string {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return \"\"\n        return body.text\n    }\n\n    public get hasOneLineBody(): boolean {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return false\n\n        const firstChild = body.firstChild\n        const lastChild = body.lastChild\n        if (!firstChild || !lastChild) return false\n\n        return firstChild.startPosition.row === lastChild.startPosition.row\n    }\n\n    public get isGetMethod(): boolean {\n        return this.modifiers().includes(\"get\")\n    }\n\n    public get hasExplicitMethodId(): boolean {\n        // check for\n        // get(0x1000) fun foo() {}\n        //    ^^^^^^^^ this\n        const attributes = this.node.childForFieldName(\"attributes\")\n        if (!attributes) return false\n        const getAttrs = attributes.children.find(attr => attr?.type === \"get_attribute\")\n        if (!getAttrs) return false\n        return getAttrs.children.some(it => it?.text === \"(\")\n    }\n\n    public get getExplicitMethodId(): SyntaxNode | null {\n        // find\n        // get(0x1000) fun foo() {}\n        //     ^^^^^^ this\n        const attributes = this.node.childForFieldName(\"attributes\")\n        if (!attributes) return null\n        const getAttrs = attributes.children.find(attr => attr?.type === \"get_attribute\")\n        if (!getAttrs) return null\n        return getAttrs.childForFieldName(\"value\")\n    }\n\n    public returnType(): Expression | null {\n        const result = this.node.childForFieldName(\"result\")\n        if (!result) return null\n        if (result.text === \":\") {\n            // some weird bug\n            const actualTypeNode = result.nextSibling\n            if (!actualTypeNode) return null\n\n            return new Expression(actualTypeNode, this.file)\n        }\n        return new Expression(result, this.file)\n    }\n\n    public parameters(): NamedNode[] {\n        const parametersNode = this.node.childForFieldName(\"parameters\")\n        if (!parametersNode) return []\n\n        return parametersNode.children\n            .filter(value => value?.type === \"parameter\")\n            .filter(value => value !== null)\n            .map(value => new NamedNode(value, this.file))\n    }\n\n    public withSelf(): boolean {\n        const params = this.parameters()\n        if (params.length === 0) return false\n        const first = params[0]\n        return first.name() === \"self\"\n    }\n\n    public selfParam(): NamedNode | null {\n        const params = this.parameters()\n        if (params.length === 0) return null\n        const first = params[0]\n        if (first.name() !== \"self\") return null\n        return first\n    }\n\n    public signaturePresentation(): string {\n        const parametersNode = this.node.childForFieldName(\"parameters\")\n        if (!parametersNode) return \"\"\n\n        const result = this.returnType()\n        const suffix = result?.node.nextSibling?.text === \"?\" ? \"?\" : \"\"\n\n        return parametersNode.text + (result ? `: ${result.node.text}${suffix}` : \"\")\n    }\n\n    public isOverride(): boolean {\n        return this.modifiers().includes(\"override\")\n    }\n\n    public isAbstract(): boolean {\n        return this.modifiers().includes(\"abstract\")\n    }\n\n    public isVirtual(): boolean {\n        return this.modifiers().includes(\"virtual\")\n    }\n\n    public owner(): StorageMembersOwner | null {\n        const ownerNode = parentOfType(this.node, \"trait\", \"contract\")\n        if (!ownerNode) return null\n\n        return new StorageMembersOwner(ownerNode, this.file)\n    }\n\n    public modifiers(): string {\n        const parts: string[] = []\n        const asm = this.node.children[0]\n        if (asm && asm.text === \"asm\") {\n            const asmArrangement = this.node.childForFieldName(\"arrangement\")\n            if (asmArrangement) {\n                parts.push(\"asm\" + asmArrangement.text)\n            } else {\n                parts.push(\"asm\")\n            }\n        }\n        const attributes = this.node.childForFieldName(\"attributes\")\n        if (attributes) {\n            parts.push(attributes.text)\n        }\n        if (parts.length === 0) return \"\"\n        return parts.join(\" \") + \" \"\n    }\n\n    public openBrace(): SyntaxNode | null {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return null\n        return body.firstChild\n    }\n\n    public closeBrace(): SyntaxNode | null {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) return null\n        return body.lastChild\n    }\n\n    public nameAttribute(): SyntaxNode | null {\n        const attr = this.node.childForFieldName(\"name_attribute\")\n        if (!attr) return null\n        return attr\n    }\n\n    public computeMethodId(): string {\n        const explicitId = this.getExplicitMethodId\n        if (explicitId) {\n            return explicitId.text\n        }\n\n        return \"0x\" + ((crc16(Buffer.from(this.name())) & 0xff_ff) | 0x1_00_00).toString(16)\n    }\n\n    public computeGasConsumption(gas: {loopGasCoefficient: number}): GasConsumption {\n        const body = this.node.childForFieldName(\"body\")\n        if (!body) {\n            return {\n                value: 0,\n                unknown: true,\n                exact: false,\n            }\n        }\n\n        const instructions = body.children\n            .filter(it => it?.type === \"asm_expression\")\n            .filter(it => it !== null)\n            .map(it => new AsmInstr(it, this.file))\n\n        return computeGasConsumption(instructions, gas)\n    }\n}\n\nexport class Field extends NamedNode {\n    public typeNode(): Expression | null {\n        const value = this.node.childForFieldName(\"type\")\n        if (!value) return null\n        return new Expression(value, this.file)\n    }\n\n    public tlbType(): string | null {\n        const tlb = this.node.childForFieldName(\"tlb\")\n        if (!tlb) return null\n        const type = tlb.childForFieldName(\"type\")\n        if (!type) return \"\" // return \"\" here to show that type has incomplete `as`\n        return type.text\n    }\n\n    public defaultValuePresentation(): string {\n        const defaultValueNode = this.node.childForFieldName(\"value\")\n        if (!defaultValueNode) return \"\"\n        return ` = ${defaultValueNode.text}`\n    }\n\n    public owner(): StorageMembersOwner | null {\n        const ownerNode = parentOfType(this.node, \"trait\", \"contract\")\n        if (!ownerNode) return null\n\n        return new StorageMembersOwner(ownerNode, this.file)\n    }\n\n    public dataOwner(): FieldsOwner | null {\n        const ownerNode = parentOfType(this.node, \"struct\", \"message\", \"trait\", \"contract\")\n        if (!ownerNode) return null\n\n        return new FieldsOwner(ownerNode, this.file)\n    }\n}\n\nexport class Constant extends NamedNode {\n    public value(): Expression | null {\n        const value = this.node.childForFieldName(\"value\")\n        if (!value) return null\n        return new Expression(value, this.file)\n    }\n\n    public typeNode(): Expression | null {\n        const value = this.node.childForFieldName(\"type\")\n        if (!value) return null\n        return new Expression(value, this.file)\n    }\n\n    public owner(): StorageMembersOwner | null {\n        const ownerNode = parentOfType(this.node, \"trait\", \"contract\")\n        if (!ownerNode) return null\n\n        return new StorageMembersOwner(ownerNode, this.file)\n    }\n\n    public modifiers(): string {\n        const attributes = this.node.childForFieldName(\"attributes\")\n        if (!attributes) return \"\"\n        return attributes.text + \" \"\n    }\n}\n","import * as path from \"node:path\"\nimport {NamedNode} from \"./Node\"\nimport {Constant, Contract, Fun, Message, Primitive, Struct, Trait} from \"./Decls\"\nimport type {Node as SyntaxNode, Tree} from \"web-tree-sitter\"\nimport type {Position} from \"vscode-languageclient\"\nimport {trimSuffix} from \"@server/utils/strings\"\nimport {ImportResolver} from \"@server/psi/ImportResolver\"\n\nexport class File {\n    public constructor(\n        public readonly uri: string,\n        public readonly tree: Tree,\n        public readonly content: string,\n    ) {}\n\n    public get fromStdlib(): boolean {\n        return this.uri.includes(\"stdlib\")\n    }\n\n    public get fromStubs(): boolean {\n        return this.uri.endsWith(\"stubs.tact\")\n    }\n\n    public get rootNode(): SyntaxNode {\n        return this.tree.rootNode\n    }\n\n    public symbolAt(offset: number): string {\n        return this.content[offset] ?? \"\"\n    }\n\n    public get path(): string {\n        return this.uri.slice(7)\n    }\n\n    public get name(): string {\n        return path.basename(this.path, \".tact\")\n    }\n\n    public isImportedImplicitly(): boolean {\n        if (this.fromStubs) return true\n        if (!this.fromStdlib) return false\n        return this.path.includes(\"std/\") || this.path.includes(\"std\\\\\")\n    }\n\n    public positionForNextImport(): Position {\n        const imports = this.imports()\n\n        if (imports.length === 0) {\n            return {\n                line: 0,\n                character: 0,\n            }\n        }\n\n        const lastImport = imports.at(-1)\n        if (!lastImport) {\n            return {\n                line: 0,\n                character: 0,\n            }\n        }\n\n        return {\n            line: lastImport.endPosition.row + 1,\n            character: lastImport.endPosition.column,\n        }\n    }\n\n    public alreadyImport(filepath: string): boolean {\n        const imports = this.imports()\n            .map(node => node.childForFieldName(\"library\"))\n            .filter(node => node !== null)\n\n        return imports.some(imp => {\n            const importPath = imp.text.slice(1, -1)\n            return importPath === filepath || importPath === `${filepath}.tact`\n        })\n    }\n\n    public imports(): SyntaxNode[] {\n        return this.tree.rootNode.children\n            .filter(node => node !== null && node.type === \"import\")\n            .filter(node => node !== null)\n    }\n\n    public importedFiles(): string[] {\n        const imports = this.imports()\n            .map(node => node.childForFieldName(\"library\"))\n            .filter(node => node !== null)\n        return imports\n            .map(it => ImportResolver.resolveImport(this, it.text.slice(1, -1), false))\n            .filter(it => it !== null)\n    }\n\n    public importPath(inFile: File): string {\n        const filePath = this.path\n\n        if (this.fromStdlib) {\n            const candidates = [\"stdlib/libs\", \"stdlib/std\"]\n            for (const candidate of candidates) {\n                if (filePath.includes(candidate)) {\n                    const relative = filePath.slice(\n                        filePath.indexOf(candidate) + candidate.length + 1,\n                    )\n                    const withoutTactExt = trimSuffix(relative, \".tact\")\n                    return `@stdlib/${withoutTactExt}`\n                }\n            }\n\n            return filePath\n        }\n\n        const relativeTo = path.dirname(inFile.path)\n        const relative = path.relative(relativeTo, filePath).replace(/\\\\/g, \"/\")\n        const withoutTactExt = trimSuffix(relative, \".tact\")\n\n        if (!withoutTactExt.startsWith(\"../\") && !withoutTactExt.startsWith(\"./\")) {\n            return `./${withoutTactExt}`\n        }\n\n        return withoutTactExt\n    }\n\n    public getDecls(): NamedNode[] {\n        return this.getNodesByType(\n            [\n                \"global_function\",\n                \"asm_function\",\n                \"native_function\",\n                \"contract\",\n                \"struct\",\n                \"trait\",\n                \"message\",\n                \"primitive\",\n                \"global_constant\",\n            ],\n            NamedNode,\n        )\n    }\n\n    public getFuns(): Fun[] {\n        return this.getNodesByType([\"global_function\", \"asm_function\", \"native_function\"], Fun)\n    }\n\n    public getContracts(): Contract[] {\n        return this.getNodesByType(\"contract\", Contract)\n    }\n\n    public getStructs(): Struct[] {\n        return this.getNodesByType(\"struct\", Struct)\n    }\n\n    public getTraits(): Trait[] {\n        return this.getNodesByType(\"trait\", Trait)\n    }\n\n    public getMessages(): Message[] {\n        return this.getNodesByType(\"message\", Message)\n    }\n\n    public getPrimitives(): Primitive[] {\n        return this.getNodesByType(\"primitive\", Primitive)\n    }\n\n    public getConstants(): Constant[] {\n        return this.getNodesByType(\"global_constant\", Constant)\n    }\n\n    private getNodesByType<T extends NamedNode>(\n        nodeType: string | string[],\n        constructor: new (node: SyntaxNode, file: File) => T,\n    ): T[] {\n        const tree = this.tree\n        const types = Array.isArray(nodeType) ? nodeType : [nodeType]\n\n        return tree.rootNode.children\n            .filter(node => node !== null && types.includes(node.type))\n            .filter(node => node !== null)\n            .map(node => new constructor(node, this))\n    }\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport * as path from \"node:path\"\nimport {PARSED_FILES_CACHE} from \"@server/indexing-root\"\nimport type {File} from \"./File\"\nimport {existsSync} from \"node:fs\"\nimport {trimPrefix, trimSuffix} from \"@server/utils/strings\"\nimport {projectStdlibPath} from \"@server/toolchain/toolchain\"\n\nexport class ImportResolver {\n    public static resolveImport(fromFile: File, importPath: string, check: boolean): string | null {\n        if (importPath.startsWith(\"@stdlib/\")) {\n            return this.resolveStdlibPath(importPath, check)\n        }\n\n        if (importPath.startsWith(\"./\") || importPath.startsWith(\"../\")) {\n            return this.resolveLocalPath(fromFile, importPath, check)\n        }\n\n        return null\n    }\n\n    private static resolveLocalPath(file: File, localPath: string, check: boolean): string | null {\n        if (localPath.endsWith(\".fc\") || localPath.endsWith(\".func\")) return null\n\n        const withoutExt = trimSuffix(localPath, \".tact\")\n        const dir = path.dirname(file.path)\n        const targetPath = path.join(dir, withoutExt) + \".tact\"\n        return this.checkFile(targetPath, check)\n    }\n\n    private static resolveStdlibPath(prefixedPath: string, check: boolean): string | null {\n        const stdlibPath = projectStdlibPath\n        if (!stdlibPath) return null\n\n        const importPath = trimPrefix(prefixedPath, \"@stdlib/\")\n        const targetPath = path.join(stdlibPath, \"libs\", importPath) + \".tact\"\n        return this.checkFile(targetPath, check)\n    }\n\n    private static checkFile(targetPath: string, check: boolean): string | null {\n        if (check && !existsSync(targetPath)) return null\n        return targetPath\n    }\n\n    private static toFile(targetPath: string): File | null {\n        const targetUri = \"file://\" + targetPath\n        return PARSED_FILES_CACHE.get(targetUri) ?? null\n    }\n\n    public static resolveAsFile(\n        file: File,\n        pathNode: SyntaxNode,\n        check: boolean = true,\n    ): File | null {\n        const targetPath = this.resolveImport(file, pathNode.text.slice(1, -1), check)\n        if (!targetPath) return null\n        return this.toFile(targetPath)\n    }\n\n    public static resolveNode(\n        file: File,\n        pathNode: SyntaxNode,\n        check: boolean = true,\n    ): string | null {\n        return this.resolveImport(file, pathNode.text.slice(1, -1), check)\n    }\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {File} from \"./File\"\nimport {Ty} from \"@server/types/BaseTy\"\nimport {TypeInferer} from \"@server/TypeInferer\"\nimport {Range} from \"vscode-languageserver-textdocument\"\nimport {AsmInstruction, findInstruction} from \"@server/completion/data/types\"\n\nexport class Node {\n    public node: SyntaxNode\n    public file: File\n\n    public constructor(node: SyntaxNode, file: File) {\n        this.node = node\n        this.file = file\n    }\n}\n\nexport class Expression extends Node {\n    public type(): Ty | null {\n        return TypeInferer.inferType(this)\n    }\n}\n\nexport class NamedNode extends Node {\n    public static create(node: SyntaxNode, file: File): NamedNode {\n        return new NamedNode(node, file)\n    }\n\n    public nameIdentifier(): SyntaxNode | null {\n        if (\n            this.node.type === \"identifier\" ||\n            this.node.type === \"self\" ||\n            this.node.type === \"type_identifier\"\n        ) {\n            return this.node\n        }\n\n        if (this.node.type === \"primitive\") {\n            const nameNode = this.node.childForFieldName(\"type\")\n            if (!nameNode) {\n                return null\n            }\n            return nameNode\n        }\n\n        const nameNode = this.node.childForFieldName(\"name\")\n        if (!nameNode) {\n            return null\n        }\n        return nameNode\n    }\n\n    public nameNode(): NamedNode | null {\n        const node = this.nameIdentifier()\n        if (!node) return null\n        return new NamedNode(node, this.file)\n    }\n\n    public name(): string {\n        const ident = this.nameIdentifier()\n        if (ident === null) return \"\"\n        return ident.text\n    }\n\n    public defaultValue(): Expression | null {\n        const valueNode = this.node.childForFieldName(\"value\")\n        if (valueNode === null) return null\n        return new Expression(valueNode, this.file)\n    }\n\n    public defaultValueRange(): Range | null {\n        const valueNode = this.node.childForFieldName(\"value\")\n        if (valueNode === null) return null\n        const typeNode = this.node.childForFieldName(\"type\")\n        if (typeNode === null) return null\n\n        return {\n            start: {\n                line: typeNode.endPosition.row,\n                character: typeNode.endPosition.column,\n            },\n            end: {\n                line: valueNode.endPosition.row,\n                character: valueNode.endPosition.column,\n            },\n        }\n    }\n}\n\nexport class VarDeclaration extends NamedNode {\n    public typeHint(): Expression | null {\n        const node = this.node.childForFieldName(\"type\")\n        if (!node) return null\n        return new Expression(node, this.file)\n    }\n\n    public hasTypeHint(): boolean {\n        const node = this.node.childForFieldName(\"type\")\n        return node !== null\n    }\n\n    public value(): Expression | null {\n        const node = this.node.childForFieldName(\"value\")\n        if (!node) return null\n        return new Expression(node, this.file)\n    }\n\n    public type(): Ty | null {\n        const hint = this.typeHint()\n        if (hint !== null) {\n            return hint.type()\n        }\n\n        const value = this.value()\n        if (value !== null) {\n            return value.type()\n        }\n\n        return null\n    }\n}\n\nexport class CallLike extends NamedNode {\n    public rawArguments(): SyntaxNode[] {\n        const node = this.node.childForFieldName(\"arguments\")\n        if (!node) return []\n        return node.children.filter(it => it !== null)\n    }\n\n    public arguments(): SyntaxNode[] {\n        return this.rawArguments().filter(it => it.type === \"argument\")\n    }\n}\n\nexport class AsmInstr extends NamedNode {\n    public arguments(): SyntaxNode[] {\n        const argsList = this.node.childForFieldName(\"arguments\")\n        if (!argsList) return []\n        return argsList.children.filter(it => it !== null)\n    }\n\n    public info(): AsmInstruction | null {\n        return findInstruction(this.name(), this.arguments())\n    }\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\n\nexport class RecursiveVisitor {\n    public static visit(node: SyntaxNode | null, visitor: (node: SyntaxNode) => void): void {\n        if (!node) return\n        visitor(node)\n        node.children.forEach(child => {\n            this.visit(child, visitor)\n        })\n    }\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {\n    BouncedTy,\n    ContractTy,\n    MapTy,\n    MessageTy,\n    OptionTy,\n    PrimitiveTy,\n    StorageMembersOwnerTy,\n    StructTy,\n    TraitTy,\n    Ty,\n} from \"@server/types/BaseTy\"\nimport {index, IndexFinder, IndexKey} from \"@server/indexes\"\nimport {Expression, NamedNode, Node} from \"./Node\"\nimport type {File} from \"./File\"\nimport {Contract, Field, FieldsOwner, Fun, Message, Struct, Trait} from \"./Decls\"\nimport {isFunNode, parentOfType} from \"./utils\"\nimport {CACHE} from \"@server/cache\"\nimport {TypeInferer} from \"@server/TypeInferer\"\n\nexport class ResolveState {\n    private values: Map<string, string> = new Map()\n\n    public get(key: string): string | null {\n        return this.values.get(key) ?? null\n    }\n\n    public withValue(key: string, value: string): ResolveState {\n        const state = new ResolveState()\n        state.values = this.values.set(key, value)\n        return state\n    }\n}\n\nexport interface ScopeProcessor {\n    execute(node: Node, state: ResolveState): boolean\n}\n\n/**\n * Reference encapsulates the logic of resolving of identifier into its definition.\n *\n * The algorithm used for resolving goes through lists of all possible variants,\n * each of which goes through a specific [`ScopeProcessor`]. ScopeProcessor describes\n * what to do with an element.\n *\n * For example, when resolving names, when definition was found, the proc\n * returns false, which ends the resolving process and the result is returned to\n * the caller (see [`Reference.resolve`]).\n *\n * At the same time, when autocompleting, all possible variants are collected in\n * a list, which becomes the autocompletion list.\n *\n * The description above imposes certain restrictions, for example, when resolving\n * `bar` to `foo.bar`, we must process only methods and fields of type `bar`.\n * This ensures fast resolving, as well as a valid autocompletion list.\n */\nexport class Reference {\n    private readonly element: NamedNode\n\n    public static resolve(node: NamedNode | null): NamedNode | null {\n        if (node === null) return null\n        return new Reference(node).resolve()\n    }\n\n    public constructor(element: NamedNode) {\n        this.element = element\n    }\n\n    public resolve(): NamedNode | null {\n        return CACHE.resolveCache.cached(this.element.node.id, () => this.resolveImpl())\n    }\n\n    private resolveImpl(): NamedNode | null {\n        const result: NamedNode[] = []\n        const state = new ResolveState()\n        this.processResolveVariants(Reference.createResolveProcessor(result, this.element), state)\n        if (result.length === 0) return null\n        return result[0]\n    }\n\n    private static createResolveProcessor(result: Node[], element: Node): ScopeProcessor {\n        return new (class implements ScopeProcessor {\n            public execute(node: Node, state: ResolveState): boolean {\n                if (node.node.equals(element.node)) {\n                    result.push(node)\n                    return false\n                }\n\n                if (node.node.type === \"init\" && state.get(\"search-name\") === \"init\") {\n                    result.push(node)\n                    return false\n                }\n\n                if (!(node instanceof NamedNode) || !(element instanceof NamedNode)) {\n                    return true\n                }\n\n                const searchName = state.get(\"search-name\") ?? element.name()\n\n                if (node.name() === searchName) {\n                    result.push(node)\n                    return false\n                }\n\n                return true\n            }\n        })()\n    }\n\n    public processResolveVariants(proc: ScopeProcessor, state: ResolveState): boolean {\n        if (this.elementIsDeclarationName()) {\n            // foo: Int\n            // ^^^ our element\n            //\n            // so process whole `foo: Int` node\n            const parent = this.element.node.parent\n            if (!parent) return true\n            return proc.execute(Reference.declarationAstToNode(parent, this.element.file), state)\n        }\n        if (this.element.node.type === \"parameter\") {\n            return proc.execute(this.element, state)\n        }\n\n        const qualifier = Reference.getQualifier(this.element)\n        return qualifier\n            ? // foo.bar\n              // ^^^ qualifier\n              this.processQualifiedExpression(qualifier, proc, state)\n            : //  bar()\n              // ^ no qualifier\n              this.processUnqualifiedResolve(proc, state)\n    }\n\n    private elementIsDeclarationName(): boolean {\n        // foo: Int\n        // ^^^ maybe this\n        const identifier = this.element.node\n\n        // foo: Int\n        // ^^^^^^^^ this\n        const parent = identifier.parent\n\n        // init()\n        // ^^^^^^ this\n        if (parent?.type === \"init_function\") {\n            return true\n        }\n\n        // foo: Int\n        // ^^^ this\n        const name = parent?.childForFieldName(\"name\")\n        if (!parent || !name) return false\n\n        // prettier-ignore\n        return (\n            parent.type === \"field\" ||\n            parent.type === \"parameter\" ||\n            parent.type === \"storage_variable\" ||\n            parent.type === \"let_statement\" ||\n            parent.type === \"trait\" ||\n            parent.type === \"struct\" ||\n            parent.type === \"message\" ||\n            parent.type === \"contract\" ||\n            parent.type === \"global_function\" ||\n            parent.type === \"asm_function\" ||\n            parent.type === \"native_function\" ||\n            parent.type === \"storage_function\" ||\n            parent.type === \"storage_constant\"\n        ) && name.equals(identifier)\n    }\n\n    private processQualifiedExpression(\n        qualifier: Expression,\n        proc: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        const qualifierType = qualifier.type()\n        if (qualifierType === null) return true\n\n        if (qualifierType instanceof StructTy || qualifierType instanceof MessageTy) {\n            if (qualifier.node.type === \"identifier\") {\n                const resolved = Reference.resolve(new NamedNode(qualifier.node, qualifier.file))\n                if (resolved instanceof Struct || resolved instanceof Message) {\n                    // found `Foo.fromCell` case\n                    const prefix = resolved instanceof Struct ? \"AnyStruct_\" : \"AnyMessage_\"\n\n                    const fromCellName = prefix + \"fromCell\"\n                    const fromCell = index.elementByName(IndexKey.Funs, fromCellName)\n                    if (fromCell) {\n                        const newState = state.withValue(\n                            \"search-name\",\n                            prefix + this.element.name(),\n                        )\n                        if (!proc.execute(fromCell, newState)) return false\n                    }\n\n                    const fromSliceName = prefix + \"fromSlice\"\n                    const fromSlice = index.elementByName(IndexKey.Funs, fromSliceName)\n                    if (fromSlice) {\n                        const newState = state.withValue(\n                            \"search-name\",\n                            prefix + this.element.name(),\n                        )\n                        if (!proc.execute(fromSlice, newState)) return false\n                    }\n\n                    return true\n                }\n            }\n\n            const nodeStruct = index.elementByName(IndexKey.Primitives, \"AnyStruct\")\n            if (nodeStruct) {\n                const structPrimitiveTy = new PrimitiveTy(\"AnyStruct\", nodeStruct, null)\n                if (!this.processType(qualifier, structPrimitiveTy, proc, state)) return false\n            }\n            const nodeMessage = index.elementByName(IndexKey.Primitives, \"AnyMessage\")\n            if (nodeMessage) {\n                const messagePrimitiveTy = new PrimitiveTy(\"AnyMessage\", nodeMessage, null)\n                if (!this.processType(qualifier, messagePrimitiveTy, proc, state)) return false\n            }\n        }\n\n        if (qualifierType instanceof BouncedTy) {\n            return this.processType(qualifier, qualifierType.innerTy, proc, state)\n        }\n\n        if (!this.processType(qualifier, qualifierType, proc, state)) return false\n\n        // process unwrapped T? later to correctly resolve in case of same name method for T and T?\n        if (qualifierType instanceof OptionTy) {\n            // show completion and resolve without explicit unwrapping\n            return this.processType(qualifier, qualifierType.innerTy, proc, state)\n        }\n\n        // last resort, trying to find methods of T?\n        return this.processType(qualifier, new OptionTy(qualifierType), proc, state)\n    }\n\n    private processType(\n        qualifier: Expression,\n        qualifierType: Ty | StructTy | MessageTy | TraitTy | ContractTy,\n        proc: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        const methodRef = qualifier.node.parent?.type === \"method_call_expression\"\n\n        if (!this.processTypeMethods(qualifierType, proc, state)) return false\n\n        if (qualifierType instanceof StructTy) {\n            if (!Reference.processNamedEls(proc, state, qualifierType.fields())) return false\n        }\n\n        if (qualifierType instanceof MessageTy) {\n            if (!Reference.processNamedEls(proc, state, qualifierType.fields())) return false\n        }\n\n        // Traits or contracts\n        if (qualifierType instanceof StorageMembersOwnerTy) {\n            // for `foo.bar()` first check for methods since there is no callable types\n            // for `foo.bar` first check for fields since there is no function pointers\n            if (methodRef) {\n                if (!Reference.processNamedEls(proc, state, qualifierType.methods())) return false\n                if (!Reference.processNamedEls(proc, state, qualifierType.fields())) return false\n                if (!Reference.processNamedEls(proc, state, qualifierType.constants())) return false\n            } else {\n                if (!Reference.processNamedEls(proc, state, qualifierType.fields())) return false\n                if (!Reference.processNamedEls(proc, state, qualifierType.constants())) return false\n                if (!Reference.processNamedEls(proc, state, qualifierType.methods())) return false\n            }\n        }\n\n        return true\n    }\n\n    private processTypeMethods(ty: Ty, proc: ScopeProcessor, state: ResolveState): boolean {\n        return index.processElementsByKey(\n            IndexKey.Funs,\n            new (class implements ScopeProcessor {\n                public execute(fun: Node, state: ResolveState): boolean {\n                    if (!(fun instanceof Fun)) return true\n                    if (!fun.withSelf()) return true\n                    const selfParam = fun.parameters()[0]\n                    const typeNode = selfParam.node.childForFieldName(\"type\")\n                    if (typeNode === null) return true\n                    const typeExpr = new Expression(typeNode, fun.file)\n                    const selfType = typeExpr.type()\n                    if (selfType instanceof MapTy && ty instanceof MapTy) {\n                        return proc.execute(fun, state)\n                    }\n\n                    if (selfType?.qualifiedName() === ty.qualifiedName()) {\n                        return proc.execute(fun, state)\n                    }\n                    return true\n                }\n            })(),\n            state,\n        )\n    }\n\n    private processUnqualifiedResolve(proc: ScopeProcessor, state: ResolveState): boolean {\n        const name = this.element.node.text\n        if (!name || name === \"\" || name === \"_\") return true\n\n        if (name === \"self\") {\n            const ownerNode = parentOfType(this.element.node, \"contract\", \"trait\")\n            if (ownerNode !== null) {\n                const constructor = ownerNode.type === \"contract\" ? Contract : Trait\n                const owner = new constructor(ownerNode, this.element.file)\n\n                if (!proc.execute(owner, state.withValue(\"search-name\", owner.name()))) {\n                    return false\n                }\n            }\n        }\n\n        if (state.get(\"completion\")) {\n            const ownerNode = parentOfType(\n                this.element.node,\n                \"contract_body\",\n                \"trait_body\",\n                \"global_function\",\n            )\n\n            // inside a trait/contract, when we write `foo`, we want to automatically complete it\n            // with `self.foo` if there are any methods/fields/constants with the same name\n            if (ownerNode?.type === \"contract_body\" || ownerNode?.type === \"trait_body\") {\n                if (!this.processContractTraitSelfCompletion(ownerNode, state, proc)) return false\n            }\n\n            // inside extends function, when we write `foo`, we want to automatically complete it\n            // with `self.foo` if there are any methods/fields/constants with the same name\n            if (ownerNode?.type === \"global_function\") {\n                if (!this.processExtendsMethodSelfCompletion(ownerNode, state, proc)) return false\n            }\n        }\n\n        if (this.element.node.type === \"tvm_instruction\") {\n            // don't try to resolve TVM assembly\n            return true\n        }\n\n        const parent = this.element.node.parent\n        if (parent?.type === \"instance_argument\") {\n            // `Foo { name: \"\" }`\n            //        ^^^^^^^^ this\n            if (!this.resolveInstanceInitField(parent, proc, state)) return false\n        }\n        if (parent?.type === \"destruct_bind\") {\n            // `let Foo { name } = foo()`\n            //            ^^^^ this\n            if (!this.resolveDestructField(parent, proc, state)) return false\n        }\n\n        if (this.element.node.type === \"initOf\" && this.element.node.text === \"initOf\") {\n            const resolved = Reference.resolveInitOf(this.element.node, this.element.file)\n            if (resolved) {\n                if (!proc.execute(resolved, state.withValue(\"search-name\", \"init\"))) return false\n            }\n        }\n\n        if (parent?.type === \"asm_arrangement_args\") {\n            // `asm(cell self) extends fun storeRef(self: Builder, cell: Cell): Builder`\n            //           ^^^^ this\n            return this.resolveAsmArrangementArgs(parent, proc, state)\n        }\n\n        if (parent?.type === \"static_call_expression\") {\n            // let context = context();\n            // context();\n            // ^^^^^^^ resolve only as global symbol\n            return this.processAllEntities(proc, state)\n        }\n\n        if (!this.processBlock(proc, state)) return false\n\n        return this.processAllEntities(proc, state)\n    }\n\n    private processContractTraitSelfCompletion(\n        ownerNode: SyntaxNode,\n        state: ResolveState,\n        proc: ScopeProcessor,\n    ): boolean {\n        const constructor = ownerNode.type === \"contract_body\" ? Contract : Trait\n        const parent = ownerNode.parent\n        if (!parent) return true\n\n        const owner = new constructor(parent, this.element.file)\n        const typeConstructor = ownerNode.type === \"contract_body\" ? ContractTy : TraitTy\n        const ownerTy = new typeConstructor(owner.name(), owner)\n        const expr = new Expression(this.element.node, this.element.file)\n\n        const newState = state.withValue(\"prefix\", \"self.\")\n        return this.processType(expr, ownerTy, proc, newState)\n    }\n\n    private processExtendsMethodSelfCompletion(\n        ownerNode: SyntaxNode,\n        state: ResolveState,\n        proc: ScopeProcessor,\n    ): boolean {\n        const func = new Fun(ownerNode, this.element.file)\n        const selfParam = func.selfParam()\n        if (selfParam === null) return true // skip if we are not in extends function\n\n        const selfTy = TypeInferer.inferType(selfParam)\n        if (!selfTy) return true\n        const expr = new Expression(this.element.node, this.element.file)\n\n        const newState = state.withValue(\"prefix\", \"self.\")\n        return this.processType(expr, selfTy, proc, newState)\n    }\n\n    private resolveInstanceInitField(\n        parent: SyntaxNode,\n        proc: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        // resolving `Foo { name: \"\" }`\n        //                  ^^^^ this\n\n        const name = parent.childForFieldName(\"name\")\n        if (!name) return true\n\n        if (!name.equals(this.element.node)) {\n            // `Foo { name: \"\" }`\n            //        ^^^^ this should be our identifier to resolve\n            return true\n        }\n\n        const value = parent.childForFieldName(\"value\")\n        if (!value && name.nextSibling?.text !== \":\") {\n            // `Foo { name }`\n            //            ^ no value and `:`\n            return true\n        }\n\n        // `Foo { name: \"\" }`\n        //  ^^^^^^^^^^^^^^^^ this\n        const instanceExpr = parent.parent?.parent\n        if (!instanceExpr) return true\n\n        // `Foo { name: \"\" }`\n        //  ^^^ this\n        const typeExpr = instanceExpr.childForFieldName(\"name\")\n        if (!typeExpr) return true\n\n        const resolvedType = Reference.resolve(new NamedNode(typeExpr, this.element.file))\n        if (!resolvedType) return true\n        if (!(resolvedType instanceof FieldsOwner)) return true\n\n        for (const field of resolvedType.fields()) {\n            if (!proc.execute(field, state)) return false\n        }\n        return true\n    }\n\n    private resolveDestructField(\n        parent: SyntaxNode,\n        proc: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        // resolving `let Foo { name } = foo()`\n        //                      ^^^^ this\n\n        const name = parent.childForFieldName(\"name\")\n        if (!name) return true\n\n        // `let Foo { name } = foo()`\n        //  ^^^^^^^^^^^^^^^^^^^^^^^^ this\n        const destructStatement = parent.parent?.parent\n        if (!destructStatement) return true\n\n        // `let Foo { name } = foo()`\n        //      ^^^ this\n        const typeExpr = destructStatement.childForFieldName(\"name\")\n        if (!typeExpr) return true\n\n        // `let Foo { name: bindName } = foo()`\n        //                  ^^^^^^^^ this\n        const bindName = parent.childForFieldName(\"bind\")\n\n        // `let Foo { name: bindName } = foo()`\n        //            ^^^^^ resolve this as field\n        if ((bindName && name.equals(this.element.node)) || state.get(\"completion\")) {\n            const resolvedType = Reference.resolve(new NamedNode(typeExpr, this.element.file))\n            if (!resolvedType) return true\n            if (!(resolvedType instanceof FieldsOwner)) return true\n\n            for (const field of resolvedType.fields()) {\n                if (!proc.execute(field, state)) return false\n            }\n            return true\n        }\n\n        return true\n    }\n\n    public static findDestructField(bindNode: SyntaxNode, file: File, name: string): Field | null {\n        // `let Foo { name } = foo()`\n        //  ^^^^^^^^^^^^^^^^^^^^^^^^ this\n        const destructStatement = bindNode.parent?.parent\n        if (!destructStatement) return null\n\n        // `let Foo { name } = foo()`\n        //      ^^^ this\n        const typeExpr = destructStatement.childForFieldName(\"name\")\n        if (!typeExpr) return null\n\n        const resolvedType = Reference.resolve(new NamedNode(typeExpr, file))\n        if (!resolvedType) return null\n        if (!(resolvedType instanceof FieldsOwner)) return null\n\n        for (const field of resolvedType.fields()) {\n            if (field.name() === name) {\n                return field\n            }\n        }\n\n        return null\n    }\n\n    private resolveAsmArrangementArgs(\n        parent: SyntaxNode,\n        proc: ScopeProcessor,\n        state: ResolveState,\n    ): boolean {\n        // resolving `asm(cell self) extends fun storeRef(self: Builder, cell: Cell): Builder`\n        //                     ^^^^ this\n\n        const asmFun = parentOfType(parent, \"asm_function\")\n        if (!asmFun) return true\n\n        const rawParameters = asmFun.childForFieldName(\"parameters\")\n        if (rawParameters === null) return true\n        const children = rawParameters.children\n        if (children.length < 2) return true\n        const params = children.slice(1, -1)\n\n        for (const param of params) {\n            if (!param) continue\n            if (!proc.execute(new NamedNode(param, this.element.file), state)) break\n        }\n\n        return true\n    }\n\n    private processAllEntities(proc: ScopeProcessor, state: ResolveState): boolean {\n        const file = this.element.file\n\n        if (state.get(\"completion\")) {\n            const processor = new (class implements ScopeProcessor {\n                public execute(node: Node, state: ResolveState): boolean {\n                    if (!(node instanceof Fun)) return true\n                    if (node.withSelf()) return true // don't add methods to unqualified completion\n                    if (\n                        node.name().startsWith(\"AnyStruct_\") ||\n                        node.name().startsWith(\"AnyMessage_\")\n                    ) {\n                        // this functions in fact static methods\n                        return true\n                    }\n                    return proc.execute(node, state)\n                }\n            })()\n\n            if (!index.processElsByKeyAndFile(IndexKey.Funs, file, processor, state)) return false\n            if (!index.processElsByKeyAndFile(IndexKey.Primitives, file, proc, state)) return false\n            if (!index.processElsByKeyAndFile(IndexKey.Structs, file, proc, state)) return false\n            if (!index.processElsByKeyAndFile(IndexKey.Messages, file, proc, state)) return false\n            if (!index.processElsByKeyAndFile(IndexKey.Traits, file, proc, state)) return false\n            if (!index.processElsByKeyAndFile(IndexKey.Constants, file, proc, state)) return false\n            return index.processElsByKeyAndFile(IndexKey.Contracts, file, proc, state)\n        }\n\n        // fast path, check the current file\n        const fileIndex = index.findFile(file.uri)\n        if (fileIndex && !this.processElsInIndex(proc, state, fileIndex)) return false\n\n        // if not found, check all imported files\n        for (const importedFile of file.importedFiles()) {\n            const fileIndex = index.findFile(`file://${importedFile}`)\n            if (!fileIndex) continue\n            if (!this.processElsInIndex(proc, state, fileIndex)) return false\n        }\n\n        // If not found in workspace, search in stdlib and stubs\n        if (index.stdlibRoot) {\n            if (!this.processElsInIndex(proc, state, index.stdlibRoot)) return false\n        }\n\n        if (index.stubsRoot) {\n            if (!this.processElsInIndex(proc, state, index.stubsRoot)) return false\n        }\n\n        return true\n    }\n\n    private processElsInIndex(\n        proc: ScopeProcessor,\n        state: ResolveState,\n        fileIndex: IndexFinder,\n    ): boolean {\n        if (!fileIndex.processElementsByKey(IndexKey.Funs, proc, state)) return false\n        if (!fileIndex.processElementsByKey(IndexKey.Primitives, proc, state)) return false\n        if (!fileIndex.processElementsByKey(IndexKey.Structs, proc, state)) return false\n        if (!fileIndex.processElementsByKey(IndexKey.Messages, proc, state)) return false\n        if (!fileIndex.processElementsByKey(IndexKey.Traits, proc, state)) return false\n        if (!fileIndex.processElementsByKey(IndexKey.Constants, proc, state)) return false\n        return fileIndex.processElementsByKey(IndexKey.Contracts, proc, state)\n    }\n\n    public processBlock(proc: ScopeProcessor, state: ResolveState): boolean {\n        const file = this.element.file\n        let descendant: SyntaxNode | null = this.element.node\n\n        let startStatement: SyntaxNode | null = null\n\n        while (descendant) {\n            // walk all variables inside block\n            if (descendant.type === \"block_statement\" || descendant.type === \"function_body\") {\n                const statements = descendant.children\n                for (const stmt of statements) {\n                    if (!stmt) break\n\n                    // reached the starting statement, look no further\n                    if (startStatement && stmt.equals(startStatement)) break\n                    if (stmt.type === \"let_statement\") {\n                        // let name = expr;\n                        //     ^^^^ this\n                        const name = stmt.childForFieldName(\"name\")\n                        if (name === null) break\n                        if (!proc.execute(new NamedNode(name, file), state)) return false\n                    }\n\n                    if (stmt.type === \"destruct_statement\") {\n                        // let Foo { name, other: value } = foo()\n                        //         ^^^^^^^^^^^^^^^^^^^^^^ this\n                        const bindList = stmt.childForFieldName(\"binds\")\n                        if (!bindList) break\n\n                        // let Foo { name, other: value } = foo()\n                        //           ^^^^^ ^^^^^^^^^^^^ this\n                        const bindings = bindList.children\n                            .filter(it => it?.type === \"destruct_bind\")\n                            .filter(it => it !== null)\n\n                        for (const bind of bindings) {\n                            // let Foo { name, other: value } = foo()\n                            //                        ^^^^^\n                            // or\n                            // let Foo { name, other: value } = foo()\n                            //           ^^^^\n                            const actualName =\n                                bind.childForFieldName(\"bind\") ?? bind.childForFieldName(\"name\")\n\n                            if (\n                                actualName &&\n                                !proc.execute(new NamedNode(actualName, file), state)\n                            ) {\n                                return false\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (descendant.type === \"foreach_statement\") {\n                // foreach (key, value in expr)\n                //          ^^^ this\n                const key = descendant.childForFieldName(\"key\")\n                if (key === null) {\n                    descendant = descendant.parent\n                    continue\n                }\n                if (!proc.execute(new NamedNode(key, file), state)) return false\n\n                // foreach (key, value in expr)\n                //               ^^^^^ this\n                const value = descendant.childForFieldName(\"value\")\n                if (value === null) {\n                    descendant = descendant.parent\n                    continue\n                }\n                if (!proc.execute(new NamedNode(value, file), state)) return false\n            }\n\n            if (descendant.type === \"catch_clause\") {\n                const name = descendant.childForFieldName(\"name\")\n                if (name === null) {\n                    descendant = descendant.parent\n                    continue\n                }\n                if (!proc.execute(new NamedNode(name, file), state)) return false\n            }\n\n            // process parameters of function\n            if (isFunNode(descendant)) {\n                const rawParameters = descendant.childForFieldName(\"parameters\")\n                if (rawParameters === null) {\n                    const parameter = descendant.childForFieldName(\"parameter\")\n                    if (parameter === null) break\n\n                    if (!proc.execute(new NamedNode(parameter, file), state)) return false\n                } else {\n                    const children = rawParameters.children\n                    if (children.length < 2) break\n                    const params = children.slice(1, -1)\n\n                    for (const param of params) {\n                        if (!param) continue\n                        if (!proc.execute(new NamedNode(param, file), state)) return false\n                    }\n                }\n            }\n\n            if (descendant.type === \"let_statement\" || descendant.type === \"expression_statement\") {\n                startStatement = descendant\n            }\n\n            descendant = descendant.parent\n        }\n\n        return true\n    }\n\n    public static processNamedEls(\n        proc: ScopeProcessor,\n        state: ResolveState,\n        elements: NamedNode[],\n    ): boolean {\n        for (const element of elements) {\n            if (!proc.execute(element, state)) return false\n        }\n        return true\n    }\n\n    private static getQualifier(node: Node): Expression | null {\n        const parent = node.node.parent\n        if (!parent) {\n            return null\n        }\n\n        if (parent.type === \"field_access_expression\") {\n            const name = parent.childForFieldName(\"name\")\n            if (name === null) return null\n            if (!name.equals(node.node)) return null\n            const qualifier = parent.child(0)\n            if (!qualifier) return null\n            return new Expression(qualifier, node.file)\n        }\n\n        if (parent.type === \"method_call_expression\") {\n            const name = parent.childForFieldName(\"name\")\n            if (name === null) return null\n            if (!name.equals(node.node)) return null\n            const qualifier = parent.child(0)\n            if (!qualifier) return null\n            return new Expression(qualifier, node.file)\n        }\n\n        return null\n    }\n\n    private static declarationAstToNode(node: SyntaxNode, file: File): NamedNode {\n        if (node.type === \"struct\") {\n            return new Struct(node, file)\n        }\n        if (node.type === \"message\") {\n            return new Message(node, file)\n        }\n        if (node.type === \"trait\") {\n            return new Trait(node, file)\n        }\n        if (node.type === \"contract\") {\n            return new Contract(node, file)\n        }\n        if (node.type === \"storage_function\") {\n            return new Fun(node, file)\n        }\n        if (node.type === \"let_statement\") {\n            const name = node.childForFieldName(\"name\")\n            if (!name) return new NamedNode(node, file)\n            return new NamedNode(name, file)\n        }\n\n        return new NamedNode(node, file)\n    }\n\n    public static resolveInitOf(node: SyntaxNode, file: File): Node | null {\n        const actualNode = node.parent\n        if (!actualNode) return null\n        const name = actualNode.childForFieldName(\"name\")\n        if (!name) return null\n        const type = TypeInferer.inferType(new Node(name, file))\n        if (!type) return null\n        if (!(type instanceof ContractTy)) return null\n        const initFunc = type.initFunction()\n        if (!initFunc) {\n            // if no init function in contract, go to contract name\n            if (!type.anchor) return null\n            const nameNode = type.anchor.nameNode()\n            if (!nameNode) return null\n            return new Node(nameNode.node, file)\n        }\n\n        const initIdent = initFunc.initIdentifier()\n        if (!initIdent) return null\n        return new Node(initIdent, file)\n    }\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport {NamedNode, Node} from \"./Node\"\nimport {Reference} from \"./Reference\"\nimport type {File} from \"./File\"\nimport {isFunNode, isNamedFunNode, parentOfType} from \"./utils\"\nimport {PARSED_FILES_CACHE} from \"@server/indexing-root\"\nimport {Contract} from \"@server/psi/Decls\"\n\n/**\n * Describes a scope that contains all possible uses of a certain symbol.\n */\nexport interface SearchScope {\n    toString(): string\n}\n\n/**\n * Describes the scope described by some AST node, the search for usages will be\n * performed only within this node.\n *\n * For example, the scope for a local variable will be the block in which it is defined.\n */\nexport class LocalSearchScope implements SearchScope {\n    public constructor(public node: SyntaxNode) {}\n\n    public toString(): string {\n        return `LocalSearchScope:\\n${this.node.text}`\n    }\n}\n\n/**\n * Describes a scope consisting of one or more files.\n *\n * For example, the scope of a global function from the standard library is all project files.\n */\nexport class GlobalSearchScope implements SearchScope {\n    public static allFiles(): GlobalSearchScope {\n        const files = [...PARSED_FILES_CACHE.values()]\n        return new GlobalSearchScope(files)\n    }\n\n    public constructor(public files: File[]) {}\n\n    public toString(): string {\n        return `GlobalSearchScope:\\n${this.files.map(f => `- ${f.uri}`).join(\"\\n\")}`\n    }\n}\n\n/**\n * Referent encapsulates the logic for finding all references to a definition.\n *\n * The search logic is simple, each symbol has a certain scope in which it can be used.\n * If it is a local variable, then the block in which it is defined, if a parameter, then\n * the function in which it is defined. If it is a global function, then all project files.\n *\n * When the scope is defined, it is enough to go through all the nodes from it and find those\n * that refer to the searched element.\n * For optimization, we do not try to resolve each identifier, we resolve only those that have\n * the same name as the searched element (and a bit of logic for processing `self`).\n *\n * Searching for uses of global symbols can be improved, now we use all files from the index,\n * but following the Tact imports logic we can reduce the search scope. For example, when searching\n * for uses of a global function defined within the project, there is no point in searching\n * for its uses within the standard library.\n * These optimizations and improvements are the object of further work.\n */\nexport class Referent {\n    private readonly resolved: NamedNode | null = null\n    private readonly file: File\n\n    public constructor(node: SyntaxNode, file: File) {\n        this.file = file\n        const element = new NamedNode(node, file)\n        this.resolved = Reference.resolve(element)\n    }\n\n    /**\n     * Returns a list of nodes that reference the definition.\n     *\n     * @param includeDefinition if true, the first element of the result contains the definition\n     * @param includeSelf if true, don't include `self` as usages (for rename)\n     * @param sameFileOnly if true, only references from the same files listed\n     */\n    public findReferences(\n        includeDefinition: boolean = false,\n        includeSelf: boolean = true,\n        sameFileOnly: boolean = false,\n    ): Node[] {\n        const resolved = this.resolved\n        if (!resolved) return []\n\n        const useScope = this.useScope()\n        if (!useScope) return []\n\n        const result: Node[] = []\n        if (includeDefinition && (!sameFileOnly || resolved.file.uri === this.file.uri)) {\n            const nameNode = resolved.nameNode()\n            if (nameNode) {\n                result.push(nameNode)\n            }\n        }\n\n        this.searchInScope(useScope, sameFileOnly, includeSelf, result)\n        return result\n    }\n\n    private searchInScope(\n        scope: SearchScope,\n        sameFileOnly: boolean,\n        includeSelf: boolean,\n        result: Node[],\n    ): void {\n        if (!this.resolved) return\n\n        if (scope instanceof LocalSearchScope) {\n            this.traverseTree(this.resolved.file, scope.node, includeSelf, result)\n        }\n\n        if (scope instanceof GlobalSearchScope) {\n            if (sameFileOnly) {\n                this.traverseTree(this.file, this.file.rootNode, includeSelf, result)\n                return\n            }\n\n            for (const file of scope.files) {\n                this.traverseTree(file, file.rootNode, includeSelf, result)\n            }\n        }\n    }\n\n    private traverseTree(file: File, node: SyntaxNode, includeSelf: boolean, result: Node[]): void {\n        const resolved = this.resolved\n        if (!resolved) return\n\n        // The algorithm for finding references is simple:\n        // we traverse the node that contains all the uses and resolve\n        // each identifier with the same name as searched symbol.\n        // If that identifier refers to the definition we are looking for,\n        // we add it to the list.\n        RecursiveVisitor.visit(node, (node): boolean => {\n            // fast path, skip non identifiers\n            if (\n                node.type !== \"identifier\" &&\n                node.type !== \"self\" &&\n                node.type !== \"initOf\" &&\n                node.type !== \"type_identifier\"\n            ) {\n                return true\n            }\n            // fast path, identifier name doesn't equal to definition name\n            // self can refer to enclosing trait or contract\n            const nodeName = node.text\n            if (nodeName !== resolved.name() && nodeName !== \"self\" && nodeName !== \"initOf\") {\n                return true\n            }\n            if (nodeName === \"self\" && !includeSelf) return true\n\n            const parent = node.parent\n            if (parent === null) return true\n\n            // skip definitions itself\n            if (parent.type === \"primitive\" && parent.childForFieldName(\"type\")?.equals(node)) {\n                return true\n            }\n            if (parent.type === \"destruct_bind\") {\n                const target = parent.childForFieldName(\"bind\") ?? parent.childForFieldName(\"name\")\n                if (target && target.equals(node)) {\n                    return true\n                }\n            }\n            // prettier-ignore\n            if ((\n                parent.type === \"let_statement\" ||\n                parent.type === \"global_function\" ||\n                parent.type === \"asm_function\" ||\n                parent.type === \"native_function\" ||\n                parent.type === \"storage_function\" ||\n                parent.type === \"storage_constant\" ||\n                parent.type === \"storage_variable\" ||\n                parent.type === \"global_constant\" ||\n                parent.type === \"trait\" ||\n                parent.type === \"struct\" ||\n                parent.type === \"message\" ||\n                parent.type === \"contract\" ||\n                parent.type === \"primitive\" ||\n                parent.type === \"field\" ||\n                parent.type === \"parameter\") && parent.childForFieldName(\"name\")?.equals(node)\n            ) {\n                return true\n            }\n\n            const res = Reference.resolve(new NamedNode(node, file))\n            if (!res) return true\n\n            // check if this `initOf Foo()` reference our `init` function\n            if (res.node.type === \"init\" && nodeName === \"initOf\") {\n                const owner = parentOfType(resolved.node, \"contract\")\n                if (!owner) return true\n                if (owner.type !== \"contract\") return true\n                const initOf = node.parent\n                const name = initOf?.childForFieldName(\"name\") ?? null\n                if (!name) return true\n\n                const ownerContract = new Contract(owner, file)\n\n                if (ownerContract.name() !== name.text) {\n                    // initOf for other contract\n                    return true\n                }\n\n                // found new reference\n                result.push(new Node(node, file))\n                return true\n            }\n\n            const identifier = res.nameIdentifier()\n            if (!identifier) return true\n\n            if (\n                res.node.type === resolved.node.type &&\n                res.node.startPosition.row === resolved.node.startPosition.row &&\n                (identifier.text === resolved.name() || identifier.text === \"self\")\n            ) {\n                // found new reference\n                result.push(new Node(node, file))\n            }\n            return true\n        })\n    }\n\n    /**\n     * Returns the effective node in which all possible usages are expected.\n     * Outside this node, no usages are assumed to exist. For example, variable\n     * can be used only in outer block statement where it defined.\n     */\n    public useScope(): SearchScope | null {\n        if (!this.resolved) return null\n\n        const node = this.resolved.node\n\n        const parent = this.resolved.node.parent\n        if (parent === null) return null\n\n        if (parent.type === \"let_statement\") {\n            // search only in outer block/function\n            return Referent.localSearchScope(\n                parentOfType(parent, \"function_body\", \"block_statement\"),\n            )\n        }\n\n        // let Foo { name, other: value } = foo()\n        //           ^^^^  ^^^^^^^^^^^^^\n        if (parent.type === \"destruct_bind\") {\n            // search only in outer block/function\n            return Referent.localSearchScope(\n                parentOfType(parent, \"function_body\", \"block_statement\"),\n            )\n        }\n\n        if (parent.type === \"foreach_statement\") {\n            // search only in foreach block\n            return Referent.localSearchScope(parent.lastChild)\n        }\n\n        if (parent.type === \"catch_clause\") {\n            // search only in catch block\n            return Referent.localSearchScope(parent.lastChild)\n        }\n\n        if (node.type === \"parameter\") {\n            const grand = node.parent?.parent\n            if (grand?.type === \"asm_function\") {\n                // search in function body and potentially asm arrangement\n                return Referent.localSearchScope(grand)\n            }\n\n            if (parent.type === \"receive_function\") {\n                // search in function body\n                return Referent.localSearchScope(parent)\n            }\n\n            if (grand && isFunNode(grand)) {\n                // search in function body\n                return Referent.localSearchScope(grand.lastChild)\n            }\n\n            // contract Foo(value: Int) {}\n            //              ^^^^^ this\n            if (grand?.type === \"contract\") {\n                return Referent.localSearchScope(grand.lastChild)\n            }\n        }\n\n        if (\n            node.type === \"storage_variable\" ||\n            node.type === \"storage_constant\" ||\n            node.type === \"storage_function\"\n        ) {\n            const owner = parentOfType(parent, \"contract\", \"trait\")\n            if (owner?.type === \"trait\") {\n                // can be used in other traits, optimize?\n                return GlobalSearchScope.allFiles()\n            }\n            // search in whole contract\n            return Referent.localSearchScope(owner)\n        }\n\n        if (\n            isNamedFunNode(parent) ||\n            isNamedFunNode(node) ||\n            node.type === \"global_constant\" ||\n            node.type === \"contract\" ||\n            node.type === \"trait\" ||\n            node.type === \"primitive\" ||\n            node.type === \"struct\" ||\n            node.type === \"message\"\n        ) {\n            return GlobalSearchScope.allFiles()\n        }\n\n        if (node.type === \"field\") {\n            return GlobalSearchScope.allFiles()\n        }\n\n        if (this.resolved.node.type === \"init_function\") {\n            return GlobalSearchScope.allFiles()\n        }\n\n        return null\n    }\n\n    private static localSearchScope(node: SyntaxNode | null): SearchScope | null {\n        if (!node) return null\n        return new LocalSearchScope(node)\n    }\n}\n","import type {Node as SyntaxNode} from \"web-tree-sitter\"\n\nexport function parentOfType(node: SyntaxNode, ...types: readonly string[]): SyntaxNode | null {\n    let parent = node.parent\n\n    for (let i = 0; i < 100; i++) {\n        if (parent === null) return null\n        if (types.includes(parent.type)) return parent\n        parent = parent.parent\n    }\n\n    return null\n}\n\nexport function isFunNode(node: SyntaxNode): boolean {\n    return (\n        isNamedFunNode(node) ||\n        node.type === \"receive_function\" ||\n        node.type === \"bounced_function\" ||\n        node.type === \"external_function\" ||\n        node.type === \"init_function\"\n    )\n}\n\nexport function isNamedFunNode(node: SyntaxNode): boolean {\n    return (\n        node.type === \"global_function\" ||\n        node.type === \"asm_function\" ||\n        node.type === \"native_function\" ||\n        node.type === \"storage_function\"\n    )\n}\n\nexport function isDocCommentOwner(node: SyntaxNode): boolean {\n    return (\n        node.type === \"primitive\" ||\n        node.type === \"global_constant\" ||\n        node.type === \"native_function\" ||\n        node.type === \"asm_function\" ||\n        node.type === \"global_function\" ||\n        node.type === \"struct\" ||\n        node.type === \"message\" ||\n        node.type === \"contract\" ||\n        node.type === \"trait\" ||\n        node.type === \"trait\" ||\n        node.type === \"init_function\" ||\n        node.type === \"receive_function\" ||\n        node.type === \"bounced_function\" ||\n        node.type === \"external_function\" ||\n        node.type === \"storage_variable\" ||\n        node.type === \"storage_constant\"\n    )\n}\n\nexport function funNodesTypes(): string[] {\n    return [\"global_function\", \"asm_function\", \"native_function\", \"storage_function\"]\n}\n\nexport function isTypeOwnerNode(node: SyntaxNode): boolean {\n    return (\n        node.type === \"field\" ||\n        node.type === \"storage_variable\" ||\n        node.type === \"parameter\" ||\n        node.type === \"global_constant\" ||\n        node.type === \"storage_constant\"\n    )\n}\n\nexport function measureTime<T>(label: string, fn: () => T): T {\n    const startTime = performance.now()\n    const result = fn()\n    const endTime = performance.now()\n    const time = endTime - startTime\n    if (time > 0.3) {\n        console.info(`${label}: ${time}ms`)\n    }\n    return result\n}\n","import type {Node as SyntaxNode, TreeCursor} from \"web-tree-sitter\"\n\nclass TreeWalker {\n    private alreadyVisitedChildren: boolean = false\n\n    public constructor(private readonly cursor: TreeCursor) {}\n\n    public next(): SyntaxNode | null {\n        if (this.alreadyVisitedChildren) {\n            if (this.cursor.gotoNextSibling()) {\n                this.alreadyVisitedChildren = false\n            } else {\n                if (!this.cursor.gotoParent()) {\n                    return null\n                }\n                this.alreadyVisitedChildren = true\n                return this.next()\n            }\n        } else {\n            if (this.cursor.gotoFirstChild()) {\n                this.alreadyVisitedChildren = false\n            } else if (this.cursor.gotoNextSibling()) {\n                this.alreadyVisitedChildren = false\n            } else {\n                if (!this.cursor.gotoParent()) {\n                    return null\n                }\n                this.alreadyVisitedChildren = true\n                return this.next()\n            }\n        }\n\n        return this.cursor.currentNode\n    }\n\n    public skipChildren(): void {\n        this.alreadyVisitedChildren = true\n    }\n}\n\nexport class RecursiveVisitor {\n    public static visit(node: SyntaxNode | null, cb: (n: SyntaxNode) => boolean): boolean {\n        if (!node) return true\n\n        const walker = new TreeWalker(node.walk())\n        let current: SyntaxNode | null = node\n\n        while (current) {\n            if (!cb(current)) {\n                walker.skipChildren()\n            }\n            current = walker.next()\n        }\n\n        return true\n    }\n}\n","import {Constant, Contract, Field, Fun, Trait} from \"@server/psi/Decls\"\nimport {index, IndexKey} from \"@server/indexes\"\nimport {ResolveState, ScopeProcessor} from \"@server/psi/Reference\"\nimport type {Node} from \"@server/psi/Node\"\n\nexport function implementations(trait: Trait): (Contract | Trait)[] {\n    const result: (Contract | Trait)[] = []\n\n    const s = new ResolveState()\n    index.processElementsByKey(IndexKey.Contracts, new ImplementationProcessor(trait, result), s)\n    index.processElementsByKey(IndexKey.Traits, new ImplementationProcessor(trait, result), s)\n\n    return result\n}\n\nclass ImplementationProcessor implements ScopeProcessor {\n    public constructor(\n        public trait: Trait,\n        public result: (Contract | Trait)[],\n    ) {}\n\n    public execute(node: Node, _state: ResolveState): boolean {\n        if (!(node instanceof Trait) && !(node instanceof Contract)) return true\n\n        const inheritsFromTrait = node\n            .inheritTraits()\n            .some(inheritTrait => inheritTrait.name() === this.trait.name())\n\n        if (inheritsFromTrait) {\n            this.result.push(node)\n        }\n\n        return true\n    }\n}\n\nexport function implementationsFun(fun: Fun): Fun[] {\n    const owner = fun.owner()\n    if (!owner) return []\n    if (owner.node.type !== \"trait\") return []\n\n    const traitImplementations = implementations(owner)\n    return traitImplementations.flatMap(trait =>\n        trait.ownMethods().filter(m => m.name() === fun.name()),\n    )\n}\n\nexport function superMethod(method: Fun): Fun | null {\n    const owner = method.owner()\n    if (!owner) return null\n\n    const inheritTraits = owner.inheritTraits()\n    if (inheritTraits.length === 0) return null\n\n    const superTraitWithFun = inheritTraits.find(t =>\n        t.methods().some(it => it.name() === method.name()),\n    )\n    if (!superTraitWithFun) return null\n\n    return superTraitWithFun.methods().find(it => it.name() === method.name()) ?? null\n}\n\nexport function superField(field: Field): Field | null {\n    const owner = field.owner()\n    if (!owner) return null\n\n    const inheritTraits = owner.inheritTraits()\n    if (inheritTraits.length === 0) return null\n\n    const superTraitWithField = inheritTraits.find(t =>\n        t.fields().some(it => it.name() === field.name()),\n    )\n    if (!superTraitWithField) return null\n\n    return superTraitWithField.fields().find(it => it.name() === field.name()) ?? null\n}\n\nexport function superConstant(constant: Constant): Constant | null {\n    const owner = constant.owner()\n    if (!owner) return null\n\n    const inheritTraits = owner.inheritTraits()\n    if (inheritTraits.length === 0) return null\n\n    const superTraitWithConstant = inheritTraits.find(t =>\n        t.constants().some(it => it.name() === constant.name()),\n    )\n    if (!superTraitWithConstant) return null\n\n    return superTraitWithConstant.constants().find(it => it.name() === constant.name()) ?? null\n}\n","import {RecursiveVisitor} from \"@server/psi/visitor\"\nimport type {File} from \"@server/psi/File\"\nimport {Reference} from \"@server/psi/Reference\"\nimport {NamedNode, Node} from \"@server/psi/Node\"\nimport * as lsp from \"vscode-languageserver\"\nimport type {SemanticTokens} from \"vscode-languageserver\"\nimport {isDocCommentOwner, isNamedFunNode} from \"@server/psi/utils\"\nimport {createTactParser} from \"@server/parser\"\nimport {extractCommentsDocContent} from \"@server/documentation/documentation\"\nimport {processDocComment} from \"@server/semantic_tokens/comments\"\nimport {Tokens} from \"@server/semantic_tokens/tokens\"\n\nexport function collect(\n    file: File,\n    highlighting: {\n        highlightCodeInComments: boolean\n    },\n): SemanticTokens {\n    const tokens = new Tokens()\n\n    const parser = createTactParser()\n\n    RecursiveVisitor.visit(file.rootNode, (n): boolean => {\n        const type = n.type\n\n        // asm fun foo() {}\n        // ^^^ this\n        if (type === \"asm\" && n.parent?.type === \"asm_function\") {\n            tokens.node(n, lsp.SemanticTokenTypes.keyword)\n            return true\n        }\n\n        if (type === \"global_constant\") {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.property)\n            return true\n        }\n\n        if (type === \"storage_function\") {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.function)\n            return true\n        }\n\n        if (type === \"parameter\") {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n\n            if (n.parent?.parent?.type === \"contract\") {\n                tokens.node(name, lsp.SemanticTokenTypes.property)\n                return true\n            }\n            tokens.node(name, lsp.SemanticTokenTypes.parameter)\n            return true\n        }\n\n        if (type === \"let_statement\") {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.variable)\n            return true\n        }\n\n        if (type === \"field\" || type === \"storage_variable\") {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.property)\n            return true\n        }\n\n        if (type === \"constant\" || type === \"storage_constant\") {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.enumMember)\n            return true\n        }\n\n        // asm fun foo() { ONE }\n        //                 ^^^ this\n        if (type === \"tvm_instruction\") {\n            tokens.node(n, lsp.SemanticTokenTypes.macro)\n            return true\n        }\n\n        if (type === \"asm_stack_register\") {\n            tokens.node(n, lsp.SemanticTokenTypes.parameter)\n            return true\n        }\n\n        if (type === \"asm_hex_bitstring\") {\n            tokens.node(n, lsp.SemanticTokenTypes.string)\n            return true\n        }\n\n        if (type === \"identifier\") {\n            const element = new NamedNode(n, file)\n            const resolved = Reference.resolve(element)\n            if (!resolved) return true\n            const resolvedType = resolved.node.type\n\n            switch (resolvedType) {\n                case \"parameter\": {\n                    if (resolved.node.parent?.parent?.type === \"contract\") {\n                        tokens.node(n, lsp.SemanticTokenTypes.property)\n                        break\n                    }\n\n                    tokens.node(n, lsp.SemanticTokenTypes.parameter)\n                    break\n                }\n                case \"field\":\n                case \"storage_variable\": {\n                    tokens.node(n, lsp.SemanticTokenTypes.property)\n                    break\n                }\n                case \"constant\":\n                case \"storage_constant\": {\n                    tokens.node(n, lsp.SemanticTokenTypes.enumMember)\n                    break\n                }\n                default: {\n                    if (isNamedFunNode(resolved.node)) {\n                        tokens.node(n, lsp.SemanticTokenTypes.function)\n                    } else if (resolved.node.parent?.type === \"let_statement\") {\n                        tokens.node(n, lsp.SemanticTokenTypes.variable)\n                    }\n                }\n            }\n        }\n\n        if (highlighting.highlightCodeInComments && isDocCommentOwner(n)) {\n            const node = new Node(n, file)\n\n            const comment = extractCommentsDocContent(node)\n            if (!comment) return true\n\n            processDocComment(tokens, comment, parser)\n        }\n\n        return true\n    })\n\n    return {\n        resultId: Date.now().toString(),\n        data: tokens.result(),\n    }\n}\n","import {Position} from \"vscode-languageclient\"\nimport type {Node as SyntaxNode, Parser} from \"web-tree-sitter\"\nimport {parse} from \"@textlint/markdown-to-ast\"\nimport * as lsp from \"vscode-languageserver\"\nimport {RecursiveVisitor} from \"@server/psi/visitor\"\nimport {Tokens} from \"@server/semantic_tokens/tokens\"\n\nconst KEYWORDS = {\n    extend: true,\n    public: true,\n    fun: true,\n    let: true,\n    return: true,\n    receive: true,\n    native: true,\n    primitive: true,\n    null: true,\n    if: true,\n    else: true,\n    while: true,\n    repeat: true,\n    do: true,\n    until: true,\n    try: true,\n    catch: true,\n    foreach: true,\n    as: true,\n    map: true,\n    mutates: true,\n    extends: true,\n    external: true,\n    import: true,\n    with: true,\n    trait: true,\n    initOf: true,\n    override: true,\n    abstract: true,\n    virtual: true,\n    inline: true,\n    const: true,\n    true: true,\n    false: true,\n    init: true,\n    contract: true,\n    message: true,\n    struct: true,\n}\n\nconst PUNCTUATION = {\n    \"(\": true,\n    \")\": true,\n    \"{\": true,\n    \"}\": true,\n    \"[\": true,\n    \"]\": true,\n    \"<\": true,\n    \">\": true,\n    \":\": true,\n    \";\": true,\n    \",\": true,\n    \".\": true,\n    \"=\": true,\n    \"==\": true,\n    \"!=\": true,\n    \">=\": true,\n    \"<=\": true,\n    \"+\": true,\n    \"-\": true,\n    \"/\": true,\n    \"*\": true,\n    \"%\": true,\n    \"!\": true,\n    \"!!\": true,\n    \"&\": true,\n    \"|\": true,\n    \"&&\": true,\n    \"||\": true,\n    \"?\": true,\n}\n\nfunction processNode(\n    n: SyntaxNode,\n    tokens: Tokens,\n    shift: {\n        line: number\n        character: number\n    },\n): boolean {\n    if (n.text in KEYWORDS) {\n        tokens.node(n, lsp.SemanticTokenTypes.keyword, shift)\n        return true\n    }\n    if (n.type in PUNCTUATION) {\n        tokens.node(n, lsp.SemanticTokenTypes.operator, shift)\n        return true\n    }\n\n    switch (n.type) {\n        case \"integer\": {\n            tokens.node(n, lsp.SemanticTokenTypes.number, shift)\n            break\n        }\n        case \"boolean\":\n        case \"null\":\n        case \"self\": {\n            tokens.node(n, lsp.SemanticTokenTypes.keyword, shift)\n            break\n        }\n        case \"string\": {\n            tokens.node(n, lsp.SemanticTokenTypes.string, shift)\n            break\n        }\n        case \"type_identifier\": {\n            tokens.node(n, lsp.SemanticTokenTypes.type, shift)\n            break\n        }\n        case \"global_function\": {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.function, shift)\n            break\n        }\n        case \"static_call_expression\": {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.function, shift)\n            break\n        }\n        case \"method_call_expression\": {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.function, shift)\n            break\n        }\n        case \"field_access_expression\": {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.property, shift)\n            break\n        }\n        case \"let_statement\": {\n            const name = n.childForFieldName(\"name\")\n            if (!name) return true\n            tokens.node(name, lsp.SemanticTokenTypes.variable, shift)\n            break\n        }\n        case \"identifier\": {\n            tokens.node(n, lsp.SemanticTokenTypes.variable, shift)\n            break\n        }\n    }\n    return true\n}\n\nexport function processDocComment(\n    tokens: Tokens,\n    comment: {\n        lines: string[]\n        startPosition: Position\n    },\n    parser: Parser,\n): void {\n    const ast = parse(comment.lines.join(\"\\n\"))\n    ast.children.forEach(node => {\n        if (node.type === \"Paragraph\") {\n            node.children.forEach(child => {\n                if (child.type === \"Code\") {\n                    tokens.push(\n                        {\n                            line: comment.startPosition.line + child.loc.start.line - 1,\n                            character: comment.startPosition.character + 4 + child.loc.start.column,\n                        },\n                        child.loc.end.column - child.loc.start.column,\n                        lsp.SemanticTokenTypes.variable,\n                    )\n                    return\n                }\n                if (child.type === \"Strong\") {\n                    tokens.push(\n                        {\n                            line: comment.startPosition.line + child.loc.start.line - 1,\n                            character: comment.startPosition.character + 4 + child.loc.start.column,\n                        },\n                        child.loc.end.column - child.loc.start.column,\n                        lsp.SemanticTokenTypes.operator,\n                    )\n                    return\n                }\n            })\n        }\n\n        if (node.type !== \"CodeBlock\") return\n        if (node.lang !== \"tact\") return\n\n        const tree = parser.parse(node.value)\n        if (!tree) {\n            console.error(\"cannot parse code from doc comment:\")\n            console.error(\"comment:\", node.value)\n            console.error(\"position:\", node.loc)\n            return\n        }\n\n        const shift = {\n            line: node.loc.start.line + comment.startPosition.line,\n            character: node.loc.start.column + comment.startPosition.character + 4,\n        }\n\n        RecursiveVisitor.visit(tree.rootNode, (n): boolean => processNode(n, tokens, shift))\n    })\n}\n","import {encode, SemanticToken} from \"@server/semantic_tokens/utils\"\nimport {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {Position} from \"vscode-languageclient\"\nimport * as lsp from \"vscode-languageserver\"\n\nexport class Tokens {\n    private readonly tokens: SemanticToken[] = []\n\n    public push(pos: Position, length: number, type: lsp.SemanticTokenTypes): void {\n        this.tokens.push({\n            line: pos.line,\n            start: pos.character,\n            len: length,\n            typ: Object.keys(lsp.SemanticTokenTypes).indexOf(type),\n            mods: [],\n        })\n    }\n\n    public node(node: SyntaxNode, type: lsp.SemanticTokenTypes, shift?: Position): void {\n        this.tokens.push({\n            line: node.startPosition.row + (shift?.line ?? 0),\n            start: node.startPosition.column + (shift?.character ?? 0),\n            len: node.endPosition.column - node.startPosition.column,\n            typ: Object.keys(lsp.SemanticTokenTypes).indexOf(type),\n            mods: [],\n        })\n    }\n\n    public result(): number[] {\n        return encode(this.tokens)\n    }\n}\n","export interface SemanticToken {\n    readonly line: number\n    readonly start: number\n    readonly len: number\n    readonly typ: number\n    readonly mods: string[]\n}\n\n/**\n * Encode encodes an array of semantic tokens into an array of u32s.\n *\n * See https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_semanticTokens\n * for more information.\n */\nexport function encode(tokens: SemanticToken[]): number[] {\n    const result = [...tokens]\n\n    // By specification, the tokens must be sorted.\n    result.sort((left, right) => {\n        if (left.line !== right.line) {\n            return left.line - right.line\n        }\n        return left.start - right.start\n    })\n\n    const res: number[] = [result.length * 5, 0]\n    let last: SemanticToken = {line: 0, start: 0, len: 0, typ: 0, mods: []}\n\n    let cur = 0\n    for (const tok of result) {\n        const typ = tok.typ >>> 0\n        res[cur] = cur === 0 ? tok.line : tok.line - last.line\n        res[cur + 1] = tok.start\n        if (cur > 0 && res[cur] === 0) {\n            res[cur + 1] = tok.start - last.start\n        }\n        res[cur + 2] = tok.len\n        res[cur + 3] = typ\n        res[cur + 4] = 0\n        cur += 5\n        last = tok\n    }\n\n    return res.slice(0, cur)\n}\n","import {fallbackToolchain, Toolchain} from \"@server/toolchain/toolchain\"\n\nexport let toolchain: Toolchain = fallbackToolchain\n\nexport function setToolchain(chain: Toolchain): void {\n    toolchain = chain\n}\n\nexport let workspaceRoot: string = \"\"\n\nexport function setWorkspaceRoot(path: string): void {\n    console.info(`Set ${path} as workspace root `)\n    workspaceRoot = path\n}\n","import * as path from \"node:path\"\nimport * as cp from \"node:child_process\"\nimport {SpawnSyncReturns} from \"node:child_process\"\nimport {existsSync} from \"node:fs\"\nimport * as console from \"node:console\"\n\nexport class InvalidToolchainError extends Error {\n    public constructor(message: string) {\n        super(message)\n        this.name = \"InvalidToolchainError\"\n    }\n}\n\nexport class Toolchain {\n    public readonly compilerPath: string\n    public version: {\n        number: string\n        commit: string\n    }\n\n    public constructor(compilerPath: string) {\n        this.compilerPath = compilerPath\n        this.version = {\n            number: \"\",\n            commit: \"\",\n        }\n    }\n\n    public static autoDetect(root: string): Toolchain {\n        const candidatesPath = [\n            path.join(root, \"node_modules\", \".bin\", \"tact\"),\n            path.join(root, \"bin\", \"tact.js\"), // path in compiler repo\n        ]\n        const foundPath = candidatesPath.find(it => existsSync(it))\n        if (!foundPath) {\n            console.info(`cannot find toolchain in:`)\n            candidatesPath.forEach(it => {\n                console.info(it)\n            })\n            return fallbackToolchain\n        }\n\n        return new Toolchain(foundPath).setVersion()\n    }\n\n    public static fromPath(path: string): Toolchain {\n        return new Toolchain(path).validate()\n    }\n\n    public isTact16(): boolean {\n        return this.version.number.startsWith(\"1.6\")\n    }\n\n    private setVersion(): this {\n        try {\n            const result = cp.execSync(`${this.compilerPath} -v`)\n            const rawVersion = result.toString()\n            const lines = rawVersion.split(\"\\n\")\n\n            this.version = {\n                number: lines[0] ?? \"\",\n                commit: lines[1] ?? \"\",\n            }\n        } catch {\n            // ignore errors here for now\n        }\n        return this\n    }\n\n    private validate(): this {\n        try {\n            const result = cp.execSync(`${this.compilerPath} -v`)\n            const rawVersion = result.toString()\n            const lines = rawVersion.split(\"\\n\")\n\n            this.version = {\n                number: lines[0] ?? \"\",\n                commit: lines[1] ?? \"\",\n            }\n        } catch (error_: unknown) {\n            const error = error_ as SpawnSyncReturns<Buffer>\n\n            console.log(error.stdout.toString())\n            console.log(error.stderr.toString())\n\n            const tip = `Please recheck path or leave it empty to LS find toolchain automatically`\n\n            if (error.stderr.includes(\"not found\")) {\n                throw new InvalidToolchainError(\n                    `Cannot find valid Tact executable in \"${this.compilerPath}\"! ${tip}`,\n                )\n            }\n\n            throw new InvalidToolchainError(\n                `Path ${this.compilerPath} is invalid! ${tip}: ${error.stderr.toString()}`,\n            )\n        }\n\n        return this\n    }\n\n    public toString(): string {\n        return `Toolchain(path=${this.compilerPath}, version=${this.version.number}:${this.version.commit})`\n    }\n}\n\nexport let projectStdlibPath: string | null = null\n\nexport function setProjectStdlibPath(path: string | null): void {\n    projectStdlibPath = path\n}\n\nexport const fallbackToolchain = new Toolchain(\"./node_modules/.bin/tact\")\n","import type {\n    Struct,\n    Message,\n    FieldsOwner,\n    Contract,\n    Constant,\n    Fun,\n    Trait,\n    StorageMembersOwner,\n    Primitive,\n    InitFunction,\n    Field,\n} from \"@server/psi/Decls\"\nimport {NamedNode} from \"@server/psi/Node\"\nimport {trimPrefix} from \"@server/utils/strings\"\nimport {TypeInferer} from \"@server/TypeInferer\"\n\nexport interface Ty {\n    name(): string\n\n    qualifiedName(): string\n\n    sizeOf(visited: Map<string, SizeOf>): SizeOf\n}\n\nexport abstract class BaseTy<Anchor extends NamedNode> implements Ty {\n    public readonly anchor: Anchor | null = null\n    protected readonly _name: string\n\n    public constructor(_name: string, anchor: Anchor | null) {\n        this.anchor = anchor\n        this._name = _name\n    }\n\n    public name(): string {\n        return this._name\n    }\n\n    public qualifiedName(): string {\n        return this._name\n    }\n\n    public abstract sizeOf(_visited: Map<string, SizeOf>): SizeOf\n}\n\nexport interface SizeOf {\n    readonly fixed: number\n    readonly floating: number\n}\n\nconst CELL_SIZE: SizeOf = {fixed: 0, floating: 1023}\n\nexport function sizeOfPresentation(size: SizeOf): string {\n    if (size.floating === 0) {\n        return `${size.fixed} bits`\n    }\n    return `${size.fixed} bits plus up to ${size.floating} bits`\n}\n\nfunction sizeOf(ty: Ty, visited: Map<string, SizeOf>): SizeOf {\n    const typeName = ty.qualifiedName()\n    const cached = visited.get(typeName)\n    if (cached) {\n        return cached\n    }\n\n    const actual = ty.sizeOf(visited)\n    visited.set(typeName, actual)\n    return actual\n}\n\nfunction mergeSizes(a: SizeOf, b: SizeOf): SizeOf {\n    if (a.floating === 0 && b.floating === 0) {\n        return {fixed: a.fixed + b.fixed, floating: 0}\n    }\n\n    return {fixed: a.fixed + b.fixed, floating: a.floating + b.floating}\n}\n\nexport class FieldsOwnerTy<Anchor extends FieldsOwner> extends BaseTy<Anchor> {\n    public fields(): Field[] {\n        if (this.anchor === null) return []\n        return this.anchor.fields()\n    }\n\n    public override sizeOf(visited: Map<string, SizeOf> = new Map()): SizeOf {\n        let res: SizeOf = {fixed: 0, floating: 0}\n\n        const fields = this.fields()\n        fields.forEach(field => {\n            const nameNode = field.nameNode()\n            if (!nameNode) return\n            const fieldTy = TypeInferer.inferType(nameNode)\n            if (!fieldTy) return\n\n            const size = sizeOf(fieldTy, visited)\n            res = mergeSizes(res, size)\n        })\n\n        const headerSize = this.anchor?.node.type === \"message\" ? 32 : 0\n\n        return mergeSizes(res, {\n            fixed: headerSize,\n            floating: 0,\n        })\n    }\n}\n\nexport class StructTy extends FieldsOwnerTy<Struct> {}\n\nexport class MessageTy extends FieldsOwnerTy<Message> {}\n\nexport class PrimitiveTy extends BaseTy<Primitive> {\n    public constructor(\n        name: string,\n        anchor: Primitive | null,\n        public tlb: string | null,\n    ) {\n        super(name, anchor)\n    }\n\n    public override name(): string {\n        return this._name\n    }\n\n    public override qualifiedName(): string {\n        if (this.tlb !== null) {\n            return `${this._name} as ${this.tlb}`\n        }\n\n        return this._name\n    }\n\n    public override sizeOf(_visited: Map<string, SizeOf>): SizeOf {\n        switch (this.name()) {\n            case \"Int\": {\n                if (this.tlb) {\n                    if (\n                        this.tlb === \"coins\" ||\n                        this.tlb === \"varuint16\" ||\n                        this.tlb === \"varint16\"\n                    ) {\n                        return {fixed: 4, floating: 120}\n                    }\n                    if (this.tlb === \"varuint32\" || this.tlb === \"varint32\") {\n                        return {fixed: 5, floating: 248}\n                    }\n\n                    const trimmed = trimPrefix(trimPrefix(this.tlb, \"uint\"), \"int\")\n                    const size = Number.parseInt(trimmed, 10)\n                    if (!Number.isNaN(size)) {\n                        return {fixed: size, floating: 0}\n                    }\n                }\n\n                return {fixed: 257, floating: 0}\n            }\n            case \"Bool\": {\n                return {fixed: 1, floating: 0}\n            }\n            case \"Address\": {\n                return {fixed: 267, floating: 0}\n            }\n            case \"Cell\":\n            case \"Slice\":\n            case \"Builder\":\n            case \"String\": {\n                return CELL_SIZE\n            }\n        }\n\n        return {fixed: 0, floating: 0}\n    }\n}\n\nexport class PlaceholderTy extends BaseTy<NamedNode> {\n    public sizeOf(_visited: Map<string, SizeOf>): SizeOf {\n        return {fixed: 0, floating: 0}\n    }\n}\n\nexport class StorageMembersOwnerTy<Anchor extends StorageMembersOwner> extends BaseTy<Anchor> {\n    public ownMethods(): Fun[] {\n        if (this.anchor === null) return []\n        return this.anchor.ownMethods()\n    }\n\n    public ownFields(): NamedNode[] {\n        if (this.anchor === null) return []\n        return this.anchor.ownFields()\n    }\n\n    public ownConstants(): Constant[] {\n        if (this.anchor === null) return []\n        return this.anchor.ownConstants()\n    }\n\n    public constants(): Constant[] {\n        if (this.anchor === null) return []\n        return this.anchor.constants()\n    }\n\n    public fields(): NamedNode[] {\n        if (this.anchor === null) return []\n        return this.anchor.fields()\n    }\n\n    public methods(): Fun[] {\n        if (this.anchor === null) return []\n        return this.anchor.methods()\n    }\n\n    public initFunction(): InitFunction | null {\n        if (this.anchor === null) return null\n        return this.anchor.initFunction()\n    }\n\n    public sizeOf(_visited: Map<string, SizeOf>): SizeOf {\n        return {fixed: 0, floating: 0}\n    }\n}\n\nexport class TraitTy extends StorageMembersOwnerTy<Trait> {}\n\nexport class ContractTy extends StorageMembersOwnerTy<Contract> {}\n\nexport class BouncedTy implements Ty {\n    public constructor(public innerTy: Ty) {}\n\n    public name(): string {\n        return `bounced<${this.innerTy.name()}>`\n    }\n\n    public qualifiedName(): string {\n        return `bounced<${this.innerTy.qualifiedName()}>`\n    }\n\n    public sizeOf(_visited: Map<string, SizeOf>): SizeOf {\n        return this.innerTy.sizeOf(_visited)\n    }\n}\n\nexport class OptionTy implements Ty {\n    public constructor(public innerTy: Ty) {}\n\n    public name(): string {\n        return `${this.innerTy.name()}?`\n    }\n\n    public qualifiedName(): string {\n        return `${this.innerTy.qualifiedName()}?`\n    }\n\n    public sizeOf(_visited: Map<string, SizeOf>): SizeOf {\n        const innerSizeOf = this.innerTy.sizeOf(_visited)\n        return mergeSizes(innerSizeOf, {fixed: 1, floating: 0}) // 1 bit for null/not-null\n    }\n}\n\nexport class MapTy implements Ty {\n    public constructor(\n        public keyTy: Ty,\n        public valueTy: Ty,\n    ) {}\n\n    public name(): string {\n        return `map<${this.keyTy.name()}, ${this.valueTy.name()}>`\n    }\n\n    public qualifiedName(): string {\n        return `map<${this.keyTy.qualifiedName()}, ${this.valueTy.qualifiedName()}>`\n    }\n\n    public sizeOf(_visited: Map<string, SizeOf>): SizeOf {\n        return CELL_SIZE\n    }\n}\n\nexport class NullTy implements Ty {\n    public name(): string {\n        return \"null\"\n    }\n\n    public qualifiedName(): string {\n        return \"null\"\n    }\n\n    public sizeOf(_visited: Map<string, SizeOf>): SizeOf {\n        return {fixed: 0, floating: 0}\n    }\n}\n","import type * as lsp from \"vscode-languageserver\"\nimport type {Position} from \"vscode-languageclient\"\n\ninterface Edit {\n    range: lsp.Range\n    newText: string\n}\n\n/**\n * Utility class for building workspace edits\n */\nexport class FileDiff {\n    private readonly edits: Edit[] = []\n\n    private constructor(private readonly uri: string) {}\n\n    /**\n     * Create a new diff for a file\n     */\n    public static forFile(uri: string): FileDiff {\n        return new FileDiff(uri)\n    }\n\n    /**\n     * Add text at the beginning of a line\n     */\n    public appendToBegin(line: number, text: string): this {\n        return this.appendTo({line, character: 0}, text)\n    }\n\n    /**\n     * Add text at specific position\n     */\n    public appendTo(pos: Position, text: string): this {\n        this.edits.push({\n            range: {start: pos, end: pos},\n            newText: text,\n        })\n        return this\n    }\n\n    /**\n     * Add text as a new line before specified line\n     */\n    public appendAsPrevLine(line: number, text: string): this {\n        const pos = {line, character: 0}\n        this.edits.push({\n            range: {start: pos, end: pos},\n            newText: `${text}\\n`,\n        })\n        return this\n    }\n\n    /**\n     * Add text as a new line after specified line\n     */\n    public appendAsNextLine(line: number, text: string): this {\n        const pos = {line: line + 1, character: 0}\n        this.edits.push({\n            range: {start: pos, end: pos},\n            newText: `${text}\\n`,\n        })\n        return this\n    }\n\n    /**\n     * Replace text in range\n     */\n    public replace(range: lsp.Range, newText: string): this {\n        this.edits.push({range, newText})\n        return this\n    }\n\n    /**\n     * Convert to LSP WorkspaceEdit\n     */\n    public toWorkspaceEdit(): lsp.WorkspaceEdit {\n        return {\n            changes: {\n                [this.uri]: this.toTextEdits(),\n            },\n        }\n    }\n\n    /**\n     * Convert to array of TextEdit\n     */\n    public toTextEdits(): lsp.TextEdit[] {\n        return this.edits.map(edit => ({\n            range: edit.range,\n            newText: edit.newText,\n        }))\n    }\n\n    /**\n     * Get URI of the file being edited\n     */\n    public getUri(): string {\n        return this.uri\n    }\n}\n","export function crc16(buffer: Buffer): number {\n    let crc = 0xff_ff\n    let odd = 0\n\n    for (const element of buffer) {\n        crc = crc ^ element\n        for (let j = 0; j < 8; j++) {\n            odd = crc & 0x00_01\n            crc = crc >> 1\n            if (odd) {\n                crc = crc ^ 0xa0_01\n            }\n        }\n    }\n\n    return crc\n}\n","/* eslint-disable @typescript-eslint/no-base-to-string */\nimport type {Connection} from \"vscode-languageserver\"\nimport * as fs from \"node:fs\"\nimport * as path from \"node:path\"\n\nexport class Logger {\n    private logFile: fs.WriteStream | null = null\n    private static instance: Logger | null = null\n\n    private constructor(\n        private readonly connection: Connection,\n        logPath?: string,\n    ) {\n        if (logPath !== undefined) {\n            const logDir = path.dirname(logPath)\n            if (!fs.existsSync(logDir)) {\n                fs.mkdirSync(logDir, {recursive: true})\n            }\n            this.logFile = fs.createWriteStream(logPath, {flags: \"a\"})\n        }\n    }\n\n    public static initialize(connection: Connection, logPath?: string): Logger {\n        if (!Logger.instance) {\n            const instance = new Logger(connection, logPath)\n\n            console.log = (...args) => {\n                instance.log(...args)\n            }\n            console.info = (...args) => {\n                instance.info(...args)\n            }\n            console.warn = (...args) => {\n                instance.warn(...args)\n            }\n            console.error = (...args) => {\n                instance.error(...args)\n            }\n\n            Logger.instance = instance\n        }\n        return Logger.instance\n    }\n\n    public static getInstance(): Logger {\n        if (!Logger.instance) {\n            throw new Error(\"Logger not initialized\")\n        }\n        return Logger.instance\n    }\n\n    public log(...args: unknown[]): void {\n        const message = Logger.formatMessage(args)\n        this.connection.console.log(message)\n        this.writeToFile(`[LOG] [${Logger.formatDate(new Date())}] ${message}`)\n    }\n\n    public info(...args: unknown[]): void {\n        const message = Logger.formatMessage(args)\n        this.connection.console.info(message)\n        this.writeToFile(`[INFO] [${Logger.formatDate(new Date())}] ${message}`)\n    }\n\n    public warn(...args: unknown[]): void {\n        const message = Logger.formatMessage(args)\n        this.connection.console.warn(message)\n        this.writeToFile(`[WARN] [${Logger.formatDate(new Date())}] ${message}`)\n    }\n\n    public error(...args: unknown[]): void {\n        const message = Logger.formatMessage(args)\n        this.connection.console.error(message)\n        this.writeToFile(`[ERROR] [${Logger.formatDate(new Date())}] ${message}`)\n    }\n\n    public dispose(): void {\n        if (this.logFile) {\n            this.logFile.end()\n            this.logFile = null\n        }\n    }\n\n    private static formatDate(date: Date): string {\n        const pad = (n: number): string => n.toString().padStart(2, \"0\")\n\n        const year = date.getFullYear().toString()\n        const month = pad(date.getMonth() + 1)\n        const day = pad(date.getDate())\n        const hours = pad(date.getHours())\n        const minutes = pad(date.getMinutes())\n        const seconds = pad(date.getSeconds())\n\n        return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`\n    }\n\n    private static formatMessage(args: unknown[]): string {\n        return args\n            .filter(arg => arg !== undefined)\n            .map(arg => (typeof arg === \"object\" ? JSON.stringify(arg) : arg.toString()))\n            .join(\" \")\n    }\n\n    private writeToFile(message: string): void {\n        if (this.logFile) {\n            this.logFile.write(message + \"\\n\")\n        }\n    }\n}\n","import * as lsp from \"vscode-languageserver\"\nimport type {Node as SyntaxNode, Point} from \"web-tree-sitter\"\n\nexport function asNullableLspRange(node: SyntaxNode | null | undefined): lsp.Range {\n    if (!node) {\n        return lsp.Range.create(0, 1, 0, 1)\n    }\n\n    return lsp.Range.create(\n        node.startPosition.row,\n        node.startPosition.column,\n        node.endPosition.row,\n        node.endPosition.column,\n    )\n}\n\nexport function asLspRange(node: SyntaxNode): lsp.Range {\n    return lsp.Range.create(\n        node.startPosition.row,\n        node.startPosition.column,\n        node.endPosition.row,\n        node.endPosition.column,\n    )\n}\n\nexport function asLspPosition(pos: Point): lsp.Position {\n    return lsp.Position.create(pos.row, pos.column)\n}\n\nexport function asParserPoint(position: lsp.Position): Point {\n    return {\n        column: position.character,\n        row: position.line,\n    }\n}\n","import {connection} from \"@server/connection\"\n\nexport type FindUsagesScope = \"workspace\" | \"everywhere\"\n\nexport interface TactSettings {\n    stdlib: {\n        path: string | null\n    }\n    toolchain: {\n        compilerPath: string\n        showShortCommitInStatusBar: boolean\n    }\n    highlighting: {\n        highlightCodeInComments: boolean\n    }\n    findUsages: {\n        scope: FindUsagesScope\n    }\n    hints: {\n        types: boolean\n        parameters: boolean\n        exitCodeFormat: \"decimal\" | \"hex\"\n        showMethodId: boolean\n        showGasConsumption: boolean\n        showAsmInstructionGas: boolean\n        showExitCodes: boolean\n        showExplicitTLBIntType: boolean\n        gasFormat: string\n        showContinuationGas: boolean\n        showToCellSize: boolean\n    }\n    gas: {\n        loopGasCoefficient: number\n    }\n    codeLens: {\n        enabled: boolean\n        showUsages: boolean\n        showOverrides: boolean\n        showTraitImplementations: boolean\n        showFunctionImplementations: boolean\n        showParentTraitFields: boolean\n        showParentTraitFunctions: boolean\n    }\n    inspections: {\n        disabled: string[] // list of disabled inspection ids\n    }\n    fift: {\n        hints: {\n            showGasConsumption: boolean\n        }\n        semanticHighlighting: {\n            enabled: boolean\n        }\n    }\n    completion: {\n        typeAware: boolean\n        addImports: boolean\n    }\n    documentSymbols: {\n        showStructFields: boolean\n        showMessageFields: boolean\n    }\n    linters: {\n        compiler: {\n            enable: boolean\n        }\n        misti: {\n            enable: boolean\n            binPath: string\n        }\n        useProblemMatcher: boolean\n    }\n}\n\nconst defaultSettings: TactSettings = {\n    stdlib: {\n        path: null,\n    },\n    highlighting: {\n        highlightCodeInComments: true,\n    },\n    toolchain: {\n        compilerPath: \"\",\n        showShortCommitInStatusBar: false,\n    },\n    findUsages: {\n        scope: \"workspace\",\n    },\n    hints: {\n        types: true,\n        parameters: true,\n        exitCodeFormat: \"decimal\",\n        showMethodId: true,\n        showGasConsumption: true,\n        showAsmInstructionGas: true,\n        showExitCodes: true,\n        showExplicitTLBIntType: true,\n        gasFormat: \": {gas}\",\n        showContinuationGas: true,\n        showToCellSize: true,\n    },\n    gas: {\n        loopGasCoefficient: 5,\n    },\n    codeLens: {\n        enabled: true,\n        showUsages: true,\n        showOverrides: true,\n        showTraitImplementations: true,\n        showFunctionImplementations: true,\n        showParentTraitFields: true,\n        showParentTraitFunctions: true,\n    },\n    inspections: {\n        disabled: [], // no disabled inspections by default\n    },\n    fift: {\n        hints: {\n            showGasConsumption: true,\n        },\n        semanticHighlighting: {\n            enabled: true,\n        },\n    },\n    completion: {\n        typeAware: true,\n        addImports: true,\n    },\n    documentSymbols: {\n        showStructFields: false,\n        showMessageFields: false,\n    },\n    linters: {\n        compiler: {\n            enable: false,\n        },\n        misti: {\n            enable: false,\n            binPath: \"npx misti\",\n        },\n        useProblemMatcher: false,\n    },\n}\n\nconst documentSettings: Map<string, TactSettings> = new Map()\n\nfunction mergeSettings(vsSettings: Partial<TactSettings>): TactSettings {\n    return {\n        stdlib: {\n            path: vsSettings.stdlib?.path ?? defaultSettings.stdlib.path,\n        },\n        highlighting: {\n            highlightCodeInComments:\n                vsSettings.highlighting?.highlightCodeInComments ??\n                defaultSettings.highlighting.highlightCodeInComments,\n        },\n        toolchain: {\n            compilerPath:\n                vsSettings.toolchain?.compilerPath ?? defaultSettings.toolchain.compilerPath,\n            showShortCommitInStatusBar:\n                vsSettings.toolchain?.showShortCommitInStatusBar ??\n                defaultSettings.toolchain.showShortCommitInStatusBar,\n        },\n        findUsages: {\n            scope: vsSettings.findUsages?.scope ?? defaultSettings.findUsages.scope,\n        },\n        hints: {\n            types: vsSettings.hints?.types ?? defaultSettings.hints.types,\n            parameters: vsSettings.hints?.parameters ?? defaultSettings.hints.parameters,\n            exitCodeFormat:\n                vsSettings.hints?.exitCodeFormat ?? defaultSettings.hints.exitCodeFormat,\n            showMethodId: vsSettings.hints?.showMethodId ?? defaultSettings.hints.showMethodId,\n            showGasConsumption:\n                vsSettings.hints?.showGasConsumption ?? defaultSettings.hints.showGasConsumption,\n            showAsmInstructionGas:\n                vsSettings.hints?.showAsmInstructionGas ??\n                defaultSettings.hints.showAsmInstructionGas,\n            showExitCodes: vsSettings.hints?.showExitCodes ?? defaultSettings.hints.showExitCodes,\n            showExplicitTLBIntType:\n                vsSettings.hints?.showExplicitTLBIntType ??\n                defaultSettings.hints.showExplicitTLBIntType,\n            gasFormat: vsSettings.hints?.gasFormat ?? defaultSettings.hints.gasFormat,\n            showContinuationGas:\n                vsSettings.hints?.showContinuationGas ?? defaultSettings.hints.showContinuationGas,\n            showToCellSize:\n                vsSettings.hints?.showToCellSize ?? defaultSettings.hints.showToCellSize,\n        },\n        gas: {\n            loopGasCoefficient:\n                vsSettings.gas?.loopGasCoefficient ?? defaultSettings.gas.loopGasCoefficient,\n        },\n        codeLens: {\n            enabled: vsSettings.codeLens?.enabled ?? defaultSettings.codeLens.enabled,\n            showUsages: vsSettings.codeLens?.showUsages ?? defaultSettings.codeLens.showUsages,\n            showOverrides:\n                vsSettings.codeLens?.showOverrides ?? defaultSettings.codeLens.showOverrides,\n            showTraitImplementations:\n                vsSettings.codeLens?.showTraitImplementations ??\n                defaultSettings.codeLens.showTraitImplementations,\n            showFunctionImplementations:\n                vsSettings.codeLens?.showFunctionImplementations ??\n                defaultSettings.codeLens.showFunctionImplementations,\n            showParentTraitFields:\n                vsSettings.codeLens?.showParentTraitFields ??\n                defaultSettings.codeLens.showParentTraitFields,\n            showParentTraitFunctions:\n                vsSettings.codeLens?.showParentTraitFunctions ??\n                defaultSettings.codeLens.showParentTraitFunctions,\n        },\n        inspections: {\n            disabled: vsSettings.inspections?.disabled ?? defaultSettings.inspections.disabled,\n        },\n        fift: {\n            hints: {\n                showGasConsumption:\n                    vsSettings.fift?.hints.showGasConsumption ??\n                    defaultSettings.fift.hints.showGasConsumption,\n            },\n            semanticHighlighting: {\n                enabled:\n                    vsSettings.fift?.semanticHighlighting.enabled ??\n                    defaultSettings.fift.semanticHighlighting.enabled,\n            },\n        },\n        completion: {\n            typeAware: vsSettings.completion?.typeAware ?? defaultSettings.completion.typeAware,\n            addImports: vsSettings.completion?.addImports ?? defaultSettings.completion.addImports,\n        },\n        documentSymbols: {\n            showStructFields:\n                vsSettings.documentSymbols?.showStructFields ??\n                defaultSettings.documentSymbols.showStructFields,\n            showMessageFields:\n                vsSettings.documentSymbols?.showMessageFields ??\n                defaultSettings.documentSymbols.showMessageFields,\n        },\n        linters: {\n            compiler: {\n                enable:\n                    vsSettings.linters?.compiler.enable ?? defaultSettings.linters.compiler.enable,\n            },\n            misti: {\n                enable: vsSettings.linters?.misti.enable ?? defaultSettings.linters.misti.enable,\n                binPath: vsSettings.linters?.misti.binPath ?? defaultSettings.linters.misti.binPath,\n            },\n            useProblemMatcher:\n                vsSettings.linters?.useProblemMatcher ?? defaultSettings.linters.useProblemMatcher,\n        },\n    }\n}\n\nexport async function getDocumentSettings(resource: string): Promise<TactSettings> {\n    let vsCodeSettings = documentSettings.get(resource)\n    if (!vsCodeSettings) {\n        vsCodeSettings = (await connection.workspace.getConfiguration({\n            scopeUri: resource,\n            section: \"tact\",\n        })) as TactSettings | undefined\n        if (vsCodeSettings) {\n            documentSettings.set(resource, vsCodeSettings)\n        }\n    }\n    if (!vsCodeSettings) {\n        return defaultSettings\n    }\n\n    return mergeSettings(vsCodeSettings)\n}\n\nexport function clearDocumentSettings(): void {\n    documentSettings.clear()\n}\n","export function trimSuffix(text: string, prefix: string): string {\n    if (text.endsWith(prefix)) {\n        return text.slice(0, -prefix.length)\n    }\n    return text\n}\n\nexport function trimPrefix(text: string, prefix: string): string {\n    if (text.startsWith(prefix)) {\n        return text.slice(prefix.length)\n    }\n    return text\n}\n\n/**\n * Converts any case (snake_case, kebab-case, camelCase) to PascalCase\n */\nexport function toPascalCase(text: string): string {\n    const withSpaces = text.replace(/[_-]/g, \" \")\n    const normalized = withSpaces.replace(/([A-Z])/g, \" $1\")\n    return normalized\n        .split(\" \")\n        .filter(word => word.length > 0)\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(\"\")\n}\n","import {connection} from \"@server/connection\"\n\nexport interface Vfs {\n    readFile: (uri: string) => Promise<undefined | string>\n}\n\nlet vfs: Vfs\n\nexport const readFile = async (uri: string): Promise<string | undefined> => vfs.readFile(uri)\n\nexport function createVfs(clientName: undefined | string): void {\n    if (clientName?.includes(\"Code\") || clientName?.includes(\"Codium\")) {\n        vfs = {\n            readFile: async uri => {\n                return connection.sendRequest<undefined | string>(\"tact.readFile\", {uri})\n            },\n        }\n        return\n    }\n\n    vfs = {\n        readFile: async uri => {\n            // eslint-disable-next-line unicorn/no-await-expression-member\n            return (await import(\"node:fs/promises\")).readFile(new URL(uri).pathname, \"utf8\")\n        },\n    }\n}\n","import type * as lsp from \"vscode-languageserver\"\n\nexport const GetTypeAtPositionRequest = \"tact/getTypeAtPosition\"\nexport const GetDocumentationAtPositionRequest = \"tact/executeHoverProvider\"\nexport const SetToolchainVersionNotification = \"tact/setToolchainVersion\"\n\nexport interface GetTypeAtPositionParams {\n    textDocument: {\n        uri: string\n    }\n    position: {\n        line: number\n        character: number\n    }\n}\n\nexport interface SetToolchainVersionParams {\n    version: {\n        number: string\n        commit: string\n    }\n}\n\nexport interface GetTypeAtPositionResponse {\n    type: string | null\n    range: lsp.Range | null\n}\n\nexport type GetDocumentationAtPositionResponse = lsp.Hover\n","'use strict'\n\nvar bail = require('bail')\nvar buffer = require('is-buffer')\nvar extend = require('extend')\nvar plain = require('is-plain-obj')\nvar trough = require('trough')\nvar vfile = require('vfile')\n\n// Expose a frozen processor.\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n// Process pipeline.\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(error, tree, file) {\n    if (error) {\n      next(error)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  var result = p.stringify(ctx.tree, ctx.file)\n\n  if (result === undefined || result === null) {\n    // Empty.\n  } else if (typeof result === 'string' || buffer(result)) {\n    if ('value' in ctx.file) {\n      ctx.file.value = result\n    }\n\n    ctx.file.contents = result\n  } else {\n    ctx.file.result = result\n  }\n}\n\n// Function to create the first processor.\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var freezeIndex = -1\n  var frozen\n\n  // Data management.\n  processor.data = data\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  function processor() {\n    var destination = unified()\n    var index = -1\n\n    while (++index < attachers.length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  // Freeze: used to signal a processor that has finished configuration.\n  //\n  // For example, take unified itself: it’s frozen.\n  // Plugins should not be added to it.\n  // Rather, it should be extended, by invoking it, before modifying it.\n  //\n  // In essence, always invoke this when exporting a processor.\n  function freeze() {\n    var values\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n\n      if (values[1] === false) {\n        continue\n      }\n\n      if (values[1] === true) {\n        values[1] = undefined\n      }\n\n      transformer = values[0].apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  // Data management.\n  // Getter / setter for processor-specific informtion.\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  // Plugin management.\n  //\n  // Pass it:\n  // *   an attacher and options,\n  // *   a preset,\n  // *   a list of presets, attachers, and arguments (list of attachers and\n  //     options).\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        while (++index < plugins.length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var index = -1\n\n    while (++index < attachers.length) {\n      if (attachers[index][0] === plugin) {\n        return attachers[index]\n      }\n    }\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor.\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), async.\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), sync.\n  function runSync(node, file) {\n    var result\n    var complete\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(error, tree) {\n      complete = true\n      result = tree\n      bail(error)\n    }\n  }\n\n  // Stringify a unist node representation of a file (in string or vfile\n  // representation) into a string using the `Compiler` on the processor.\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor, then run transforms on that node, and\n  // compile the resulting node using the `Compiler` on the processor, and\n  // store that result on the vfile.\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(error) {\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  // Process the given document (in string or vfile representation), sync.\n  function processSync(doc) {\n    var file\n    var complete\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n// Check if `value` is a constructor.\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n// Check if `value` is an object with keys.\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n\n  return false\n}\n\n// Assert a parser is available.\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n// Assert a compiler is available.\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n// Assert the processor is not frozen.\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot invoke `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n// Assert `node` is a unist node.\nfunction assertNode(node) {\n  if (!node || typeof node.type !== 'string') {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n// Assert that `complete` is `true`.\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (test == null) {\n    return ok\n  }\n\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (typeof test === 'object') {\n    return 'length' in test ? anyFactory(test) : allFactory(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction allFactory(test) {\n  return all\n\n  function all(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) return false\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = []\n  var index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return any\n\n  function any() {\n    var index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = stringify\n\nfunction stringify(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\nfunction point(point) {\n  if (!point || typeof point !== 'object') {\n    point = {}\n  }\n\n  return index(point.line) + ':' + index(point.column)\n}\n\nfunction position(pos) {\n  if (!pos || typeof pos !== 'object') {\n    pos = {}\n  }\n\n  return point(pos.start) + '-' + point(pos.end)\n}\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","module.exports = color\nfunction color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nvar stringify = require('unist-util-stringify-position')\n\nmodule.exports = VMessage\n\n// Inherit from `Error#`.\nfunction VMessagePrototype() {}\nVMessagePrototype.prototype = Error.prototype\nVMessage.prototype = new VMessagePrototype()\n\n// Message properties.\nvar proto = VMessage.prototype\n\nproto.file = ''\nproto.name = ''\nproto.reason = ''\nproto.message = ''\nproto.stack = ''\nproto.fatal = null\nproto.column = null\nproto.line = null\n\n// Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\nfunction VMessage(reason, position, origin) {\n  var parts\n  var range\n  var location\n\n  if (typeof position === 'string') {\n    origin = position\n    position = null\n  }\n\n  parts = parseOrigin(origin)\n  range = stringify(position) || '1:1'\n\n  location = {\n    start: {line: null, column: null},\n    end: {line: null, column: null}\n  }\n\n  // Node.\n  if (position && position.position) {\n    position = position.position\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position\n      position = position.start\n    } else {\n      // Point.\n      location.start = position\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack\n    reason = reason.message\n  }\n\n  this.message = reason\n  this.name = range\n  this.reason = reason\n  this.line = position ? position.line : null\n  this.column = position ? position.column : null\n  this.location = location\n  this.source = parts[0]\n  this.ruleId = parts[1]\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null]\n  var index\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':')\n\n    if (index === -1) {\n      result[1] = origin\n    } else {\n      result[0] = origin.slice(0, index)\n      result[1] = origin.slice(index + 1)\n    }\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar p = require('./minpath')\nvar proc = require('./minproc')\nvar buffer = require('is-buffer')\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nVFile.prototype.toString = toString\n\n// Access full path (`~/index.min.js`).\nObject.defineProperty(VFile.prototype, 'path', {get: getPath, set: setPath})\n\n// Access parent path (`~`).\nObject.defineProperty(VFile.prototype, 'dirname', {\n  get: getDirname,\n  set: setDirname\n})\n\n// Access basename (`index.min.js`).\nObject.defineProperty(VFile.prototype, 'basename', {\n  get: getBasename,\n  set: setBasename\n})\n\n// Access extname (`.js`).\nObject.defineProperty(VFile.prototype, 'extname', {\n  get: getExtname,\n  set: setExtname\n})\n\n// Access stem (`index.min`).\nObject.defineProperty(VFile.prototype, 'stem', {get: getStem, set: setStem})\n\n// Construct a new file.\nfunction VFile(options) {\n  var prop\n  var index\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = proc.cwd()\n\n  // Set path related properties in the correct order.\n  index = -1\n\n  while (++index < order.length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  // Set non-path related properties.\n  for (prop in options) {\n    if (order.indexOf(prop) < 0) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\nfunction getPath() {\n  return this.history[this.history.length - 1]\n}\n\nfunction setPath(path) {\n  assertNonEmpty(path, 'path')\n\n  if (this.path !== path) {\n    this.history.push(path)\n  }\n}\n\nfunction getDirname() {\n  return typeof this.path === 'string' ? p.dirname(this.path) : undefined\n}\n\nfunction setDirname(dirname) {\n  assertPath(this.path, 'dirname')\n  this.path = p.join(dirname || '', this.basename)\n}\n\nfunction getBasename() {\n  return typeof this.path === 'string' ? p.basename(this.path) : undefined\n}\n\nfunction setBasename(basename) {\n  assertNonEmpty(basename, 'basename')\n  assertPart(basename, 'basename')\n  this.path = p.join(this.dirname || '', basename)\n}\n\nfunction getExtname() {\n  return typeof this.path === 'string' ? p.extname(this.path) : undefined\n}\n\nfunction setExtname(extname) {\n  assertPart(extname, 'extname')\n  assertPath(this.path, 'extname')\n\n  if (extname) {\n    if (extname.charCodeAt(0) !== 46 /* `.` */) {\n      throw new Error('`extname` must start with `.`')\n    }\n\n    if (extname.indexOf('.', 1) > -1) {\n      throw new Error('`extname` cannot contain multiple dots')\n    }\n  }\n\n  this.path = p.join(this.dirname, this.stem + (extname || ''))\n}\n\nfunction getStem() {\n  return typeof this.path === 'string'\n    ? p.basename(this.path, this.extname)\n    : undefined\n}\n\nfunction setStem(stem) {\n  assertNonEmpty(stem, 'stem')\n  assertPart(stem, 'stem')\n  this.path = p.join(this.dirname || '', stem + (this.extname || ''))\n}\n\n// Get the value of the file.\nfunction toString(encoding) {\n  return (this.contents || '').toString(encoding)\n}\n\n// Assert that `part` is not a path (i.e., does not contain `p.sep`).\nfunction assertPart(part, name) {\n  if (part && part.indexOf(p.sep) > -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + p.sep + '`'\n    )\n  }\n}\n\n// Assert that `part` is not empty.\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n// Assert `path` exists.\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","'use strict'\n\nvar VMessage = require('vfile-message')\nvar VFile = require('./core.js')\n\nmodule.exports = VFile\n\nVFile.prototype.message = message\nVFile.prototype.info = info\nVFile.prototype.fail = fail\n\n// Create a message with `reason` at `position`.\n// When an error is passed in as `reason`, copies the stack.\nfunction message(reason, position, origin) {\n  var message = new VMessage(reason, position, origin)\n\n  if (this.path) {\n    message.name = this.path + ':' + message.name\n    message.file = this.path\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n// Fail: creates a vmessage, associates it with the file, and throws it.\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n// Info: creates a vmessage, associates it with the file, and marks the fatality\n// as null.\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n","'use strict'\n\nmodule.exports = require('path')\n","'use strict'\n\nmodule.exports = process\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = void 0;\nexports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = void 0;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return messages_1.Message; } });\nObject.defineProperty(exports, \"RequestType\", { enumerable: true, get: function () { return messages_1.RequestType; } });\nObject.defineProperty(exports, \"RequestType0\", { enumerable: true, get: function () { return messages_1.RequestType0; } });\nObject.defineProperty(exports, \"RequestType1\", { enumerable: true, get: function () { return messages_1.RequestType1; } });\nObject.defineProperty(exports, \"RequestType2\", { enumerable: true, get: function () { return messages_1.RequestType2; } });\nObject.defineProperty(exports, \"RequestType3\", { enumerable: true, get: function () { return messages_1.RequestType3; } });\nObject.defineProperty(exports, \"RequestType4\", { enumerable: true, get: function () { return messages_1.RequestType4; } });\nObject.defineProperty(exports, \"RequestType5\", { enumerable: true, get: function () { return messages_1.RequestType5; } });\nObject.defineProperty(exports, \"RequestType6\", { enumerable: true, get: function () { return messages_1.RequestType6; } });\nObject.defineProperty(exports, \"RequestType7\", { enumerable: true, get: function () { return messages_1.RequestType7; } });\nObject.defineProperty(exports, \"RequestType8\", { enumerable: true, get: function () { return messages_1.RequestType8; } });\nObject.defineProperty(exports, \"RequestType9\", { enumerable: true, get: function () { return messages_1.RequestType9; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return messages_1.ResponseError; } });\nObject.defineProperty(exports, \"ErrorCodes\", { enumerable: true, get: function () { return messages_1.ErrorCodes; } });\nObject.defineProperty(exports, \"NotificationType\", { enumerable: true, get: function () { return messages_1.NotificationType; } });\nObject.defineProperty(exports, \"NotificationType0\", { enumerable: true, get: function () { return messages_1.NotificationType0; } });\nObject.defineProperty(exports, \"NotificationType1\", { enumerable: true, get: function () { return messages_1.NotificationType1; } });\nObject.defineProperty(exports, \"NotificationType2\", { enumerable: true, get: function () { return messages_1.NotificationType2; } });\nObject.defineProperty(exports, \"NotificationType3\", { enumerable: true, get: function () { return messages_1.NotificationType3; } });\nObject.defineProperty(exports, \"NotificationType4\", { enumerable: true, get: function () { return messages_1.NotificationType4; } });\nObject.defineProperty(exports, \"NotificationType5\", { enumerable: true, get: function () { return messages_1.NotificationType5; } });\nObject.defineProperty(exports, \"NotificationType6\", { enumerable: true, get: function () { return messages_1.NotificationType6; } });\nObject.defineProperty(exports, \"NotificationType7\", { enumerable: true, get: function () { return messages_1.NotificationType7; } });\nObject.defineProperty(exports, \"NotificationType8\", { enumerable: true, get: function () { return messages_1.NotificationType8; } });\nObject.defineProperty(exports, \"NotificationType9\", { enumerable: true, get: function () { return messages_1.NotificationType9; } });\nObject.defineProperty(exports, \"ParameterStructures\", { enumerable: true, get: function () { return messages_1.ParameterStructures; } });\nconst linkedMap_1 = require(\"./linkedMap\");\nObject.defineProperty(exports, \"LinkedMap\", { enumerable: true, get: function () { return linkedMap_1.LinkedMap; } });\nObject.defineProperty(exports, \"LRUCache\", { enumerable: true, get: function () { return linkedMap_1.LRUCache; } });\nObject.defineProperty(exports, \"Touch\", { enumerable: true, get: function () { return linkedMap_1.Touch; } });\nconst disposable_1 = require(\"./disposable\");\nObject.defineProperty(exports, \"Disposable\", { enumerable: true, get: function () { return disposable_1.Disposable; } });\nconst events_1 = require(\"./events\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return events_1.Event; } });\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return events_1.Emitter; } });\nconst cancellation_1 = require(\"./cancellation\");\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\nconst sharedArrayCancellation_1 = require(\"./sharedArrayCancellation\");\nObject.defineProperty(exports, \"SharedArraySenderStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArraySenderStrategy; } });\nObject.defineProperty(exports, \"SharedArrayReceiverStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArrayReceiverStrategy; } });\nconst messageReader_1 = require(\"./messageReader\");\nObject.defineProperty(exports, \"MessageReader\", { enumerable: true, get: function () { return messageReader_1.MessageReader; } });\nObject.defineProperty(exports, \"AbstractMessageReader\", { enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } });\nObject.defineProperty(exports, \"ReadableStreamMessageReader\", { enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } });\nconst messageWriter_1 = require(\"./messageWriter\");\nObject.defineProperty(exports, \"MessageWriter\", { enumerable: true, get: function () { return messageWriter_1.MessageWriter; } });\nObject.defineProperty(exports, \"AbstractMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } });\nObject.defineProperty(exports, \"WriteableStreamMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } });\nconst messageBuffer_1 = require(\"./messageBuffer\");\nObject.defineProperty(exports, \"AbstractMessageBuffer\", { enumerable: true, get: function () { return messageBuffer_1.AbstractMessageBuffer; } });\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"ConnectionStrategy\", { enumerable: true, get: function () { return connection_1.ConnectionStrategy; } });\nObject.defineProperty(exports, \"ConnectionOptions\", { enumerable: true, get: function () { return connection_1.ConnectionOptions; } });\nObject.defineProperty(exports, \"NullLogger\", { enumerable: true, get: function () { return connection_1.NullLogger; } });\nObject.defineProperty(exports, \"createMessageConnection\", { enumerable: true, get: function () { return connection_1.createMessageConnection; } });\nObject.defineProperty(exports, \"ProgressToken\", { enumerable: true, get: function () { return connection_1.ProgressToken; } });\nObject.defineProperty(exports, \"ProgressType\", { enumerable: true, get: function () { return connection_1.ProgressType; } });\nObject.defineProperty(exports, \"Trace\", { enumerable: true, get: function () { return connection_1.Trace; } });\nObject.defineProperty(exports, \"TraceValues\", { enumerable: true, get: function () { return connection_1.TraceValues; } });\nObject.defineProperty(exports, \"TraceFormat\", { enumerable: true, get: function () { return connection_1.TraceFormat; } });\nObject.defineProperty(exports, \"SetTraceNotification\", { enumerable: true, get: function () { return connection_1.SetTraceNotification; } });\nObject.defineProperty(exports, \"LogTraceNotification\", { enumerable: true, get: function () { return connection_1.LogTraceNotification; } });\nObject.defineProperty(exports, \"ConnectionErrors\", { enumerable: true, get: function () { return connection_1.ConnectionErrors; } });\nObject.defineProperty(exports, \"ConnectionError\", { enumerable: true, get: function () { return connection_1.ConnectionError; } });\nObject.defineProperty(exports, \"CancellationReceiverStrategy\", { enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } });\nObject.defineProperty(exports, \"CancellationSenderStrategy\", { enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } });\nObject.defineProperty(exports, \"CancellationStrategy\", { enumerable: true, get: function () { return connection_1.CancellationStrategy; } });\nObject.defineProperty(exports, \"MessageStrategy\", { enumerable: true, get: function () { return connection_1.MessageStrategy; } });\nconst ral_1 = require(\"./ral\");\nexports.RAL = ral_1.default;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst messages_1 = require(\"./messages\");\nconst linkedMap_1 = require(\"./linkedMap\");\nconst events_1 = require(\"./events\");\nconst cancellation_1 = require(\"./cancellation\");\nvar CancelNotification;\n(function (CancelNotification) {\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\n})(CancelNotification || (CancelNotification = {}));\nvar ProgressToken;\n(function (ProgressToken) {\n    function is(value) {\n        return typeof value === 'string' || typeof value === 'number';\n    }\n    ProgressToken.is = is;\n})(ProgressToken = exports.ProgressToken || (exports.ProgressToken = {}));\nvar ProgressNotification;\n(function (ProgressNotification) {\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\n})(ProgressNotification || (ProgressNotification = {}));\nclass ProgressType {\n    constructor() {\n    }\n}\nexports.ProgressType = ProgressType;\nvar StarRequestHandler;\n(function (StarRequestHandler) {\n    function is(value) {\n        return Is.func(value);\n    }\n    StarRequestHandler.is = is;\n})(StarRequestHandler || (StarRequestHandler = {}));\nexports.NullLogger = Object.freeze({\n    error: () => { },\n    warn: () => { },\n    info: () => { },\n    log: () => { }\n});\nvar Trace;\n(function (Trace) {\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\n    Trace[Trace[\"Compact\"] = 2] = \"Compact\";\n    Trace[Trace[\"Verbose\"] = 3] = \"Verbose\";\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceValues;\n(function (TraceValues) {\n    /**\n     * Turn tracing off.\n     */\n    TraceValues.Off = 'off';\n    /**\n     * Trace messages only.\n     */\n    TraceValues.Messages = 'messages';\n    /**\n     * Compact message tracing.\n     */\n    TraceValues.Compact = 'compact';\n    /**\n     * Verbose message tracing.\n     */\n    TraceValues.Verbose = 'verbose';\n})(TraceValues = exports.TraceValues || (exports.TraceValues = {}));\n(function (Trace) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return Trace.Off;\n        }\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'messages':\n                return Trace.Messages;\n            case 'compact':\n                return Trace.Compact;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n    Trace.fromString = fromString;\n    function toString(value) {\n        switch (value) {\n            case Trace.Off:\n                return 'off';\n            case Trace.Messages:\n                return 'messages';\n            case Trace.Compact:\n                return 'compact';\n            case Trace.Verbose:\n                return 'verbose';\n            default:\n                return 'off';\n        }\n    }\n    Trace.toString = toString;\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceFormat;\n(function (TraceFormat) {\n    TraceFormat[\"Text\"] = \"text\";\n    TraceFormat[\"JSON\"] = \"json\";\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\n(function (TraceFormat) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return TraceFormat.Text;\n        }\n        value = value.toLowerCase();\n        if (value === 'json') {\n            return TraceFormat.JSON;\n        }\n        else {\n            return TraceFormat.Text;\n        }\n    }\n    TraceFormat.fromString = fromString;\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\nvar SetTraceNotification;\n(function (SetTraceNotification) {\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\nvar LogTraceNotification;\n(function (LogTraceNotification) {\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\nvar ConnectionErrors;\n(function (ConnectionErrors) {\n    /**\n     * The connection is closed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\n    /**\n     * The connection got disposed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\n    /**\n     * The connection is already in listening mode.\n     */\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\nclass ConnectionError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ConnectionError.prototype);\n    }\n}\nexports.ConnectionError = ConnectionError;\nvar ConnectionStrategy;\n(function (ConnectionStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.cancelUndispatched);\n    }\n    ConnectionStrategy.is = is;\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\nvar IdCancellationReceiverStrategy;\n(function (IdCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.kind === undefined || candidate.kind === 'id') && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    IdCancellationReceiverStrategy.is = is;\n})(IdCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy || (exports.IdCancellationReceiverStrategy = {}));\nvar RequestCancellationReceiverStrategy;\n(function (RequestCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && candidate.kind === 'request' && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    RequestCancellationReceiverStrategy.is = is;\n})(RequestCancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy || (exports.RequestCancellationReceiverStrategy = {}));\nvar CancellationReceiverStrategy;\n(function (CancellationReceiverStrategy) {\n    CancellationReceiverStrategy.Message = Object.freeze({\n        createCancellationTokenSource(_) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n    });\n    function is(value) {\n        return IdCancellationReceiverStrategy.is(value) || RequestCancellationReceiverStrategy.is(value);\n    }\n    CancellationReceiverStrategy.is = is;\n})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));\nvar CancellationSenderStrategy;\n(function (CancellationSenderStrategy) {\n    CancellationSenderStrategy.Message = Object.freeze({\n        sendCancellation(conn, id) {\n            return conn.sendNotification(CancelNotification.type, { id });\n        },\n        cleanup(_) { }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);\n    }\n    CancellationSenderStrategy.is = is;\n})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));\nvar CancellationStrategy;\n(function (CancellationStrategy) {\n    CancellationStrategy.Message = Object.freeze({\n        receiver: CancellationReceiverStrategy.Message,\n        sender: CancellationSenderStrategy.Message\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);\n    }\n    CancellationStrategy.is = is;\n})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));\nvar MessageStrategy;\n(function (MessageStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.handleMessage);\n    }\n    MessageStrategy.is = is;\n})(MessageStrategy = exports.MessageStrategy || (exports.MessageStrategy = {}));\nvar ConnectionOptions;\n(function (ConnectionOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy) || MessageStrategy.is(candidate.messageStrategy));\n    }\n    ConnectionOptions.is = is;\n})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\n})(ConnectionState || (ConnectionState = {}));\nfunction createMessageConnection(messageReader, messageWriter, _logger, options) {\n    const logger = _logger !== undefined ? _logger : exports.NullLogger;\n    let sequenceNumber = 0;\n    let notificationSequenceNumber = 0;\n    let unknownResponseSequenceNumber = 0;\n    const version = '2.0';\n    let starRequestHandler = undefined;\n    const requestHandlers = new Map();\n    let starNotificationHandler = undefined;\n    const notificationHandlers = new Map();\n    const progressHandlers = new Map();\n    let timer;\n    let messageQueue = new linkedMap_1.LinkedMap();\n    let responsePromises = new Map();\n    let knownCanceledRequests = new Set();\n    let requestTokens = new Map();\n    let trace = Trace.Off;\n    let traceFormat = TraceFormat.Text;\n    let tracer;\n    let state = ConnectionState.New;\n    const errorEmitter = new events_1.Emitter();\n    const closeEmitter = new events_1.Emitter();\n    const unhandledNotificationEmitter = new events_1.Emitter();\n    const unhandledProgressEmitter = new events_1.Emitter();\n    const disposeEmitter = new events_1.Emitter();\n    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;\n    function createRequestQueueKey(id) {\n        if (id === null) {\n            throw new Error(`Can't send requests with id null since the response can't be correlated.`);\n        }\n        return 'req-' + id.toString();\n    }\n    function createResponseQueueKey(id) {\n        if (id === null) {\n            return 'res-unknown-' + (++unknownResponseSequenceNumber).toString();\n        }\n        else {\n            return 'res-' + id.toString();\n        }\n    }\n    function createNotificationQueueKey() {\n        return 'not-' + (++notificationSequenceNumber).toString();\n    }\n    function addMessageToQueue(queue, message) {\n        if (messages_1.Message.isRequest(message)) {\n            queue.set(createRequestQueueKey(message.id), message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            queue.set(createResponseQueueKey(message.id), message);\n        }\n        else {\n            queue.set(createNotificationQueueKey(), message);\n        }\n    }\n    function cancelUndispatched(_message) {\n        return undefined;\n    }\n    function isListening() {\n        return state === ConnectionState.Listening;\n    }\n    function isClosed() {\n        return state === ConnectionState.Closed;\n    }\n    function isDisposed() {\n        return state === ConnectionState.Disposed;\n    }\n    function closeHandler() {\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\n            state = ConnectionState.Closed;\n            closeEmitter.fire(undefined);\n        }\n        // If the connection is disposed don't sent close events.\n    }\n    function readErrorHandler(error) {\n        errorEmitter.fire([error, undefined, undefined]);\n    }\n    function writeErrorHandler(data) {\n        errorEmitter.fire(data);\n    }\n    messageReader.onClose(closeHandler);\n    messageReader.onError(readErrorHandler);\n    messageWriter.onClose(closeHandler);\n    messageWriter.onError(writeErrorHandler);\n    function triggerMessageQueue() {\n        if (timer || messageQueue.size === 0) {\n            return;\n        }\n        timer = (0, ral_1.default)().timer.setImmediate(() => {\n            timer = undefined;\n            processMessageQueue();\n        });\n    }\n    function handleMessage(message) {\n        if (messages_1.Message.isRequest(message)) {\n            handleRequest(message);\n        }\n        else if (messages_1.Message.isNotification(message)) {\n            handleNotification(message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            handleResponse(message);\n        }\n        else {\n            handleInvalidMessage(message);\n        }\n    }\n    function processMessageQueue() {\n        if (messageQueue.size === 0) {\n            return;\n        }\n        const message = messageQueue.shift();\n        try {\n            const messageStrategy = options?.messageStrategy;\n            if (MessageStrategy.is(messageStrategy)) {\n                messageStrategy.handleMessage(message, handleMessage);\n            }\n            else {\n                handleMessage(message);\n            }\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    }\n    const callback = (message) => {\n        try {\n            // We have received a cancellation message. Check if the message is still in the queue\n            // and cancel it if allowed to do so.\n            if (messages_1.Message.isNotification(message) && message.method === CancelNotification.type.method) {\n                const cancelId = message.params.id;\n                const key = createRequestQueueKey(cancelId);\n                const toCancel = messageQueue.get(key);\n                if (messages_1.Message.isRequest(toCancel)) {\n                    const strategy = options?.connectionStrategy;\n                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\n                    if (response && (response.error !== undefined || response.result !== undefined)) {\n                        messageQueue.delete(key);\n                        requestTokens.delete(cancelId);\n                        response.id = toCancel.id;\n                        traceSendingResponse(response, message.method, Date.now());\n                        messageWriter.write(response).catch(() => logger.error(`Sending response for canceled message failed.`));\n                        return;\n                    }\n                }\n                const cancellationToken = requestTokens.get(cancelId);\n                // The request is already running. Cancel the token\n                if (cancellationToken !== undefined) {\n                    cancellationToken.cancel();\n                    traceReceivedNotification(message);\n                    return;\n                }\n                else {\n                    // Remember the cancel but still queue the message to\n                    // clean up state in process message.\n                    knownCanceledRequests.add(cancelId);\n                }\n            }\n            addMessageToQueue(messageQueue, message);\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    };\n    function handleRequest(requestMessage) {\n        if (isDisposed()) {\n            // we return here silently since we fired an event when the\n            // connection got disposed.\n            return;\n        }\n        function reply(resultOrError, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id\n            };\n            if (resultOrError instanceof messages_1.ResponseError) {\n                message.error = resultOrError.toJson();\n            }\n            else {\n                message.result = resultOrError === undefined ? null : resultOrError;\n            }\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replyError(error, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                error: error.toJson()\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replySuccess(result, method, startTime) {\n            // The JSON RPC defines that a response must either have a result or an error\n            // So we can't treat undefined as a valid response result.\n            if (result === undefined) {\n                result = null;\n            }\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                result: result\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        traceReceivedRequest(requestMessage);\n        const element = requestHandlers.get(requestMessage.method);\n        let type;\n        let requestHandler;\n        if (element) {\n            type = element.type;\n            requestHandler = element.handler;\n        }\n        const startTime = Date.now();\n        if (requestHandler || starRequestHandler) {\n            const tokenKey = requestMessage.id ?? String(Date.now()); //\n            const cancellationSource = IdCancellationReceiverStrategy.is(cancellationStrategy.receiver)\n                ? cancellationStrategy.receiver.createCancellationTokenSource(tokenKey)\n                : cancellationStrategy.receiver.createCancellationTokenSource(requestMessage);\n            if (requestMessage.id !== null && knownCanceledRequests.has(requestMessage.id)) {\n                cancellationSource.cancel();\n            }\n            if (requestMessage.id !== null) {\n                requestTokens.set(tokenKey, cancellationSource);\n            }\n            try {\n                let handlerResult;\n                if (requestHandler) {\n                    if (requestMessage.params === undefined) {\n                        if (type !== undefined && type.numberOfParams !== 0) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but received none.`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(cancellationSource.token);\n                    }\n                    else if (Array.isArray(requestMessage.params)) {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);\n                    }\n                }\n                else if (starRequestHandler) {\n                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\n                }\n                const promise = handlerResult;\n                if (!handlerResult) {\n                    requestTokens.delete(tokenKey);\n                    replySuccess(handlerResult, requestMessage.method, startTime);\n                }\n                else if (promise.then) {\n                    promise.then((resultOrError) => {\n                        requestTokens.delete(tokenKey);\n                        reply(resultOrError, requestMessage.method, startTime);\n                    }, error => {\n                        requestTokens.delete(tokenKey);\n                        if (error instanceof messages_1.ResponseError) {\n                            replyError(error, requestMessage.method, startTime);\n                        }\n                        else if (error && Is.string(error.message)) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                        }\n                        else {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                        }\n                    });\n                }\n                else {\n                    requestTokens.delete(tokenKey);\n                    reply(handlerResult, requestMessage.method, startTime);\n                }\n            }\n            catch (error) {\n                requestTokens.delete(tokenKey);\n                if (error instanceof messages_1.ResponseError) {\n                    reply(error, requestMessage.method, startTime);\n                }\n                else if (error && Is.string(error.message)) {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                }\n                else {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                }\n            }\n        }\n        else {\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\n        }\n    }\n    function handleResponse(responseMessage) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        if (responseMessage.id === null) {\n            if (responseMessage.error) {\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\n            }\n            else {\n                logger.error(`Received response message without id. No further error information provided.`);\n            }\n        }\n        else {\n            const key = responseMessage.id;\n            const responsePromise = responsePromises.get(key);\n            traceReceivedResponse(responseMessage, responsePromise);\n            if (responsePromise !== undefined) {\n                responsePromises.delete(key);\n                try {\n                    if (responseMessage.error) {\n                        const error = responseMessage.error;\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\n                    }\n                    else if (responseMessage.result !== undefined) {\n                        responsePromise.resolve(responseMessage.result);\n                    }\n                    else {\n                        throw new Error('Should never happen.');\n                    }\n                }\n                catch (error) {\n                    if (error.message) {\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\n                    }\n                    else {\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\n                    }\n                }\n            }\n        }\n    }\n    function handleNotification(message) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        let type = undefined;\n        let notificationHandler;\n        if (message.method === CancelNotification.type.method) {\n            const cancelId = message.params.id;\n            knownCanceledRequests.delete(cancelId);\n            traceReceivedNotification(message);\n            return;\n        }\n        else {\n            const element = notificationHandlers.get(message.method);\n            if (element) {\n                notificationHandler = element.handler;\n                type = element.type;\n            }\n        }\n        if (notificationHandler || starNotificationHandler) {\n            try {\n                traceReceivedNotification(message);\n                if (notificationHandler) {\n                    if (message.params === undefined) {\n                        if (type !== undefined) {\n                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received none.`);\n                            }\n                        }\n                        notificationHandler();\n                    }\n                    else if (Array.isArray(message.params)) {\n                        // There are JSON-RPC libraries that send progress message as positional params although\n                        // specified as named. So convert them if this is the case.\n                        const params = message.params;\n                        if (message.method === ProgressNotification.type.method && params.length === 2 && ProgressToken.is(params[0])) {\n                            notificationHandler({ token: params[0], value: params[1] });\n                        }\n                        else {\n                            if (type !== undefined) {\n                                if (type.parameterStructures === messages_1.ParameterStructures.byName) {\n                                    logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);\n                                }\n                                if (type.numberOfParams !== message.params.length) {\n                                    logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${params.length} arguments`);\n                                }\n                            }\n                            notificationHandler(...params);\n                        }\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);\n                        }\n                        notificationHandler(message.params);\n                    }\n                }\n                else if (starNotificationHandler) {\n                    starNotificationHandler(message.method, message.params);\n                }\n            }\n            catch (error) {\n                if (error.message) {\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\n                }\n                else {\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\n                }\n            }\n        }\n        else {\n            unhandledNotificationEmitter.fire(message);\n        }\n    }\n    function handleInvalidMessage(message) {\n        if (!message) {\n            logger.error('Received empty message.');\n            return;\n        }\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\n        // Test whether we find an id to reject the promise\n        const responseMessage = message;\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\n            const key = responseMessage.id;\n            const responseHandler = responsePromises.get(key);\n            if (responseHandler) {\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\n            }\n        }\n    }\n    function stringifyTrace(params) {\n        if (params === undefined || params === null) {\n            return undefined;\n        }\n        switch (trace) {\n            case Trace.Verbose:\n                return JSON.stringify(params, null, 4);\n            case Trace.Compact:\n                return JSON.stringify(params);\n            default:\n                return undefined;\n        }\n    }\n    function traceSendingRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('send-request', message);\n        }\n    }\n    function traceSendingNotification(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Sending notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('send-notification', message);\n        }\n    }\n    function traceSendingResponse(message, method, startTime) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\n        }\n        else {\n            logLSPMessage('send-response', message);\n        }\n    }\n    function traceReceivedRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('receive-request', message);\n        }\n    }\n    function traceReceivedNotification(message) {\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Received notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('receive-notification', message);\n        }\n    }\n    function traceReceivedResponse(message, responsePromise) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            if (responsePromise) {\n                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\n            }\n            else {\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\n            }\n        }\n        else {\n            logLSPMessage('receive-response', message);\n        }\n    }\n    function logLSPMessage(type, message) {\n        if (!tracer || trace === Trace.Off) {\n            return;\n        }\n        const lspMessage = {\n            isLSPMessage: true,\n            type,\n            message,\n            timestamp: Date.now()\n        };\n        tracer.log(lspMessage);\n    }\n    function throwIfClosedOrDisposed() {\n        if (isClosed()) {\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\n        }\n        if (isDisposed()) {\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\n        }\n    }\n    function throwIfListening() {\n        if (isListening()) {\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\n        }\n    }\n    function throwIfNotListening() {\n        if (!isListening()) {\n            throw new Error('Call listen() first.');\n        }\n    }\n    function undefinedToNull(param) {\n        if (param === undefined) {\n            return null;\n        }\n        else {\n            return param;\n        }\n    }\n    function nullToUndefined(param) {\n        if (param === null) {\n            return undefined;\n        }\n        else {\n            return param;\n        }\n    }\n    function isNamedParam(param) {\n        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';\n    }\n    function computeSingleParam(parameterStructures, param) {\n        switch (parameterStructures) {\n            case messages_1.ParameterStructures.auto:\n                if (isNamedParam(param)) {\n                    return nullToUndefined(param);\n                }\n                else {\n                    return [undefinedToNull(param)];\n                }\n            case messages_1.ParameterStructures.byName:\n                if (!isNamedParam(param)) {\n                    throw new Error(`Received parameters by name but param is not an object literal.`);\n                }\n                return nullToUndefined(param);\n            case messages_1.ParameterStructures.byPosition:\n                return [undefinedToNull(param)];\n            default:\n                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);\n        }\n    }\n    function computeMessageParams(type, params) {\n        let result;\n        const numberOfParams = type.numberOfParams;\n        switch (numberOfParams) {\n            case 0:\n                result = undefined;\n                break;\n            case 1:\n                result = computeSingleParam(type.parameterStructures, params[0]);\n                break;\n            default:\n                result = [];\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\n                    result.push(undefinedToNull(params[i]));\n                }\n                if (params.length < numberOfParams) {\n                    for (let i = params.length; i < numberOfParams; i++) {\n                        result.push(null);\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    const connection = {\n        sendNotification: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            let method;\n            let messageParams;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' notification parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n            }\n            const notificationMessage = {\n                jsonrpc: version,\n                method: method,\n                params: messageParams\n            };\n            traceSendingNotification(notificationMessage);\n            return messageWriter.write(notificationMessage).catch((error) => {\n                logger.error(`Sending notification failed.`);\n                throw error;\n            });\n        },\n        onNotification: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method;\n            if (Is.func(type)) {\n                starNotificationHandler = type;\n            }\n            else if (handler) {\n                if (Is.string(type)) {\n                    method = type;\n                    notificationHandlers.set(type, { type: undefined, handler });\n                }\n                else {\n                    method = type.method;\n                    notificationHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method !== undefined) {\n                        notificationHandlers.delete(method);\n                    }\n                    else {\n                        starNotificationHandler = undefined;\n                    }\n                }\n            };\n        },\n        onProgress: (_type, token, handler) => {\n            if (progressHandlers.has(token)) {\n                throw new Error(`Progress handler for token ${token} already registered`);\n            }\n            progressHandlers.set(token, handler);\n            return {\n                dispose: () => {\n                    progressHandlers.delete(token);\n                }\n            };\n        },\n        sendProgress: (_type, token, value) => {\n            // This should not await but simple return to ensure that we don't have another\n            // async scheduling. Otherwise one send could overtake another send.\n            return connection.sendNotification(ProgressNotification.type, { token, value });\n        },\n        onUnhandledProgress: unhandledProgressEmitter.event,\n        sendRequest: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            throwIfNotListening();\n            let method;\n            let messageParams;\n            let token = undefined;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                const last = args[args.length - 1];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                if (cancellation_1.CancellationToken.is(last)) {\n                    paramEnd = paramEnd - 1;\n                    token = last;\n                }\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' request parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n                const numberOfParams = type.numberOfParams;\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\n            }\n            const id = sequenceNumber++;\n            let disposable;\n            if (token) {\n                disposable = token.onCancellationRequested(() => {\n                    const p = cancellationStrategy.sender.sendCancellation(connection, id);\n                    if (p === undefined) {\n                        logger.log(`Received no promise from cancellation strategy when cancelling id ${id}`);\n                        return Promise.resolve();\n                    }\n                    else {\n                        return p.catch(() => {\n                            logger.log(`Sending cancellation messages for id ${id} failed`);\n                        });\n                    }\n                });\n            }\n            const requestMessage = {\n                jsonrpc: version,\n                id: id,\n                method: method,\n                params: messageParams\n            };\n            traceSendingRequest(requestMessage);\n            if (typeof cancellationStrategy.sender.enableCancellation === 'function') {\n                cancellationStrategy.sender.enableCancellation(requestMessage);\n            }\n            return new Promise(async (resolve, reject) => {\n                const resolveWithCleanup = (r) => {\n                    resolve(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const rejectWithCleanup = (r) => {\n                    reject(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };\n                try {\n                    await messageWriter.write(requestMessage);\n                    responsePromises.set(id, responsePromise);\n                }\n                catch (error) {\n                    logger.error(`Sending request failed.`);\n                    // Writing the message failed. So we need to reject the promise.\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, error.message ? error.message : 'Unknown reason'));\n                    throw error;\n                }\n            });\n        },\n        onRequest: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method = null;\n            if (StarRequestHandler.is(type)) {\n                method = undefined;\n                starRequestHandler = type;\n            }\n            else if (Is.string(type)) {\n                method = null;\n                if (handler !== undefined) {\n                    method = type;\n                    requestHandlers.set(type, { handler: handler, type: undefined });\n                }\n            }\n            else {\n                if (handler !== undefined) {\n                    method = type.method;\n                    requestHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method === null) {\n                        return;\n                    }\n                    if (method !== undefined) {\n                        requestHandlers.delete(method);\n                    }\n                    else {\n                        starRequestHandler = undefined;\n                    }\n                }\n            };\n        },\n        hasPendingResponse: () => {\n            return responsePromises.size > 0;\n        },\n        trace: async (_value, _tracer, sendNotificationOrTraceOptions) => {\n            let _sendNotification = false;\n            let _traceFormat = TraceFormat.Text;\n            if (sendNotificationOrTraceOptions !== undefined) {\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\n                    _sendNotification = sendNotificationOrTraceOptions;\n                }\n                else {\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\n                }\n            }\n            trace = _value;\n            traceFormat = _traceFormat;\n            if (trace === Trace.Off) {\n                tracer = undefined;\n            }\n            else {\n                tracer = _tracer;\n            }\n            if (_sendNotification && !isClosed() && !isDisposed()) {\n                await connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\n            }\n        },\n        onError: errorEmitter.event,\n        onClose: closeEmitter.event,\n        onUnhandledNotification: unhandledNotificationEmitter.event,\n        onDispose: disposeEmitter.event,\n        end: () => {\n            messageWriter.end();\n        },\n        dispose: () => {\n            if (isDisposed()) {\n                return;\n            }\n            state = ConnectionState.Disposed;\n            disposeEmitter.fire(undefined);\n            const error = new messages_1.ResponseError(messages_1.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');\n            for (const promise of responsePromises.values()) {\n                promise.reject(error);\n            }\n            responsePromises = new Map();\n            requestTokens = new Map();\n            knownCanceledRequests = new Set();\n            messageQueue = new linkedMap_1.LinkedMap();\n            // Test for backwards compatibility\n            if (Is.func(messageWriter.dispose)) {\n                messageWriter.dispose();\n            }\n            if (Is.func(messageReader.dispose)) {\n                messageReader.dispose();\n            }\n        },\n        listen: () => {\n            throwIfClosedOrDisposed();\n            throwIfListening();\n            state = ConnectionState.Listening;\n            messageReader.listen(callback);\n        },\n        inspect: () => {\n            // eslint-disable-next-line no-console\n            (0, ral_1.default)().console.log('inspect');\n        }\n    };\n    connection.onNotification(LogTraceNotification.type, (params) => {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        const verbose = trace === Trace.Verbose || trace === Trace.Compact;\n        tracer.log(params.message, verbose ? params.verbose : undefined);\n    });\n    connection.onNotification(ProgressNotification.type, (params) => {\n        const handler = progressHandlers.get(params.token);\n        if (handler) {\n            handler(params.value);\n        }\n        else {\n            unhandledProgressEmitter.fire(params);\n        }\n    });\n    return connection;\n}\nexports.createMessageConnection = createMessageConnection;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Disposable = void 0;\nvar Disposable;\n(function (Disposable) {\n    function create(func) {\n        return {\n            dispose: func\n        };\n    }\n    Disposable.create = create;\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event = exports.Event || (exports.Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.LinkedMap = exports.Touch = void 0;\nvar Touch;\n(function (Touch) {\n    Touch.None = 0;\n    Touch.First = 1;\n    Touch.AsOld = Touch.First;\n    Touch.Last = 2;\n    Touch.AsNew = Touch.Last;\n})(Touch = exports.Touch || (exports.Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[_a] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.First:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.Last:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\n            return;\n        }\n        if (touch === Touch.First) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.Last) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexports.LinkedMap = LinkedMap;\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.Last);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageBuffer = void 0;\nconst CR = 13;\nconst LF = 10;\nconst CRLF = '\\r\\n';\nclass AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        this._encoding = encoding;\n        this._chunks = [];\n        this._totalLength = 0;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    append(chunk) {\n        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;\n        this._chunks.push(toAppend);\n        this._totalLength += toAppend.byteLength;\n    }\n    tryReadHeaders(lowerCaseKeys = false) {\n        if (this._chunks.length === 0) {\n            return undefined;\n        }\n        let state = 0;\n        let chunkIndex = 0;\n        let offset = 0;\n        let chunkBytesRead = 0;\n        row: while (chunkIndex < this._chunks.length) {\n            const chunk = this._chunks[chunkIndex];\n            offset = 0;\n            column: while (offset < chunk.length) {\n                const value = chunk[offset];\n                switch (value) {\n                    case CR:\n                        switch (state) {\n                            case 0:\n                                state = 1;\n                                break;\n                            case 2:\n                                state = 3;\n                                break;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    case LF:\n                        switch (state) {\n                            case 1:\n                                state = 2;\n                                break;\n                            case 3:\n                                state = 4;\n                                offset++;\n                                break row;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    default:\n                        state = 0;\n                }\n                offset++;\n            }\n            chunkBytesRead += chunk.byteLength;\n            chunkIndex++;\n        }\n        if (state !== 4) {\n            return undefined;\n        }\n        // The buffer contains the two CRLF at the end. So we will\n        // have two empty lines after the split at the end as well.\n        const buffer = this._read(chunkBytesRead + offset);\n        const result = new Map();\n        const headers = this.toString(buffer, 'ascii').split(CRLF);\n        if (headers.length < 2) {\n            return result;\n        }\n        for (let i = 0; i < headers.length - 2; i++) {\n            const header = headers[i];\n            const index = header.indexOf(':');\n            if (index === -1) {\n                throw new Error('Message header must separate key and value using :');\n            }\n            const key = header.substr(0, index);\n            const value = header.substr(index + 1).trim();\n            result.set(lowerCaseKeys ? key.toLowerCase() : key, value);\n        }\n        return result;\n    }\n    tryReadBody(length) {\n        if (this._totalLength < length) {\n            return undefined;\n        }\n        return this._read(length);\n    }\n    get numberOfBytes() {\n        return this._totalLength;\n    }\n    _read(byteCount) {\n        if (byteCount === 0) {\n            return this.emptyBuffer();\n        }\n        if (byteCount > this._totalLength) {\n            throw new Error(`Cannot read so many bytes!`);\n        }\n        if (this._chunks[0].byteLength === byteCount) {\n            // super fast path, precisely first chunk must be returned\n            const chunk = this._chunks[0];\n            this._chunks.shift();\n            this._totalLength -= byteCount;\n            return this.asNative(chunk);\n        }\n        if (this._chunks[0].byteLength > byteCount) {\n            // fast path, the reading is entirely within the first chunk\n            const chunk = this._chunks[0];\n            const result = this.asNative(chunk, byteCount);\n            this._chunks[0] = chunk.slice(byteCount);\n            this._totalLength -= byteCount;\n            return result;\n        }\n        const result = this.allocNative(byteCount);\n        let resultOffset = 0;\n        let chunkIndex = 0;\n        while (byteCount > 0) {\n            const chunk = this._chunks[chunkIndex];\n            if (chunk.byteLength > byteCount) {\n                // this chunk will survive\n                const chunkPart = chunk.slice(0, byteCount);\n                result.set(chunkPart, resultOffset);\n                resultOffset += byteCount;\n                this._chunks[chunkIndex] = chunk.slice(byteCount);\n                this._totalLength -= byteCount;\n                byteCount -= byteCount;\n            }\n            else {\n                // this chunk will be entirely read\n                result.set(chunk, resultOffset);\n                resultOffset += chunk.byteLength;\n                this._chunks.shift();\n                this._totalLength -= chunk.byteLength;\n                byteCount -= chunk.byteLength;\n            }\n        }\n        return result;\n    }\n}\nexports.AbstractMessageBuffer = AbstractMessageBuffer;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nconst semaphore_1 = require(\"./semaphore\");\nvar MessageReader;\n(function (MessageReader) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\n    }\n    MessageReader.is = is;\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\nclass AbstractMessageReader {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n        this.partialMessageEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error) {\n        this.errorEmitter.fire(this.asError(error));\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    get onPartialMessage() {\n        return this.partialMessageEmitter.event;\n    }\n    firePartialMessage(info) {\n        this.partialMessageEmitter.fire(info);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageReader = AbstractMessageReader;\nvar ResolvedMessageReaderOptions;\n(function (ResolvedMessageReaderOptions) {\n    function fromOptions(options) {\n        let charset;\n        let result;\n        let contentDecoder;\n        const contentDecoders = new Map();\n        let contentTypeDecoder;\n        const contentTypeDecoders = new Map();\n        if (options === undefined || typeof options === 'string') {\n            charset = options ?? 'utf-8';\n        }\n        else {\n            charset = options.charset ?? 'utf-8';\n            if (options.contentDecoder !== undefined) {\n                contentDecoder = options.contentDecoder;\n                contentDecoders.set(contentDecoder.name, contentDecoder);\n            }\n            if (options.contentDecoders !== undefined) {\n                for (const decoder of options.contentDecoders) {\n                    contentDecoders.set(decoder.name, decoder);\n                }\n            }\n            if (options.contentTypeDecoder !== undefined) {\n                contentTypeDecoder = options.contentTypeDecoder;\n                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n            }\n            if (options.contentTypeDecoders !== undefined) {\n                for (const decoder of options.contentTypeDecoders) {\n                    contentTypeDecoders.set(decoder.name, decoder);\n                }\n            }\n        }\n        if (contentTypeDecoder === undefined) {\n            contentTypeDecoder = (0, ral_1.default)().applicationJson.decoder;\n            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n        }\n        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };\n    }\n    ResolvedMessageReaderOptions.fromOptions = fromOptions;\n})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));\nclass ReadableStreamMessageReader extends AbstractMessageReader {\n    constructor(readable, options) {\n        super();\n        this.readable = readable;\n        this.options = ResolvedMessageReaderOptions.fromOptions(options);\n        this.buffer = (0, ral_1.default)().messageBuffer.create(this.options.charset);\n        this._partialMessageTimeout = 10000;\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.readSemaphore = new semaphore_1.Semaphore(1);\n    }\n    set partialMessageTimeout(timeout) {\n        this._partialMessageTimeout = timeout;\n    }\n    get partialMessageTimeout() {\n        return this._partialMessageTimeout;\n    }\n    listen(callback) {\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.partialMessageTimer = undefined;\n        this.callback = callback;\n        const result = this.readable.onData((data) => {\n            this.onData(data);\n        });\n        this.readable.onError((error) => this.fireError(error));\n        this.readable.onClose(() => this.fireClose());\n        return result;\n    }\n    onData(data) {\n        this.buffer.append(data);\n        while (true) {\n            if (this.nextMessageLength === -1) {\n                const headers = this.buffer.tryReadHeaders(true);\n                if (!headers) {\n                    return;\n                }\n                const contentLength = headers.get('content-length');\n                if (!contentLength) {\n                    this.fireError(new Error('Header must provide a Content-Length property.'));\n                    return;\n                }\n                const length = parseInt(contentLength);\n                if (isNaN(length)) {\n                    this.fireError(new Error('Content-Length value must be a number.'));\n                    return;\n                }\n                this.nextMessageLength = length;\n            }\n            const body = this.buffer.tryReadBody(this.nextMessageLength);\n            if (body === undefined) {\n                /** We haven't received the full message yet. */\n                this.setPartialMessageTimer();\n                return;\n            }\n            this.clearPartialMessageTimer();\n            this.nextMessageLength = -1;\n            // Make sure that we convert one received message after the\n            // other. Otherwise it could happen that a decoding of a second\n            // smaller message finished before the decoding of a first larger\n            // message and then we would deliver the second message first.\n            this.readSemaphore.lock(async () => {\n                const bytes = this.options.contentDecoder !== undefined\n                    ? await this.options.contentDecoder.decode(body)\n                    : body;\n                const message = await this.options.contentTypeDecoder.decode(bytes, this.options);\n                this.callback(message);\n            }).catch((error) => {\n                this.fireError(error);\n            });\n        }\n    }\n    clearPartialMessageTimer() {\n        if (this.partialMessageTimer) {\n            this.partialMessageTimer.dispose();\n            this.partialMessageTimer = undefined;\n        }\n    }\n    setPartialMessageTimer() {\n        this.clearPartialMessageTimer();\n        if (this._partialMessageTimeout <= 0) {\n            return;\n        }\n        this.partialMessageTimer = (0, ral_1.default)().timer.setTimeout((token, timeout) => {\n            this.partialMessageTimer = undefined;\n            if (token === this.messageToken) {\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\n                this.setPartialMessageTimer();\n            }\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\n    }\n}\nexports.ReadableStreamMessageReader = ReadableStreamMessageReader;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };\n        }\n        else {\n            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;\nconst is = require(\"./is\");\n/**\n * Predefined error codes.\n */\nvar ErrorCodes;\n(function (ErrorCodes) {\n    // Defined by JSON RPC\n    ErrorCodes.ParseError = -32700;\n    ErrorCodes.InvalidRequest = -32600;\n    ErrorCodes.MethodNotFound = -32601;\n    ErrorCodes.InvalidParams = -32602;\n    ErrorCodes.InternalError = -32603;\n    /**\n     * This is the start range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code. No application error codes should\n     * be defined between the start and end range. For backwards\n     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`\n     * are left in the range.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;\n    /** @deprecated use  jsonrpcReservedErrorRangeStart */\n    ErrorCodes.serverErrorStart = -32099;\n    /**\n     * An error occurred when write a message to the transport layer.\n     */\n    ErrorCodes.MessageWriteError = -32099;\n    /**\n     * An error occurred when reading a message from the transport layer.\n     */\n    ErrorCodes.MessageReadError = -32098;\n    /**\n     * The connection got disposed or lost and all pending responses got\n     * rejected.\n     */\n    ErrorCodes.PendingResponseRejected = -32097;\n    /**\n     * The connection is inactive and a use of it failed.\n     */\n    ErrorCodes.ConnectionInactive = -32096;\n    /**\n     * Error code indicating that a server received a notification or\n     * request before the server has received the `initialize` request.\n     */\n    ErrorCodes.ServerNotInitialized = -32002;\n    ErrorCodes.UnknownErrorCode = -32001;\n    /**\n     * This is the end range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;\n    /** @deprecated use  jsonrpcReservedErrorRangeEnd */\n    ErrorCodes.serverErrorEnd = -32000;\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\n/**\n * An error object return in a response in case a request\n * has failed.\n */\nclass ResponseError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\n        this.data = data;\n        Object.setPrototypeOf(this, ResponseError.prototype);\n    }\n    toJson() {\n        const result = {\n            code: this.code,\n            message: this.message\n        };\n        if (this.data !== undefined) {\n            result.data = this.data;\n        }\n        return result;\n    }\n}\nexports.ResponseError = ResponseError;\nclass ParameterStructures {\n    constructor(kind) {\n        this.kind = kind;\n    }\n    static is(value) {\n        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;\n    }\n    toString() {\n        return this.kind;\n    }\n}\nexports.ParameterStructures = ParameterStructures;\n/**\n * The parameter structure is automatically inferred on the number of parameters\n * and the parameter type in case of a single param.\n */\nParameterStructures.auto = new ParameterStructures('auto');\n/**\n * Forces `byPosition` parameter structure. This is useful if you have a single\n * parameter which has a literal type.\n */\nParameterStructures.byPosition = new ParameterStructures('byPosition');\n/**\n * Forces `byName` parameter structure. This is only useful when having a single\n * parameter. The library will report errors if used with a different number of\n * parameters.\n */\nParameterStructures.byName = new ParameterStructures('byName');\n/**\n * An abstract implementation of a MessageType.\n */\nclass AbstractMessageSignature {\n    constructor(method, numberOfParams) {\n        this.method = method;\n        this.numberOfParams = numberOfParams;\n    }\n    get parameterStructures() {\n        return ParameterStructures.auto;\n    }\n}\nexports.AbstractMessageSignature = AbstractMessageSignature;\n/**\n * Classes to type request response pairs\n */\nclass RequestType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.RequestType0 = RequestType0;\nclass RequestType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType = RequestType;\nclass RequestType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType1 = RequestType1;\nclass RequestType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.RequestType2 = RequestType2;\nclass RequestType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.RequestType3 = RequestType3;\nclass RequestType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.RequestType4 = RequestType4;\nclass RequestType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.RequestType5 = RequestType5;\nclass RequestType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.RequestType6 = RequestType6;\nclass RequestType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.RequestType7 = RequestType7;\nclass RequestType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.RequestType8 = RequestType8;\nclass RequestType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.RequestType9 = RequestType9;\nclass NotificationType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType = NotificationType;\nclass NotificationType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.NotificationType0 = NotificationType0;\nclass NotificationType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType1 = NotificationType1;\nclass NotificationType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.NotificationType2 = NotificationType2;\nclass NotificationType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.NotificationType3 = NotificationType3;\nclass NotificationType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.NotificationType4 = NotificationType4;\nclass NotificationType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.NotificationType5 = NotificationType5;\nclass NotificationType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.NotificationType6 = NotificationType6;\nclass NotificationType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.NotificationType7 = NotificationType7;\nclass NotificationType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.NotificationType8 = NotificationType8;\nclass NotificationType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.NotificationType9 = NotificationType9;\nvar Message;\n(function (Message) {\n    /**\n     * Tests if the given message is a request message\n     */\n    function isRequest(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\n    }\n    Message.isRequest = isRequest;\n    /**\n     * Tests if the given message is a notification message\n     */\n    function isNotification(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && message.id === void 0;\n    }\n    Message.isNotification = isNotification;\n    /**\n     * Tests if the given message is a response message\n     */\n    function isResponse(message) {\n        const candidate = message;\n        return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\n    }\n    Message.isResponse = isResponse;\n})(Message = exports.Message || (exports.Message = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = require(\"./ral\");\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = void 0;\nconst cancellation_1 = require(\"./cancellation\");\nvar CancellationState;\n(function (CancellationState) {\n    CancellationState.Continue = 0;\n    CancellationState.Cancelled = 1;\n})(CancellationState || (CancellationState = {}));\nclass SharedArraySenderStrategy {\n    constructor() {\n        this.buffers = new Map();\n    }\n    enableCancellation(request) {\n        if (request.id === null) {\n            return;\n        }\n        const buffer = new SharedArrayBuffer(4);\n        const data = new Int32Array(buffer, 0, 1);\n        data[0] = CancellationState.Continue;\n        this.buffers.set(request.id, buffer);\n        request.$cancellationData = buffer;\n    }\n    async sendCancellation(_conn, id) {\n        const buffer = this.buffers.get(id);\n        if (buffer === undefined) {\n            return;\n        }\n        const data = new Int32Array(buffer, 0, 1);\n        Atomics.store(data, 0, CancellationState.Cancelled);\n    }\n    cleanup(id) {\n        this.buffers.delete(id);\n    }\n    dispose() {\n        this.buffers.clear();\n    }\n}\nexports.SharedArraySenderStrategy = SharedArraySenderStrategy;\nclass SharedArrayBufferCancellationToken {\n    constructor(buffer) {\n        this.data = new Int32Array(buffer, 0, 1);\n    }\n    get isCancellationRequested() {\n        return Atomics.load(this.data, 0) === CancellationState.Cancelled;\n    }\n    get onCancellationRequested() {\n        throw new Error(`Cancellation over SharedArrayBuffer doesn't support cancellation events`);\n    }\n}\nclass SharedArrayBufferCancellationTokenSource {\n    constructor(buffer) {\n        this.token = new SharedArrayBufferCancellationToken(buffer);\n    }\n    cancel() {\n    }\n    dispose() {\n    }\n}\nclass SharedArrayReceiverStrategy {\n    constructor() {\n        this.kind = 'request';\n    }\n    createCancellationTokenSource(request) {\n        const buffer = request.$cancellationData;\n        if (buffer === undefined) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n        return new SharedArrayBufferCancellationTokenSource(buffer);\n    }\n}\nexports.SharedArrayReceiverStrategy = SharedArrayReceiverStrategy;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.PortMessageWriter = exports.PortMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = void 0;\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\nconst ril_1 = require(\"./ril\");\n// Install the node runtime abstract.\nril_1.default.install();\nconst path = require(\"path\");\nconst os = require(\"os\");\nconst crypto_1 = require(\"crypto\");\nconst net_1 = require(\"net\");\nconst api_1 = require(\"../common/api\");\n__exportStar(require(\"../common/api\"), exports);\nclass IPCMessageReader extends api_1.AbstractMessageReader {\n    constructor(process) {\n        super();\n        this.process = process;\n        let eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose());\n    }\n    listen(callback) {\n        this.process.on('message', callback);\n        return api_1.Disposable.create(() => this.process.off('message', callback));\n    }\n}\nexports.IPCMessageReader = IPCMessageReader;\nclass IPCMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(process) {\n        super();\n        this.process = process;\n        this.errorCount = 0;\n        const eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose);\n    }\n    write(msg) {\n        try {\n            if (typeof this.process.send === 'function') {\n                this.process.send(msg, undefined, undefined, (error) => {\n                    if (error) {\n                        this.errorCount++;\n                        this.handleError(error, msg);\n                    }\n                    else {\n                        this.errorCount = 0;\n                    }\n                });\n            }\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.IPCMessageWriter = IPCMessageWriter;\nclass PortMessageReader extends api_1.AbstractMessageReader {\n    constructor(port) {\n        super();\n        this.onData = new api_1.Emitter;\n        port.on('close', () => this.fireClose);\n        port.on('error', (error) => this.fireError(error));\n        port.on('message', (message) => {\n            this.onData.fire(message);\n        });\n    }\n    listen(callback) {\n        return this.onData.event(callback);\n    }\n}\nexports.PortMessageReader = PortMessageReader;\nclass PortMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(port) {\n        super();\n        this.port = port;\n        this.errorCount = 0;\n        port.on('close', () => this.fireClose());\n        port.on('error', (error) => this.fireError(error));\n    }\n    write(msg) {\n        try {\n            this.port.postMessage(msg);\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.PortMessageWriter = PortMessageWriter;\nclass SocketMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(socket, encoding = 'utf-8') {\n        super((0, ril_1.default)().stream.asReadableStream(socket), encoding);\n    }\n}\nexports.SocketMessageReader = SocketMessageReader;\nclass SocketMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(socket, options) {\n        super((0, ril_1.default)().stream.asWritableStream(socket), options);\n        this.socket = socket;\n    }\n    dispose() {\n        super.dispose();\n        this.socket.destroy();\n    }\n}\nexports.SocketMessageWriter = SocketMessageWriter;\nclass StreamMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(readable, encoding) {\n        super((0, ril_1.default)().stream.asReadableStream(readable), encoding);\n    }\n}\nexports.StreamMessageReader = StreamMessageReader;\nclass StreamMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(writable, options) {\n        super((0, ril_1.default)().stream.asWritableStream(writable), options);\n    }\n}\nexports.StreamMessageWriter = StreamMessageWriter;\nconst XDG_RUNTIME_DIR = process.env['XDG_RUNTIME_DIR'];\nconst safeIpcPathLengths = new Map([\n    ['linux', 107],\n    ['darwin', 103]\n]);\nfunction generateRandomPipeName() {\n    const randomSuffix = (0, crypto_1.randomBytes)(21).toString('hex');\n    if (process.platform === 'win32') {\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\n    }\n    let result;\n    if (XDG_RUNTIME_DIR) {\n        result = path.join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n    }\n    else {\n        result = path.join(os.tmpdir(), `vscode-${randomSuffix}.sock`);\n    }\n    const limit = safeIpcPathLengths.get(process.platform);\n    if (limit !== undefined && result.length > limit) {\n        (0, ril_1.default)().console.warn(`WARNING: IPC handle \"${result}\" is longer than ${limit} characters.`);\n    }\n    return result;\n}\nexports.generateRandomPipeName = generateRandomPipeName;\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        let server = (0, net_1.createServer)((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(pipeName, () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientPipeTransport = createClientPipeTransport;\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\n    const socket = (0, net_1.createConnection)(pipeName);\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerPipeTransport = createServerPipeTransport;\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        const server = (0, net_1.createServer)((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(port, '127.0.0.1', () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientSocketTransport = createClientSocketTransport;\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\n    const socket = (0, net_1.createConnection)(port, '127.0.0.1');\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerSocketTransport = createServerSocketTransport;\nfunction isReadableStream(value) {\n    const candidate = value;\n    return candidate.read !== undefined && candidate.addListener !== undefined;\n}\nfunction isWritableStream(value) {\n    const candidate = value;\n    return candidate.write !== undefined && candidate.addListener !== undefined;\n}\nfunction createMessageConnection(input, output, logger, options) {\n    if (!logger) {\n        logger = api_1.NullLogger;\n    }\n    const reader = isReadableStream(input) ? new StreamMessageReader(input) : input;\n    const writer = isWritableStream(output) ? new StreamMessageWriter(output) : output;\n    if (api_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return (0, api_1.createMessageConnection)(reader, writer, logger, options);\n}\nexports.createMessageConnection = createMessageConnection;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"util\");\nconst api_1 = require(\"../common/api\");\nclass MessageBuffer extends api_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, encoding) {\n        return Buffer.from(value, encoding);\n    }\n    toString(value, encoding) {\n        if (value instanceof Buffer) {\n            return value.toString(encoding);\n        }\n        else {\n            return new util_1.TextDecoder(encoding).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer instanceof Buffer ? buffer : Buffer.from(buffer);\n        }\n        else {\n            return buffer instanceof Buffer ? buffer.slice(0, length) : Buffer.from(buffer, 0, length);\n        }\n    }\n    allocNative(length) {\n        return Buffer.allocUnsafe(length);\n    }\n}\nMessageBuffer.emptyBuffer = Buffer.allocUnsafe(0);\nclass ReadableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return api_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return api_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return api_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    onData(listener) {\n        this.stream.on('data', listener);\n        return api_1.Disposable.create(() => this.stream.off('data', listener));\n    }\n}\nclass WritableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return api_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return api_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return api_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    write(data, encoding) {\n        return new Promise((resolve, reject) => {\n            const callback = (error) => {\n                if (error === undefined || error === null) {\n                    resolve();\n                }\n                else {\n                    reject(error);\n                }\n            };\n            if (typeof data === 'string') {\n                this.stream.write(data, encoding, callback);\n            }\n            else {\n                this.stream.write(data, callback);\n            }\n        });\n    }\n    end() {\n        this.stream.end();\n    }\n}\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                try {\n                    return Promise.resolve(Buffer.from(JSON.stringify(msg, undefined, 0), options.charset));\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                try {\n                    if (buffer instanceof Buffer) {\n                        return Promise.resolve(JSON.parse(buffer.toString(options.charset)));\n                    }\n                    else {\n                        return Promise.resolve(JSON.parse(new util_1.TextDecoder(options.charset).decode(buffer)));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (stream) => new ReadableStreamWrapper(stream),\n        asWritableStream: (stream) => new WritableStreamWrapper(stream)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            const handle = setTimeout(callback, ms, ...args);\n            return { dispose: () => clearTimeout(handle) };\n        },\n        setImmediate(callback, ...args) {\n            const handle = setImmediate(callback, ...args);\n            return { dispose: () => clearImmediate(handle) };\n        },\n        setInterval(callback, ms, ...args) {\n            const handle = setInterval(callback, ms, ...args);\n            return { dispose: () => clearInterval(handle) };\n        }\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        api_1.RAL.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LSPErrorCodes = exports.createProtocolConnection = void 0;\n__exportStar(require(\"vscode-jsonrpc\"), exports);\n__exportStar(require(\"vscode-languageserver-types\"), exports);\n__exportStar(require(\"./messages\"), exports);\n__exportStar(require(\"./protocol\"), exports);\nvar connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"createProtocolConnection\", { enumerable: true, get: function () { return connection_1.createProtocolConnection; } });\nvar LSPErrorCodes;\n(function (LSPErrorCodes) {\n    /**\n    * This is the start range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeStart = -32899;\n    /**\n     * A request failed but it was syntactically correct, e.g the\n     * method name was known and the parameters were valid. The error\n     * message should contain human readable information about why\n     * the request failed.\n     *\n     * @since 3.17.0\n     */\n    LSPErrorCodes.RequestFailed = -32803;\n    /**\n     * The server cancelled the request. This error code should\n     * only be used for requests that explicitly support being\n     * server cancellable.\n     *\n     * @since 3.17.0\n     */\n    LSPErrorCodes.ServerCancelled = -32802;\n    /**\n     * The server detected that the content of a document got\n     * modified outside normal conditions. A server should\n     * NOT send this error code if it detects a content change\n     * in it unprocessed messages. The result even computed\n     * on an older state might still be useful for the client.\n     *\n     * If a client decides that a result is not of any use anymore\n     * the client should cancel the request.\n     */\n    LSPErrorCodes.ContentModified = -32801;\n    /**\n     * The client has canceled a request and a server as detected\n     * the cancel.\n     */\n    LSPErrorCodes.RequestCancelled = -32800;\n    /**\n    * This is the end range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeEnd = -32800;\n})(LSPErrorCodes = exports.LSPErrorCodes || (exports.LSPErrorCodes = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nfunction createProtocolConnection(input, output, logger, options) {\n    if (vscode_jsonrpc_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return (0, vscode_jsonrpc_1.createMessageConnection)(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = exports.MessageDirection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nvar MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[\"clientToServer\"] = \"clientToServer\";\n    MessageDirection[\"serverToClient\"] = \"serverToClient\";\n    MessageDirection[\"both\"] = \"both\";\n})(MessageDirection = exports.MessageDirection || (exports.MessageDirection = {}));\nclass RegistrationType {\n    constructor(method) {\n        this.method = method;\n    }\n}\nexports.RegistrationType = RegistrationType;\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolRequestType0 = ProtocolRequestType0;\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolRequestType = ProtocolRequestType;\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolNotificationType = ProtocolNotificationType;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox, Microsoft and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `CallHierarchyItem` in a document at a given position.\n * Can be used as an input to an incoming or outgoing call hierarchy.\n *\n * @since 3.16.0\n */\nvar CallHierarchyPrepareRequest;\n(function (CallHierarchyPrepareRequest) {\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\n    CallHierarchyPrepareRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyIncomingCallsRequest;\n(function (CallHierarchyIncomingCallsRequest) {\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\n    CallHierarchyIncomingCallsRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\n/**\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyOutgoingCallsRequest;\n(function (CallHierarchyOutgoingCallsRequest) {\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\n    CallHierarchyOutgoingCallsRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorPresentationRequest = exports.DocumentColorRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to list all color symbols found in a given text document. The request's\n * parameter is of type {@link DocumentColorParams} the\n * response is of type {@link ColorInformation ColorInformation[]} or a Thenable\n * that resolves to such.\n */\nvar DocumentColorRequest;\n(function (DocumentColorRequest) {\n    DocumentColorRequest.method = 'textDocument/documentColor';\n    DocumentColorRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\n/**\n * A request to list all presentation for a color. The request's\n * parameter is of type {@link ColorPresentationParams} the\n * response is of type {@link ColorInformation ColorInformation[]} or a Thenable\n * that resolves to such.\n */\nvar ColorPresentationRequest;\n(function (ColorPresentationRequest) {\n    ColorPresentationRequest.method = 'textDocument/colorPresentation';\n    ColorPresentationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType(ColorPresentationRequest.method);\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n//---- Get Configuration request ----\n/**\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\n * configuration setting.\n *\n * This pull model replaces the old push model were the client signaled configuration change via an\n * event. If the server still needs to react to configuration changes (since the server caches the\n * result of `workspace/configuration` requests) the server should register for an empty configuration\n * change event and empty the cache if such an event is received.\n */\nvar ConfigurationRequest;\n(function (ConfigurationRequest) {\n    ConfigurationRequest.method = 'workspace/configuration';\n    ConfigurationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType(ConfigurationRequest.method);\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositionParams]\n * (#TextDocumentPositionParams) the response is of type {@link Declaration}\n * or a typed array of {@link DeclarationLink} or a Thenable that resolves\n * to such.\n */\nvar DeclarationRequest;\n(function (DeclarationRequest) {\n    DeclarationRequest.method = 'textDocument/declaration';\n    DeclarationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\n/**\n * @since 3.17.0\n */\nvar DiagnosticServerCancellationData;\n(function (DiagnosticServerCancellationData) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.retriggerRequest);\n    }\n    DiagnosticServerCancellationData.is = is;\n})(DiagnosticServerCancellationData = exports.DiagnosticServerCancellationData || (exports.DiagnosticServerCancellationData = {}));\n/**\n * The document diagnostic report kinds.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticReportKind;\n(function (DocumentDiagnosticReportKind) {\n    /**\n     * A diagnostic report with a full\n     * set of problems.\n     */\n    DocumentDiagnosticReportKind.Full = 'full';\n    /**\n     * A report indicating that the last\n     * returned report is still accurate.\n     */\n    DocumentDiagnosticReportKind.Unchanged = 'unchanged';\n})(DocumentDiagnosticReportKind = exports.DocumentDiagnosticReportKind || (exports.DocumentDiagnosticReportKind = {}));\n/**\n * The document diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticRequest;\n(function (DocumentDiagnosticRequest) {\n    DocumentDiagnosticRequest.method = 'textDocument/diagnostic';\n    DocumentDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentDiagnosticRequest.type = new messages_1.ProtocolRequestType(DocumentDiagnosticRequest.method);\n    DocumentDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(DocumentDiagnosticRequest = exports.DocumentDiagnosticRequest || (exports.DocumentDiagnosticRequest = {}));\n/**\n * The workspace diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar WorkspaceDiagnosticRequest;\n(function (WorkspaceDiagnosticRequest) {\n    WorkspaceDiagnosticRequest.method = 'workspace/diagnostic';\n    WorkspaceDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceDiagnosticRequest.type = new messages_1.ProtocolRequestType(WorkspaceDiagnosticRequest.method);\n    WorkspaceDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(WorkspaceDiagnosticRequest = exports.WorkspaceDiagnosticRequest || (exports.WorkspaceDiagnosticRequest = {}));\n/**\n * The diagnostic refresh request definition.\n *\n * @since 3.17.0\n */\nvar DiagnosticRefreshRequest;\n(function (DiagnosticRefreshRequest) {\n    DiagnosticRefreshRequest.method = `workspace/diagnostic/refresh`;\n    DiagnosticRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    DiagnosticRefreshRequest.type = new messages_1.ProtocolRequestType0(DiagnosticRefreshRequest.method);\n})(DiagnosticRefreshRequest = exports.DiagnosticRefreshRequest || (exports.DiagnosticRefreshRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A pattern kind describing if a glob pattern matches a file a folder or\n * both.\n *\n * @since 3.16.0\n */\nvar FileOperationPatternKind;\n(function (FileOperationPatternKind) {\n    /**\n     * The pattern matches a file only.\n     */\n    FileOperationPatternKind.file = 'file';\n    /**\n     * The pattern matches a folder only.\n     */\n    FileOperationPatternKind.folder = 'folder';\n})(FileOperationPatternKind = exports.FileOperationPatternKind || (exports.FileOperationPatternKind = {}));\n/**\n * The will create files request is sent from the client to the server before files are actually\n * created as long as the creation is triggered from within the client.\n *\n * The request can return a `WorkspaceEdit` which will be applied to workspace before the\n * files are created. Hence the `WorkspaceEdit` can not manipulate the content of the file\n * to be created.\n *\n * @since 3.16.0\n */\nvar WillCreateFilesRequest;\n(function (WillCreateFilesRequest) {\n    WillCreateFilesRequest.method = 'workspace/willCreateFiles';\n    WillCreateFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);\n})(WillCreateFilesRequest = exports.WillCreateFilesRequest || (exports.WillCreateFilesRequest = {}));\n/**\n * The did create files notification is sent from the client to the server when\n * files were created from within the client.\n *\n * @since 3.16.0\n */\nvar DidCreateFilesNotification;\n(function (DidCreateFilesNotification) {\n    DidCreateFilesNotification.method = 'workspace/didCreateFiles';\n    DidCreateFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);\n})(DidCreateFilesNotification = exports.DidCreateFilesNotification || (exports.DidCreateFilesNotification = {}));\n/**\n * The will rename files request is sent from the client to the server before files are actually\n * renamed as long as the rename is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillRenameFilesRequest;\n(function (WillRenameFilesRequest) {\n    WillRenameFilesRequest.method = 'workspace/willRenameFiles';\n    WillRenameFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);\n})(WillRenameFilesRequest = exports.WillRenameFilesRequest || (exports.WillRenameFilesRequest = {}));\n/**\n * The did rename files notification is sent from the client to the server when\n * files were renamed from within the client.\n *\n * @since 3.16.0\n */\nvar DidRenameFilesNotification;\n(function (DidRenameFilesNotification) {\n    DidRenameFilesNotification.method = 'workspace/didRenameFiles';\n    DidRenameFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);\n})(DidRenameFilesNotification = exports.DidRenameFilesNotification || (exports.DidRenameFilesNotification = {}));\n/**\n * The will delete files request is sent from the client to the server before files are actually\n * deleted as long as the deletion is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar DidDeleteFilesNotification;\n(function (DidDeleteFilesNotification) {\n    DidDeleteFilesNotification.method = 'workspace/didDeleteFiles';\n    DidDeleteFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);\n})(DidDeleteFilesNotification = exports.DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = {}));\n/**\n * The did delete files notification is sent from the client to the server when\n * files were deleted from within the client.\n *\n * @since 3.16.0\n */\nvar WillDeleteFilesRequest;\n(function (WillDeleteFilesRequest) {\n    WillDeleteFilesRequest.method = 'workspace/willDeleteFiles';\n    WillDeleteFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);\n})(WillDeleteFilesRequest = exports.WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = {}));\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FoldingRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide folding ranges in a document. The request's\n * parameter is of type {@link FoldingRangeParams}, the\n * response is of type {@link FoldingRangeList} or a Thenable\n * that resolves to such.\n */\nvar FoldingRangeRequest;\n(function (FoldingRangeRequest) {\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\n    FoldingRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImplementationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the implementation locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositionParams]\n * (#TextDocumentPositionParams) the response is of type {@link Definition} or a\n * Thenable that resolves to such.\n */\nvar ImplementationRequest;\n(function (ImplementationRequest) {\n    ImplementationRequest.method = 'textDocument/implementation';\n    ImplementationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide inlay hints in a document. The request's parameter is of\n * type {@link InlayHintsParams}, the response is of type\n * {@link InlayHint InlayHint[]} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlayHintRequest;\n(function (InlayHintRequest) {\n    InlayHintRequest.method = 'textDocument/inlayHint';\n    InlayHintRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlayHintRequest.type = new messages_1.ProtocolRequestType(InlayHintRequest.method);\n})(InlayHintRequest = exports.InlayHintRequest || (exports.InlayHintRequest = {}));\n/**\n * A request to resolve additional properties for an inlay hint.\n * The request's parameter is of type {@link InlayHint}, the response is\n * of type {@link InlayHint} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlayHintResolveRequest;\n(function (InlayHintResolveRequest) {\n    InlayHintResolveRequest.method = 'inlayHint/resolve';\n    InlayHintResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlayHintResolveRequest.type = new messages_1.ProtocolRequestType(InlayHintResolveRequest.method);\n})(InlayHintResolveRequest = exports.InlayHintResolveRequest || (exports.InlayHintResolveRequest = {}));\n/**\n * @since 3.17.0\n */\nvar InlayHintRefreshRequest;\n(function (InlayHintRefreshRequest) {\n    InlayHintRefreshRequest.method = `workspace/inlayHint/refresh`;\n    InlayHintRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    InlayHintRefreshRequest.type = new messages_1.ProtocolRequestType0(InlayHintRefreshRequest.method);\n})(InlayHintRefreshRequest = exports.InlayHintRefreshRequest || (exports.InlayHintRefreshRequest = {}));\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineValueRefreshRequest = exports.InlineValueRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide inline values in a document. The request's parameter is of\n * type {@link InlineValueParams}, the response is of type\n * {@link InlineValue InlineValue[]} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlineValueRequest;\n(function (InlineValueRequest) {\n    InlineValueRequest.method = 'textDocument/inlineValue';\n    InlineValueRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlineValueRequest.type = new messages_1.ProtocolRequestType(InlineValueRequest.method);\n})(InlineValueRequest = exports.InlineValueRequest || (exports.InlineValueRequest = {}));\n/**\n * @since 3.17.0\n */\nvar InlineValueRefreshRequest;\n(function (InlineValueRefreshRequest) {\n    InlineValueRefreshRequest.method = `workspace/inlineValue/refresh`;\n    InlineValueRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    InlineValueRefreshRequest.type = new messages_1.ProtocolRequestType0(InlineValueRefreshRequest.method);\n})(InlineValueRefreshRequest = exports.InlineValueRefreshRequest || (exports.InlineValueRefreshRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.RelativePattern = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeErrorCodes = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.PositionEncodingKind = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.NotebookCellTextDocumentFilter = exports.NotebookDocumentFilter = exports.TextDocumentFilter = void 0;\nexports.TypeHierarchySubtypesRequest = exports.TypeHierarchyPrepareRequest = exports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = exports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolResolveRequest = void 0;\nexports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = exports.InlineValueRefreshRequest = exports.InlineValueRequest = exports.TypeHierarchySupertypesRequest = void 0;\nconst messages_1 = require(\"./messages\");\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst Is = require(\"./utils/is\");\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\nObject.defineProperty(exports, \"ImplementationRequest\", { enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } });\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\nObject.defineProperty(exports, \"TypeDefinitionRequest\", { enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } });\nconst protocol_workspaceFolder_1 = require(\"./protocol.workspaceFolder\");\nObject.defineProperty(exports, \"WorkspaceFoldersRequest\", { enumerable: true, get: function () { return protocol_workspaceFolder_1.WorkspaceFoldersRequest; } });\nObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", { enumerable: true, get: function () { return protocol_workspaceFolder_1.DidChangeWorkspaceFoldersNotification; } });\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\nObject.defineProperty(exports, \"ConfigurationRequest\", { enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } });\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\nObject.defineProperty(exports, \"DocumentColorRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } });\nObject.defineProperty(exports, \"ColorPresentationRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } });\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\nObject.defineProperty(exports, \"FoldingRangeRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } });\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\nObject.defineProperty(exports, \"DeclarationRequest\", { enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } });\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\nObject.defineProperty(exports, \"SelectionRangeRequest\", { enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } });\nconst protocol_progress_1 = require(\"./protocol.progress\");\nObject.defineProperty(exports, \"WorkDoneProgress\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } });\nObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } });\nObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } });\nconst protocol_callHierarchy_1 = require(\"./protocol.callHierarchy\");\nObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } });\nconst protocol_semanticTokens_1 = require(\"./protocol.semanticTokens\");\nObject.defineProperty(exports, \"TokenFormat\", { enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } });\nObject.defineProperty(exports, \"SemanticTokensRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } });\nObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRangeRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRegistrationType\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } });\nconst protocol_showDocument_1 = require(\"./protocol.showDocument\");\nObject.defineProperty(exports, \"ShowDocumentRequest\", { enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } });\nconst protocol_linkedEditingRange_1 = require(\"./protocol.linkedEditingRange\");\nObject.defineProperty(exports, \"LinkedEditingRangeRequest\", { enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } });\nconst protocol_fileOperations_1 = require(\"./protocol.fileOperations\");\nObject.defineProperty(exports, \"FileOperationPatternKind\", { enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } });\nObject.defineProperty(exports, \"DidCreateFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } });\nObject.defineProperty(exports, \"WillCreateFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } });\nObject.defineProperty(exports, \"DidRenameFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } });\nObject.defineProperty(exports, \"WillRenameFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } });\nObject.defineProperty(exports, \"DidDeleteFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } });\nObject.defineProperty(exports, \"WillDeleteFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } });\nconst protocol_moniker_1 = require(\"./protocol.moniker\");\nObject.defineProperty(exports, \"UniquenessLevel\", { enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } });\nObject.defineProperty(exports, \"MonikerKind\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } });\nObject.defineProperty(exports, \"MonikerRequest\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } });\nconst protocol_typeHierarchy_1 = require(\"./protocol.typeHierarchy\");\nObject.defineProperty(exports, \"TypeHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchyPrepareRequest; } });\nObject.defineProperty(exports, \"TypeHierarchySubtypesRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchySubtypesRequest; } });\nObject.defineProperty(exports, \"TypeHierarchySupertypesRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchySupertypesRequest; } });\nconst protocol_inlineValue_1 = require(\"./protocol.inlineValue\");\nObject.defineProperty(exports, \"InlineValueRequest\", { enumerable: true, get: function () { return protocol_inlineValue_1.InlineValueRequest; } });\nObject.defineProperty(exports, \"InlineValueRefreshRequest\", { enumerable: true, get: function () { return protocol_inlineValue_1.InlineValueRefreshRequest; } });\nconst protocol_inlayHint_1 = require(\"./protocol.inlayHint\");\nObject.defineProperty(exports, \"InlayHintRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintRequest; } });\nObject.defineProperty(exports, \"InlayHintResolveRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintResolveRequest; } });\nObject.defineProperty(exports, \"InlayHintRefreshRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintRefreshRequest; } });\nconst protocol_diagnostic_1 = require(\"./protocol.diagnostic\");\nObject.defineProperty(exports, \"DiagnosticServerCancellationData\", { enumerable: true, get: function () { return protocol_diagnostic_1.DiagnosticServerCancellationData; } });\nObject.defineProperty(exports, \"DocumentDiagnosticReportKind\", { enumerable: true, get: function () { return protocol_diagnostic_1.DocumentDiagnosticReportKind; } });\nObject.defineProperty(exports, \"DocumentDiagnosticRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.DocumentDiagnosticRequest; } });\nObject.defineProperty(exports, \"WorkspaceDiagnosticRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.WorkspaceDiagnosticRequest; } });\nObject.defineProperty(exports, \"DiagnosticRefreshRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.DiagnosticRefreshRequest; } });\nconst protocol_notebook_1 = require(\"./protocol.notebook\");\nObject.defineProperty(exports, \"NotebookCellKind\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCellKind; } });\nObject.defineProperty(exports, \"ExecutionSummary\", { enumerable: true, get: function () { return protocol_notebook_1.ExecutionSummary; } });\nObject.defineProperty(exports, \"NotebookCell\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCell; } });\nObject.defineProperty(exports, \"NotebookDocument\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookDocument; } });\nObject.defineProperty(exports, \"NotebookDocumentSyncRegistrationType\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookDocumentSyncRegistrationType; } });\nObject.defineProperty(exports, \"DidOpenNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidOpenNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"NotebookCellArrayChange\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCellArrayChange; } });\nObject.defineProperty(exports, \"DidChangeNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidChangeNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"DidSaveNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidSaveNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"DidCloseNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidCloseNotebookDocumentNotification; } });\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * The TextDocumentFilter namespace provides helper functions to work with\n * {@link TextDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar TextDocumentFilter;\n(function (TextDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\n    }\n    TextDocumentFilter.is = is;\n})(TextDocumentFilter = exports.TextDocumentFilter || (exports.TextDocumentFilter = {}));\n/**\n * The NotebookDocumentFilter namespace provides helper functions to work with\n * {@link NotebookDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar NotebookDocumentFilter;\n(function (NotebookDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (Is.string(candidate.notebookType) || Is.string(candidate.scheme) || Is.string(candidate.pattern));\n    }\n    NotebookDocumentFilter.is = is;\n})(NotebookDocumentFilter = exports.NotebookDocumentFilter || (exports.NotebookDocumentFilter = {}));\n/**\n * The NotebookCellTextDocumentFilter namespace provides helper functions to work with\n * {@link NotebookCellTextDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar NotebookCellTextDocumentFilter;\n(function (NotebookCellTextDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (Is.string(candidate.notebook) || NotebookDocumentFilter.is(candidate.notebook))\n            && (candidate.language === undefined || Is.string(candidate.language));\n    }\n    NotebookCellTextDocumentFilter.is = is;\n})(NotebookCellTextDocumentFilter = exports.NotebookCellTextDocumentFilter || (exports.NotebookCellTextDocumentFilter = {}));\n/**\n * The DocumentSelector namespace provides helper functions to work with\n * {@link DocumentSelector}s.\n */\nvar DocumentSelector;\n(function (DocumentSelector) {\n    function is(value) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        for (let elem of value) {\n            if (!Is.string(elem) && !TextDocumentFilter.is(elem) && !NotebookCellTextDocumentFilter.is(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    DocumentSelector.is = is;\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\n * handler on the client side.\n */\nvar RegistrationRequest;\n(function (RegistrationRequest) {\n    RegistrationRequest.method = 'client/registerCapability';\n    RegistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    RegistrationRequest.type = new messages_1.ProtocolRequestType(RegistrationRequest.method);\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n * handler on the client side.\n */\nvar UnregistrationRequest;\n(function (UnregistrationRequest) {\n    UnregistrationRequest.method = 'client/unregisterCapability';\n    UnregistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType(UnregistrationRequest.method);\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\nvar ResourceOperationKind;\n(function (ResourceOperationKind) {\n    /**\n     * Supports creating new files and folders.\n     */\n    ResourceOperationKind.Create = 'create';\n    /**\n     * Supports renaming existing files and folders.\n     */\n    ResourceOperationKind.Rename = 'rename';\n    /**\n     * Supports deleting existing files and folders.\n     */\n    ResourceOperationKind.Delete = 'delete';\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\nvar FailureHandlingKind;\n(function (FailureHandlingKind) {\n    /**\n     * Applying the workspace change is simply aborted if one of the changes provided\n     * fails. All operations executed before the failing operation stay executed.\n     */\n    FailureHandlingKind.Abort = 'abort';\n    /**\n     * All operations are executed transactional. That means they either all\n     * succeed or no changes at all are applied to the workspace.\n     */\n    FailureHandlingKind.Transactional = 'transactional';\n    /**\n     * If the workspace edit contains only textual file changes they are executed transactional.\n     * If resource changes (create, rename or delete file) are part of the change the failure\n     * handling strategy is abort.\n     */\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n    /**\n     * The client tries to undo the operations already executed. But there is no\n     * guarantee that this is succeeding.\n     */\n    FailureHandlingKind.Undo = 'undo';\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\n/**\n * A set of predefined position encoding kinds.\n *\n * @since 3.17.0\n */\nvar PositionEncodingKind;\n(function (PositionEncodingKind) {\n    /**\n     * Character offsets count UTF-8 code units (e.g. bytes).\n     */\n    PositionEncodingKind.UTF8 = 'utf-8';\n    /**\n     * Character offsets count UTF-16 code units.\n     *\n     * This is the default and must always be supported\n     * by servers\n     */\n    PositionEncodingKind.UTF16 = 'utf-16';\n    /**\n     * Character offsets count UTF-32 code units.\n     *\n     * Implementation note: these are the same as Unicode codepoints,\n     * so this `PositionEncodingKind` may also be used for an\n     * encoding-agnostic representation of character offsets.\n     */\n    PositionEncodingKind.UTF32 = 'utf-32';\n})(PositionEncodingKind = exports.PositionEncodingKind || (exports.PositionEncodingKind = {}));\n/**\n * The StaticRegistrationOptions namespace provides helper functions to work with\n * {@link StaticRegistrationOptions} literals.\n */\nvar StaticRegistrationOptions;\n(function (StaticRegistrationOptions) {\n    function hasId(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n    }\n    StaticRegistrationOptions.hasId = hasId;\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\n/**\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n * {@link TextDocumentRegistrationOptions} literals.\n */\nvar TextDocumentRegistrationOptions;\n(function (TextDocumentRegistrationOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n    }\n    TextDocumentRegistrationOptions.is = is;\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\n/**\n * The WorkDoneProgressOptions namespace provides helper functions to work with\n * {@link WorkDoneProgressOptions} literals.\n */\nvar WorkDoneProgressOptions;\n(function (WorkDoneProgressOptions) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n    }\n    WorkDoneProgressOptions.is = is;\n    function hasWorkDoneProgress(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.workDoneProgress);\n    }\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type {@link InitializeParams}\n * the response if of type {@link InitializeResult} of a Thenable that\n * resolves to such.\n */\nvar InitializeRequest;\n(function (InitializeRequest) {\n    InitializeRequest.method = 'initialize';\n    InitializeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InitializeRequest.type = new messages_1.ProtocolRequestType(InitializeRequest.method);\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeErrorCodes`;\n */\nvar InitializeErrorCodes;\n(function (InitializeErrorCodes) {\n    /**\n     * If the protocol version provided by the client can't be handled by the server.\n     *\n     * @deprecated This initialize error got replaced by client capabilities. There is\n     * no version handshake in version 3.0x\n     */\n    InitializeErrorCodes.unknownProtocolVersion = 1;\n})(InitializeErrorCodes = exports.InitializeErrorCodes || (exports.InitializeErrorCodes = {}));\n/**\n * The initialized notification is sent from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\nvar InitializedNotification;\n(function (InitializedNotification) {\n    InitializedNotification.method = 'initialized';\n    InitializedNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    InitializedNotification.type = new messages_1.ProtocolNotificationType(InitializedNotification.method);\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\n//---- Shutdown Method ----\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client decides to shutdown the\n * server. The only notification that is sent after a shutdown request\n * is the exit event.\n */\nvar ShutdownRequest;\n(function (ShutdownRequest) {\n    ShutdownRequest.method = 'shutdown';\n    ShutdownRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0(ShutdownRequest.method);\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\n//---- Exit Notification ----\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\nvar ExitNotification;\n(function (ExitNotification) {\n    ExitNotification.method = 'exit';\n    ExitNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    ExitNotification.type = new messages_1.ProtocolNotificationType0(ExitNotification.method);\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\nvar DidChangeConfigurationNotification;\n(function (DidChangeConfigurationNotification) {\n    DidChangeConfigurationNotification.method = 'workspace/didChangeConfiguration';\n    DidChangeConfigurationNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType(DidChangeConfigurationNotification.method);\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\n//---- Message show and log notifications ----\n/**\n * The message type\n */\nvar MessageType;\n(function (MessageType) {\n    /**\n     * An error message.\n     */\n    MessageType.Error = 1;\n    /**\n     * A warning message.\n     */\n    MessageType.Warning = 2;\n    /**\n     * An information message.\n     */\n    MessageType.Info = 3;\n    /**\n     * A log message.\n     */\n    MessageType.Log = 4;\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\nvar ShowMessageNotification;\n(function (ShowMessageNotification) {\n    ShowMessageNotification.method = 'window/showMessage';\n    ShowMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType(ShowMessageNotification.method);\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the client to show a message\n * and a set of options actions to the user.\n */\nvar ShowMessageRequest;\n(function (ShowMessageRequest) {\n    ShowMessageRequest.method = 'window/showMessageRequest';\n    ShowMessageRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType(ShowMessageRequest.method);\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\nvar LogMessageNotification;\n(function (LogMessageNotification) {\n    LogMessageNotification.method = 'window/logMessage';\n    LogMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType(LogMessageNotification.method);\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\n//---- Telemetry notification\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\nvar TelemetryEventNotification;\n(function (TelemetryEventNotification) {\n    TelemetryEventNotification.method = 'telemetry/event';\n    TelemetryEventNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType(TelemetryEventNotification.method);\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\nvar TextDocumentSyncKind;\n(function (TextDocumentSyncKind) {\n    /**\n     * Documents should not be synced at all.\n     */\n    TextDocumentSyncKind.None = 0;\n    /**\n     * Documents are synced by always sending the full content\n     * of the document.\n     */\n    TextDocumentSyncKind.Full = 1;\n    /**\n     * Documents are synced by sending the full content on open.\n     * After that only incremental updates to the document are\n     * send.\n     */\n    TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n * mean that its content is presented in an editor. An open notification must not\n * be sent more than once without a corresponding close notification send before.\n * This means open and close notification must be balanced and the max open count\n * is one.\n */\nvar DidOpenTextDocumentNotification;\n(function (DidOpenTextDocumentNotification) {\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n    DidOpenTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\nvar TextDocumentContentChangeEvent;\n(function (TextDocumentContentChangeEvent) {\n    /**\n     * Checks whether the information describes a delta event.\n     */\n    function isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    TextDocumentContentChangeEvent.isIncremental = isIncremental;\n    /**\n     * Checks whether the information describes a full replacement event.\n     */\n    function isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n    TextDocumentContentChangeEvent.isFull = isFull;\n})(TextDocumentContentChangeEvent = exports.TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\nvar DidChangeTextDocumentNotification;\n(function (DidChangeTextDocumentNotification) {\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n    DidChangeTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists where\n * the document's uri points to (e.g. if the document's uri is a file uri the\n * truth now exists on disk). As with the open notification the close notification\n * is about managing the document's content. Receiving a close notification\n * doesn't mean that the document was open in an editor before. A close\n * notification requires a previous open notification to be sent.\n */\nvar DidCloseTextDocumentNotification;\n(function (DidCloseTextDocumentNotification) {\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n    DidCloseTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\nvar DidSaveTextDocumentNotification;\n(function (DidSaveTextDocumentNotification) {\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n    DidSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\nvar WillSaveTextDocumentNotification;\n(function (WillSaveTextDocumentNotification) {\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n    WillSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\nvar WillSaveTextDocumentWaitUntilRequest;\n(function (WillSaveTextDocumentWaitUntilRequest) {\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n    WillSaveTextDocumentWaitUntilRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the language client.\n */\nvar DidChangeWatchedFilesNotification;\n(function (DidChangeWatchedFilesNotification) {\n    DidChangeWatchedFilesNotification.method = 'workspace/didChangeWatchedFiles';\n    DidChangeWatchedFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType(DidChangeWatchedFilesNotification.method);\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    /**\n     * The file got created.\n     */\n    FileChangeType.Created = 1;\n    /**\n     * The file got changed.\n     */\n    FileChangeType.Changed = 2;\n    /**\n     * The file got deleted.\n     */\n    FileChangeType.Deleted = 3;\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\nvar RelativePattern;\n(function (RelativePattern) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (vscode_languageserver_types_1.URI.is(candidate.baseUri) || vscode_languageserver_types_1.WorkspaceFolder.is(candidate.baseUri)) && Is.string(candidate.pattern);\n    }\n    RelativePattern.is = is;\n})(RelativePattern = exports.RelativePattern || (exports.RelativePattern = {}));\nvar WatchKind;\n(function (WatchKind) {\n    /**\n     * Interested in create events.\n     */\n    WatchKind.Create = 1;\n    /**\n     * Interested in change events\n     */\n    WatchKind.Change = 2;\n    /**\n     * Interested in delete events\n     */\n    WatchKind.Delete = 4;\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\nvar PublishDiagnosticsNotification;\n(function (PublishDiagnosticsNotification) {\n    PublishDiagnosticsNotification.method = 'textDocument/publishDiagnostics';\n    PublishDiagnosticsNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType(PublishDiagnosticsNotification.method);\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\n/**\n * How a completion was triggered\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    /**\n     * Completion was triggered by typing an identifier (24x7 code\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\n     */\n    CompletionTriggerKind.Invoked = 1;\n    /**\n     * Completion was triggered by a trigger character specified by\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n     */\n    CompletionTriggerKind.TriggerCharacter = 2;\n    /**\n     * Completion was re-triggered as current completion list is incomplete\n     */\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type {@link TextDocumentPosition} the response\n * is of type {@link CompletionItem CompletionItem[]} or {@link CompletionList}\n * or a Thenable that resolves to such.\n *\n * The request can delay the computation of the {@link CompletionItem.detail `detail`}\n * and {@link CompletionItem.documentation `documentation`} properties to the `completionItem/resolve`\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n */\nvar CompletionRequest;\n(function (CompletionRequest) {\n    CompletionRequest.method = 'textDocument/completion';\n    CompletionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type {@link CompletionItem} the response\n * is of type {@link CompletionItem} or a Thenable that resolves to such.\n */\nvar CompletionResolveRequest;\n(function (CompletionResolveRequest) {\n    CompletionResolveRequest.method = 'completionItem/resolve';\n    CompletionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type {@link TextDocumentPosition} the response is of\n * type {@link Hover} or a Thenable that resolves to such.\n */\nvar HoverRequest;\n(function (HoverRequest) {\n    HoverRequest.method = 'textDocument/hover';\n    HoverRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\n/**\n * How a signature help was triggered.\n *\n * @since 3.15.0\n */\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    /**\n     * Signature help was invoked manually by the user or by a command.\n     */\n    SignatureHelpTriggerKind.Invoked = 1;\n    /**\n     * Signature help was triggered by a trigger character.\n     */\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\n    /**\n     * Signature help was triggered by the cursor moving or by the document content changing.\n     */\n    SignatureHelpTriggerKind.ContentChange = 3;\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\nvar SignatureHelpRequest;\n(function (SignatureHelpRequest) {\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\n    SignatureHelpRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\n/**\n * A request to resolve the definition location of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the response is of either type {@link Definition}\n * or a typed array of {@link DefinitionLink} or a Thenable that resolves\n * to such.\n */\nvar DefinitionRequest;\n(function (DefinitionRequest) {\n    DefinitionRequest.method = 'textDocument/definition';\n    DefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type {@link ReferenceParams} the response is of type\n * {@link Location Location[]} or a Thenable that resolves to such.\n */\nvar ReferencesRequest;\n(function (ReferencesRequest) {\n    ReferencesRequest.method = 'textDocument/references';\n    ReferencesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\n/**\n * Request to resolve a {@link DocumentHighlight} for a given\n * text document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\n * (#DocumentHighlight) or a Thenable that resolves to such.\n */\nvar DocumentHighlightRequest;\n(function (DocumentHighlightRequest) {\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n    DocumentHighlightRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type {@link TextDocumentIdentifier} the\n * response is of type {@link SymbolInformation SymbolInformation[]} or a Thenable\n * that resolves to such.\n */\nvar DocumentSymbolRequest;\n(function (DocumentSymbolRequest) {\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n    DocumentSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\nvar CodeActionRequest;\n(function (CodeActionRequest) {\n    CodeActionRequest.method = 'textDocument/codeAction';\n    CodeActionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\n/**\n * Request to resolve additional information for a given code action.The request's\n * parameter is of type {@link CodeAction} the response\n * is of type {@link CodeAction} or a Thenable that resolves to such.\n */\nvar CodeActionResolveRequest;\n(function (CodeActionResolveRequest) {\n    CodeActionResolveRequest.method = 'codeAction/resolve';\n    CodeActionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n})(CodeActionResolveRequest = exports.CodeActionResolveRequest || (exports.CodeActionResolveRequest = {}));\n/**\n * A request to list project-wide symbols matching the query string given\n * by the {@link WorkspaceSymbolParams}. The response is\n * of type {@link SymbolInformation SymbolInformation[]} or a Thenable that\n * resolves to such.\n *\n * @since 3.17.0 - support for WorkspaceSymbol in the returned data. Clients\n *  need to advertise support for WorkspaceSymbols via the client capability\n *  `workspace.symbol.resolveSupport`.\n *\n */\nvar WorkspaceSymbolRequest;\n(function (WorkspaceSymbolRequest) {\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\n    WorkspaceSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\n/**\n * A request to resolve the range inside the workspace\n * symbol's location.\n *\n * @since 3.17.0\n */\nvar WorkspaceSymbolResolveRequest;\n(function (WorkspaceSymbolResolveRequest) {\n    WorkspaceSymbolResolveRequest.method = 'workspaceSymbol/resolve';\n    WorkspaceSymbolResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceSymbolResolveRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolResolveRequest.method);\n})(WorkspaceSymbolResolveRequest = exports.WorkspaceSymbolResolveRequest || (exports.WorkspaceSymbolResolveRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\nvar CodeLensRequest;\n(function (CodeLensRequest) {\n    CodeLensRequest.method = 'textDocument/codeLens';\n    CodeLensRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\nvar CodeLensResolveRequest;\n(function (CodeLensResolveRequest) {\n    CodeLensResolveRequest.method = 'codeLens/resolve';\n    CodeLensResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\n/**\n * A request to refresh all code actions\n *\n * @since 3.16.0\n */\nvar CodeLensRefreshRequest;\n(function (CodeLensRefreshRequest) {\n    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n    CodeLensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n})(CodeLensRefreshRequest = exports.CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = {}));\n/**\n * A request to provide document links\n */\nvar DocumentLinkRequest;\n(function (DocumentLinkRequest) {\n    DocumentLinkRequest.method = 'textDocument/documentLink';\n    DocumentLinkRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type {@link DocumentLink} the response\n * is of type {@link DocumentLink} or a Thenable that resolves to such.\n */\nvar DocumentLinkResolveRequest;\n(function (DocumentLinkResolveRequest) {\n    DocumentLinkResolveRequest.method = 'documentLink/resolve';\n    DocumentLinkResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\n/**\n * A request to to format a whole document.\n */\nvar DocumentFormattingRequest;\n(function (DocumentFormattingRequest) {\n    DocumentFormattingRequest.method = 'textDocument/formatting';\n    DocumentFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\n/**\n * A request to to format a range in a document.\n */\nvar DocumentRangeFormattingRequest;\n(function (DocumentRangeFormattingRequest) {\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n    DocumentRangeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\nvar DocumentOnTypeFormattingRequest;\n(function (DocumentOnTypeFormattingRequest) {\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n    DocumentOnTypeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\n//---- Rename ----------------------------------------------\nvar PrepareSupportDefaultBehavior;\n(function (PrepareSupportDefaultBehavior) {\n    /**\n     * The client's default behavior is to select the identifier\n     * according the to language's syntax rule.\n     */\n    PrepareSupportDefaultBehavior.Identifier = 1;\n})(PrepareSupportDefaultBehavior = exports.PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = {}));\n/**\n * A request to rename a symbol.\n */\nvar RenameRequest;\n(function (RenameRequest) {\n    RenameRequest.method = 'textDocument/rename';\n    RenameRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\n/**\n * A request to test and perform the setup necessary for a rename.\n *\n * @since 3.16 - support for default behavior\n */\nvar PrepareRenameRequest;\n(function (PrepareRenameRequest) {\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\n    PrepareRenameRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    ExecuteCommandRequest.method = 'workspace/executeCommand';\n    ExecuteCommandRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType(ExecuteCommandRequest.method);\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\nvar ApplyWorkspaceEditRequest;\n(function (ApplyWorkspaceEditRequest) {\n    ApplyWorkspaceEditRequest.method = 'workspace/applyEdit';\n    ApplyWorkspaceEditRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide ranges that can be edited together.\n *\n * @since 3.16.0\n */\nvar LinkedEditingRangeRequest;\n(function (LinkedEditingRangeRequest) {\n    LinkedEditingRangeRequest.method = 'textDocument/linkedEditingRange';\n    LinkedEditingRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    LinkedEditingRangeRequest.type = new messages_1.ProtocolRequestType(LinkedEditingRangeRequest.method);\n})(LinkedEditingRangeRequest = exports.LinkedEditingRangeRequest || (exports.LinkedEditingRangeRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * Moniker uniqueness level to define scope of the moniker.\n *\n * @since 3.16.0\n */\nvar UniquenessLevel;\n(function (UniquenessLevel) {\n    /**\n     * The moniker is only unique inside a document\n     */\n    UniquenessLevel.document = 'document';\n    /**\n     * The moniker is unique inside a project for which a dump got created\n     */\n    UniquenessLevel.project = 'project';\n    /**\n     * The moniker is unique inside the group to which a project belongs\n     */\n    UniquenessLevel.group = 'group';\n    /**\n     * The moniker is unique inside the moniker scheme.\n     */\n    UniquenessLevel.scheme = 'scheme';\n    /**\n     * The moniker is globally unique\n     */\n    UniquenessLevel.global = 'global';\n})(UniquenessLevel = exports.UniquenessLevel || (exports.UniquenessLevel = {}));\n/**\n * The moniker kind.\n *\n * @since 3.16.0\n */\nvar MonikerKind;\n(function (MonikerKind) {\n    /**\n     * The moniker represent a symbol that is imported into a project\n     */\n    MonikerKind.$import = 'import';\n    /**\n     * The moniker represents a symbol that is exported from a project\n     */\n    MonikerKind.$export = 'export';\n    /**\n     * The moniker represents a symbol that is local to a project (e.g. a local\n     * variable of a function, a class not visible outside the project, ...)\n     */\n    MonikerKind.local = 'local';\n})(MonikerKind = exports.MonikerKind || (exports.MonikerKind = {}));\n/**\n * A request to get the moniker of a symbol at a given text document position.\n * The request parameter is of type {@link TextDocumentPositionParams}.\n * The response is of type {@link Moniker Moniker[]} or `null`.\n */\nvar MonikerRequest;\n(function (MonikerRequest) {\n    MonikerRequest.method = 'textDocument/moniker';\n    MonikerRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    MonikerRequest.type = new messages_1.ProtocolRequestType(MonikerRequest.method);\n})(MonikerRequest = exports.MonikerRequest || (exports.MonikerRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\n/**\n * A notebook cell kind.\n *\n * @since 3.17.0\n */\nvar NotebookCellKind;\n(function (NotebookCellKind) {\n    /**\n     * A markup-cell is formatted source that is used for display.\n     */\n    NotebookCellKind.Markup = 1;\n    /**\n     * A code-cell is source code.\n     */\n    NotebookCellKind.Code = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    NotebookCellKind.is = is;\n})(NotebookCellKind = exports.NotebookCellKind || (exports.NotebookCellKind = {}));\nvar ExecutionSummary;\n(function (ExecutionSummary) {\n    function create(executionOrder, success) {\n        const result = { executionOrder };\n        if (success === true || success === false) {\n            result.success = success;\n        }\n        return result;\n    }\n    ExecutionSummary.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && vscode_languageserver_types_1.uinteger.is(candidate.executionOrder) && (candidate.success === undefined || Is.boolean(candidate.success));\n    }\n    ExecutionSummary.is = is;\n    function equals(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        return one.executionOrder === other.executionOrder && one.success === other.success;\n    }\n    ExecutionSummary.equals = equals;\n})(ExecutionSummary = exports.ExecutionSummary || (exports.ExecutionSummary = {}));\nvar NotebookCell;\n(function (NotebookCell) {\n    function create(kind, document) {\n        return { kind, document };\n    }\n    NotebookCell.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && NotebookCellKind.is(candidate.kind) && vscode_languageserver_types_1.DocumentUri.is(candidate.document) &&\n            (candidate.metadata === undefined || Is.objectLiteral(candidate.metadata));\n    }\n    NotebookCell.is = is;\n    function diff(one, two) {\n        const result = new Set();\n        if (one.document !== two.document) {\n            result.add('document');\n        }\n        if (one.kind !== two.kind) {\n            result.add('kind');\n        }\n        if (one.executionSummary !== two.executionSummary) {\n            result.add('executionSummary');\n        }\n        if ((one.metadata !== undefined || two.metadata !== undefined) && !equalsMetadata(one.metadata, two.metadata)) {\n            result.add('metadata');\n        }\n        if ((one.executionSummary !== undefined || two.executionSummary !== undefined) && !ExecutionSummary.equals(one.executionSummary, two.executionSummary)) {\n            result.add('executionSummary');\n        }\n        return result;\n    }\n    NotebookCell.diff = diff;\n    function equalsMetadata(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        if (typeof one !== typeof other) {\n            return false;\n        }\n        if (typeof one !== 'object') {\n            return false;\n        }\n        const oneArray = Array.isArray(one);\n        const otherArray = Array.isArray(other);\n        if (oneArray !== otherArray) {\n            return false;\n        }\n        if (oneArray && otherArray) {\n            if (one.length !== other.length) {\n                return false;\n            }\n            for (let i = 0; i < one.length; i++) {\n                if (!equalsMetadata(one[i], other[i])) {\n                    return false;\n                }\n            }\n        }\n        if (Is.objectLiteral(one) && Is.objectLiteral(other)) {\n            const oneKeys = Object.keys(one);\n            const otherKeys = Object.keys(other);\n            if (oneKeys.length !== otherKeys.length) {\n                return false;\n            }\n            oneKeys.sort();\n            otherKeys.sort();\n            if (!equalsMetadata(oneKeys, otherKeys)) {\n                return false;\n            }\n            for (let i = 0; i < oneKeys.length; i++) {\n                const prop = oneKeys[i];\n                if (!equalsMetadata(one[prop], other[prop])) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n})(NotebookCell = exports.NotebookCell || (exports.NotebookCell = {}));\nvar NotebookDocument;\n(function (NotebookDocument) {\n    function create(uri, notebookType, version, cells) {\n        return { uri, notebookType, version, cells };\n    }\n    NotebookDocument.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.uri) && vscode_languageserver_types_1.integer.is(candidate.version) && Is.typedArray(candidate.cells, NotebookCell.is);\n    }\n    NotebookDocument.is = is;\n})(NotebookDocument = exports.NotebookDocument || (exports.NotebookDocument = {}));\nvar NotebookDocumentSyncRegistrationType;\n(function (NotebookDocumentSyncRegistrationType) {\n    NotebookDocumentSyncRegistrationType.method = 'notebookDocument/sync';\n    NotebookDocumentSyncRegistrationType.messageDirection = messages_1.MessageDirection.clientToServer;\n    NotebookDocumentSyncRegistrationType.type = new messages_1.RegistrationType(NotebookDocumentSyncRegistrationType.method);\n})(NotebookDocumentSyncRegistrationType = exports.NotebookDocumentSyncRegistrationType || (exports.NotebookDocumentSyncRegistrationType = {}));\n/**\n * A notification sent when a notebook opens.\n *\n * @since 3.17.0\n */\nvar DidOpenNotebookDocumentNotification;\n(function (DidOpenNotebookDocumentNotification) {\n    DidOpenNotebookDocumentNotification.method = 'notebookDocument/didOpen';\n    DidOpenNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidOpenNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenNotebookDocumentNotification.method);\n    DidOpenNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidOpenNotebookDocumentNotification = exports.DidOpenNotebookDocumentNotification || (exports.DidOpenNotebookDocumentNotification = {}));\nvar NotebookCellArrayChange;\n(function (NotebookCellArrayChange) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && vscode_languageserver_types_1.uinteger.is(candidate.start) && vscode_languageserver_types_1.uinteger.is(candidate.deleteCount) && (candidate.cells === undefined || Is.typedArray(candidate.cells, NotebookCell.is));\n    }\n    NotebookCellArrayChange.is = is;\n    function create(start, deleteCount, cells) {\n        const result = { start, deleteCount };\n        if (cells !== undefined) {\n            result.cells = cells;\n        }\n        return result;\n    }\n    NotebookCellArrayChange.create = create;\n})(NotebookCellArrayChange = exports.NotebookCellArrayChange || (exports.NotebookCellArrayChange = {}));\nvar DidChangeNotebookDocumentNotification;\n(function (DidChangeNotebookDocumentNotification) {\n    DidChangeNotebookDocumentNotification.method = 'notebookDocument/didChange';\n    DidChangeNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeNotebookDocumentNotification.method);\n    DidChangeNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidChangeNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification || (exports.DidChangeNotebookDocumentNotification = {}));\n/**\n * A notification sent when a notebook document is saved.\n *\n * @since 3.17.0\n */\nvar DidSaveNotebookDocumentNotification;\n(function (DidSaveNotebookDocumentNotification) {\n    DidSaveNotebookDocumentNotification.method = 'notebookDocument/didSave';\n    DidSaveNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidSaveNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveNotebookDocumentNotification.method);\n    DidSaveNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidSaveNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification || (exports.DidSaveNotebookDocumentNotification = {}));\n/**\n * A notification sent when a notebook closes.\n *\n * @since 3.17.0\n */\nvar DidCloseNotebookDocumentNotification;\n(function (DidCloseNotebookDocumentNotification) {\n    DidCloseNotebookDocumentNotification.method = 'notebookDocument/didClose';\n    DidCloseNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCloseNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseNotebookDocumentNotification.method);\n    DidCloseNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidCloseNotebookDocumentNotification = exports.DidCloseNotebookDocumentNotification || (exports.DidCloseNotebookDocumentNotification = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst messages_1 = require(\"./messages\");\nvar WorkDoneProgress;\n(function (WorkDoneProgress) {\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\n    function is(value) {\n        return value === WorkDoneProgress.type;\n    }\n    WorkDoneProgress.is = is;\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\n/**\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\n * reporting from the server.\n */\nvar WorkDoneProgressCreateRequest;\n(function (WorkDoneProgressCreateRequest) {\n    WorkDoneProgressCreateRequest.method = 'window/workDoneProgress/create';\n    WorkDoneProgressCreateRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType(WorkDoneProgressCreateRequest.method);\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\n/**\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\n * initiated on the server side.\n */\nvar WorkDoneProgressCancelNotification;\n(function (WorkDoneProgressCancelNotification) {\n    WorkDoneProgressCancelNotification.method = 'window/workDoneProgress/cancel';\n    WorkDoneProgressCancelNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType(WorkDoneProgressCancelNotification.method);\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide selection ranges in a document. The request's\n * parameter is of type {@link SelectionRangeParams}, the\n * response is of type {@link SelectionRange SelectionRange[]} or a Thenable\n * that resolves to such.\n */\nvar SelectionRangeRequest;\n(function (SelectionRangeRequest) {\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\n    SelectionRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = void 0;\nconst messages_1 = require(\"./messages\");\n//------- 'textDocument/semanticTokens' -----\nvar TokenFormat;\n(function (TokenFormat) {\n    TokenFormat.Relative = 'relative';\n})(TokenFormat = exports.TokenFormat || (exports.TokenFormat = {}));\nvar SemanticTokensRegistrationType;\n(function (SemanticTokensRegistrationType) {\n    SemanticTokensRegistrationType.method = 'textDocument/semanticTokens';\n    SemanticTokensRegistrationType.type = new messages_1.RegistrationType(SemanticTokensRegistrationType.method);\n})(SemanticTokensRegistrationType = exports.SemanticTokensRegistrationType || (exports.SemanticTokensRegistrationType = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRequest;\n(function (SemanticTokensRequest) {\n    SemanticTokensRequest.method = 'textDocument/semanticTokens/full';\n    SemanticTokensRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\n    SemanticTokensRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensDeltaRequest;\n(function (SemanticTokensDeltaRequest) {\n    SemanticTokensDeltaRequest.method = 'textDocument/semanticTokens/full/delta';\n    SemanticTokensDeltaRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensDeltaRequest.type = new messages_1.ProtocolRequestType(SemanticTokensDeltaRequest.method);\n    SemanticTokensDeltaRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensDeltaRequest = exports.SemanticTokensDeltaRequest || (exports.SemanticTokensDeltaRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRangeRequest;\n(function (SemanticTokensRangeRequest) {\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\n    SemanticTokensRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\n    SemanticTokensRangeRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRefreshRequest;\n(function (SemanticTokensRefreshRequest) {\n    SemanticTokensRefreshRequest.method = `workspace/semanticTokens/refresh`;\n    SemanticTokensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    SemanticTokensRefreshRequest.type = new messages_1.ProtocolRequestType0(SemanticTokensRefreshRequest.method);\n})(SemanticTokensRefreshRequest = exports.SemanticTokensRefreshRequest || (exports.SemanticTokensRefreshRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShowDocumentRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to show a document. This request might open an\n * external program depending on the value of the URI to open.\n * For example a request to open `https://code.visualstudio.com/`\n * will very likely open the URI in a WEB browser.\n *\n * @since 3.16.0\n*/\nvar ShowDocumentRequest;\n(function (ShowDocumentRequest) {\n    ShowDocumentRequest.method = 'window/showDocument';\n    ShowDocumentRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowDocumentRequest.type = new messages_1.ProtocolRequestType(ShowDocumentRequest.method);\n})(ShowDocumentRequest = exports.ShowDocumentRequest || (exports.ShowDocumentRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeDefinitionRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositionParams]\n * (#TextDocumentPositionParams) the response is of type {@link Definition} or a\n * Thenable that resolves to such.\n */\nvar TypeDefinitionRequest;\n(function (TypeDefinitionRequest) {\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\n    TypeDefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox, Microsoft and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeHierarchySubtypesRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `TypeHierarchyItem` in a document at a given position.\n * Can be used as an input to a subtypes or supertypes type hierarchy.\n *\n * @since 3.17.0\n */\nvar TypeHierarchyPrepareRequest;\n(function (TypeHierarchyPrepareRequest) {\n    TypeHierarchyPrepareRequest.method = 'textDocument/prepareTypeHierarchy';\n    TypeHierarchyPrepareRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(TypeHierarchyPrepareRequest.method);\n})(TypeHierarchyPrepareRequest = exports.TypeHierarchyPrepareRequest || (exports.TypeHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the supertypes for a given `TypeHierarchyItem`.\n *\n * @since 3.17.0\n */\nvar TypeHierarchySupertypesRequest;\n(function (TypeHierarchySupertypesRequest) {\n    TypeHierarchySupertypesRequest.method = 'typeHierarchy/supertypes';\n    TypeHierarchySupertypesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchySupertypesRequest.type = new messages_1.ProtocolRequestType(TypeHierarchySupertypesRequest.method);\n})(TypeHierarchySupertypesRequest = exports.TypeHierarchySupertypesRequest || (exports.TypeHierarchySupertypesRequest = {}));\n/**\n * A request to resolve the subtypes for a given `TypeHierarchyItem`.\n *\n * @since 3.17.0\n */\nvar TypeHierarchySubtypesRequest;\n(function (TypeHierarchySubtypesRequest) {\n    TypeHierarchySubtypesRequest.method = 'typeHierarchy/subtypes';\n    TypeHierarchySubtypesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchySubtypesRequest.type = new messages_1.ProtocolRequestType(TypeHierarchySubtypesRequest.method);\n})(TypeHierarchySubtypesRequest = exports.TypeHierarchySubtypesRequest || (exports.TypeHierarchySubtypesRequest = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\n */\nvar WorkspaceFoldersRequest;\n(function (WorkspaceFoldersRequest) {\n    WorkspaceFoldersRequest.method = 'workspace/workspaceFolders';\n    WorkspaceFoldersRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0(WorkspaceFoldersRequest.method);\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\n/**\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\n * folder configuration changes.\n */\nvar DidChangeWorkspaceFoldersNotification;\n(function (DidChangeWorkspaceFoldersNotification) {\n    DidChangeWorkspaceFoldersNotification.method = 'workspace/didChangeWorkspaceFolders';\n    DidChangeWorkspaceFoldersNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType(DidChangeWorkspaceFoldersNotification.method);\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n}\nexports.objectLiteral = objectLiteral;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst node_1 = require(\"vscode-jsonrpc/node\");\n__exportStar(require(\"vscode-jsonrpc/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nfunction createProtocolConnection(input, output, logger, options) {\n    return (0, node_1.createMessageConnection)(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\".concat(one, \", \").concat(two, \", \").concat(three, \", \").concat(four, \"]\"));\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        var result = { label: label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range: range, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range: range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.delete = function (range, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Text edit change is not configured to manage change annotations.\");\n        }\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A helper class\n */\nvar ChangeAnnotations = /** @class */ (function () {\n    function ChangeAnnotations(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    ChangeAnnotations.prototype.all = function () {\n        return this._annotations;\n    };\n    Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n        var id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(\"Id \".concat(id, \" is already in use.\"));\n        }\n        if (annotation === undefined) {\n            throw new Error(\"No annotation provided for id \".concat(id));\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    };\n    ChangeAnnotations.prototype.nextId = function () {\n        this._counter++;\n        return this._counter.toString();\n    };\n    return ChangeAnnotations;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying {@link WorkspaceEdit} literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            this.initDocumentChanges();\n            if (this._changeAnnotations !== undefined) {\n                if (this._changeAnnotations.size === 0) {\n                    this._workspaceEdit.changeAnnotations = undefined;\n                }\n                else {\n                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                }\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = { uri: key.uri, version: key.version };\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.initDocumentChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    };\n    WorkspaceChange.prototype.initChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        var candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name: name, kind: kind, location: { uri: uri, range: range } }\n            : { name: name, kind: kind, location: { uri: uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        var result = { diagnostics: diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        var result = { title: title };\n        var checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range: range, text: text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range: range, variableName: variableName, caseSensitiveLookup: caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range: range, expression: expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId: frameId, stoppedLocation: stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value: value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        var result = { position: position, label: label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProposedFeatures = exports.NotebookDocuments = exports.TextDocuments = exports.SemanticTokensBuilder = void 0;\nconst semanticTokens_1 = require(\"./semanticTokens\");\nObject.defineProperty(exports, \"SemanticTokensBuilder\", { enumerable: true, get: function () { return semanticTokens_1.SemanticTokensBuilder; } });\n__exportStar(require(\"vscode-languageserver-protocol/\"), exports);\nconst textDocuments_1 = require(\"./textDocuments\");\nObject.defineProperty(exports, \"TextDocuments\", { enumerable: true, get: function () { return textDocuments_1.TextDocuments; } });\nconst notebook_1 = require(\"./notebook\");\nObject.defineProperty(exports, \"NotebookDocuments\", { enumerable: true, get: function () { return notebook_1.NotebookDocuments; } });\n__exportStar(require(\"./server\"), exports);\nvar ProposedFeatures;\n(function (ProposedFeatures) {\n    ProposedFeatures.all = {\n        __brand: 'features',\n    };\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst CallHierarchyFeature = (Base) => {\n    return class extends Base {\n        get callHierarchy() {\n            return {\n                onPrepare: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\n                    });\n                },\n                onIncomingCalls: (handler) => {\n                    const type = vscode_languageserver_protocol_1.CallHierarchyIncomingCallsRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onOutgoingCalls: (handler) => {\n                    const type = vscode_languageserver_protocol_1.CallHierarchyOutgoingCallsRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.CallHierarchyFeature = CallHierarchyFeature;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurationFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst ConfigurationFeature = (Base) => {\n    return class extends Base {\n        getConfiguration(arg) {\n            if (!arg) {\n                return this._getConfiguration({});\n            }\n            else if (Is.string(arg)) {\n                return this._getConfiguration({ section: arg });\n            }\n            else {\n                return this._getConfiguration(arg);\n            }\n        }\n        _getConfiguration(arg) {\n            let params = {\n                items: Array.isArray(arg) ? arg : [arg]\n            };\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then((result) => {\n                if (Array.isArray(result)) {\n                    return Array.isArray(arg) ? result : result[0];\n                }\n                else {\n                    return Array.isArray(arg) ? [] : null;\n                }\n            });\n        }\n    };\n};\nexports.ConfigurationFeature = ConfigurationFeature;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagnosticFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst DiagnosticFeature = (Base) => {\n    return class extends Base {\n        get diagnostics() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.DiagnosticRefreshRequest.type);\n                },\n                on: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.partialResult, params));\n                    });\n                },\n                onWorkspace: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.WorkspaceDiagnosticRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(vscode_languageserver_protocol_1.WorkspaceDiagnosticRequest.partialResult, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.DiagnosticFeature = DiagnosticFeature;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileOperationsFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst FileOperationsFeature = (Base) => {\n    return class extends Base {\n        onDidCreateFiles(handler) {\n            return this.connection.onNotification(vscode_languageserver_protocol_1.DidCreateFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onDidRenameFiles(handler) {\n            return this.connection.onNotification(vscode_languageserver_protocol_1.DidRenameFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onDidDeleteFiles(handler) {\n            return this.connection.onNotification(vscode_languageserver_protocol_1.DidDeleteFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onWillCreateFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillCreateFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n        onWillRenameFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillRenameFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n        onWillDeleteFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillDeleteFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n    };\n};\nexports.FileOperationsFeature = FileOperationsFeature;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlayHintFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst InlayHintFeature = (Base) => {\n    return class extends Base {\n        get inlayHint() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.InlayHintRefreshRequest.type);\n                },\n                on: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlayHintRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params));\n                    });\n                },\n                resolve: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlayHintResolveRequest.type, (params, cancel) => {\n                        return handler(params, cancel);\n                    });\n                }\n            };\n        }\n    };\n};\nexports.InlayHintFeature = InlayHintFeature;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineValueFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst InlineValueFeature = (Base) => {\n    return class extends Base {\n        get inlineValue() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.InlineValueRefreshRequest.type);\n                },\n                on: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlineValueRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.InlineValueFeature = InlineValueFeature;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingRangeFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst LinkedEditingRangeFeature = (Base) => {\n    return class extends Base {\n        onLinkedEditingRange(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.LinkedEditingRangeRequest.type, (params, cancel) => {\n                return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\n            });\n        }\n    };\n};\nexports.LinkedEditingRangeFeature = LinkedEditingRangeFeature;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonikerFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst MonikerFeature = (Base) => {\n    return class extends Base {\n        get moniker() {\n            return {\n                on: (handler) => {\n                    const type = vscode_languageserver_protocol_1.MonikerRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n            };\n        }\n    };\n};\nexports.MonikerFeature = MonikerFeature;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotebookDocuments = exports.NotebookSyncFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst textDocuments_1 = require(\"./textDocuments\");\nconst NotebookSyncFeature = (Base) => {\n    return class extends Base {\n        get synchronization() {\n            return {\n                onDidOpenNotebookDocument: (handler) => {\n                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidOpenNotebookDocumentNotification.type, (params) => {\n                        handler(params);\n                    });\n                },\n                onDidChangeNotebookDocument: (handler) => {\n                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeNotebookDocumentNotification.type, (params) => {\n                        handler(params);\n                    });\n                },\n                onDidSaveNotebookDocument: (handler) => {\n                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidSaveNotebookDocumentNotification.type, (params) => {\n                        handler(params);\n                    });\n                },\n                onDidCloseNotebookDocument: (handler) => {\n                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidCloseNotebookDocumentNotification.type, (params) => {\n                        handler(params);\n                    });\n                }\n            };\n        }\n    };\n};\nexports.NotebookSyncFeature = NotebookSyncFeature;\nclass CellTextDocumentConnection {\n    onDidOpenTextDocument(handler) {\n        this.openHandler = handler;\n        return vscode_languageserver_protocol_1.Disposable.create(() => { this.openHandler = undefined; });\n    }\n    openTextDocument(params) {\n        this.openHandler && this.openHandler(params);\n    }\n    onDidChangeTextDocument(handler) {\n        this.changeHandler = handler;\n        return vscode_languageserver_protocol_1.Disposable.create(() => { this.changeHandler = handler; });\n    }\n    changeTextDocument(params) {\n        this.changeHandler && this.changeHandler(params);\n    }\n    onDidCloseTextDocument(handler) {\n        this.closeHandler = handler;\n        return vscode_languageserver_protocol_1.Disposable.create(() => { this.closeHandler = undefined; });\n    }\n    closeTextDocument(params) {\n        this.closeHandler && this.closeHandler(params);\n    }\n    onWillSaveTextDocument() {\n        return CellTextDocumentConnection.NULL_DISPOSE;\n    }\n    onWillSaveTextDocumentWaitUntil() {\n        return CellTextDocumentConnection.NULL_DISPOSE;\n    }\n    onDidSaveTextDocument() {\n        return CellTextDocumentConnection.NULL_DISPOSE;\n    }\n}\nCellTextDocumentConnection.NULL_DISPOSE = Object.freeze({ dispose: () => { } });\nclass NotebookDocuments {\n    constructor(configurationOrTextDocuments) {\n        if (configurationOrTextDocuments instanceof textDocuments_1.TextDocuments) {\n            this._cellTextDocuments = configurationOrTextDocuments;\n        }\n        else {\n            this._cellTextDocuments = new textDocuments_1.TextDocuments(configurationOrTextDocuments);\n        }\n        this.notebookDocuments = new Map();\n        this.notebookCellMap = new Map();\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidChange = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\n    }\n    get cellTextDocuments() {\n        return this._cellTextDocuments;\n    }\n    getCellTextDocument(cell) {\n        return this._cellTextDocuments.get(cell.document);\n    }\n    getNotebookDocument(uri) {\n        return this.notebookDocuments.get(uri);\n    }\n    getNotebookCell(uri) {\n        const value = this.notebookCellMap.get(uri);\n        return value && value[0];\n    }\n    findNotebookDocumentForCell(cell) {\n        const key = typeof cell === 'string' ? cell : cell.document;\n        const value = this.notebookCellMap.get(key);\n        return value && value[1];\n    }\n    get onDidOpen() {\n        return this._onDidOpen.event;\n    }\n    get onDidSave() {\n        return this._onDidSave.event;\n    }\n    get onDidChange() {\n        return this._onDidChange.event;\n    }\n    get onDidClose() {\n        return this._onDidClose.event;\n    }\n    /**\n     * Listens for `low level` notification on the given connection to\n     * update the notebook documents managed by this instance.\n     *\n     * Please note that the connection only provides handlers not an event model. Therefore\n     * listening on a connection will overwrite the following handlers on a connection:\n     * `onDidOpenNotebookDocument`, `onDidChangeNotebookDocument`, `onDidSaveNotebookDocument`,\n     *  and `onDidCloseNotebookDocument`.\n     *\n     * @param connection The connection to listen on.\n     */\n    listen(connection) {\n        const cellTextDocumentConnection = new CellTextDocumentConnection();\n        const disposables = [];\n        disposables.push(this.cellTextDocuments.listen(cellTextDocumentConnection));\n        disposables.push(connection.notebooks.synchronization.onDidOpenNotebookDocument((params) => {\n            this.notebookDocuments.set(params.notebookDocument.uri, params.notebookDocument);\n            for (const cellTextDocument of params.cellTextDocuments) {\n                cellTextDocumentConnection.openTextDocument({ textDocument: cellTextDocument });\n            }\n            this.updateCellMap(params.notebookDocument);\n            this._onDidOpen.fire(params.notebookDocument);\n        }));\n        disposables.push(connection.notebooks.synchronization.onDidChangeNotebookDocument((params) => {\n            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);\n            if (notebookDocument === undefined) {\n                return;\n            }\n            notebookDocument.version = params.notebookDocument.version;\n            const oldMetadata = notebookDocument.metadata;\n            let metadataChanged = false;\n            const change = params.change;\n            if (change.metadata !== undefined) {\n                metadataChanged = true;\n                notebookDocument.metadata = change.metadata;\n            }\n            const opened = [];\n            const closed = [];\n            const data = [];\n            const text = [];\n            if (change.cells !== undefined) {\n                const changedCells = change.cells;\n                if (changedCells.structure !== undefined) {\n                    const array = changedCells.structure.array;\n                    notebookDocument.cells.splice(array.start, array.deleteCount, ...(array.cells !== undefined ? array.cells : []));\n                    // Additional open cell text documents.\n                    if (changedCells.structure.didOpen !== undefined) {\n                        for (const open of changedCells.structure.didOpen) {\n                            cellTextDocumentConnection.openTextDocument({ textDocument: open });\n                            opened.push(open.uri);\n                        }\n                    }\n                    // Additional closed cell test documents.\n                    if (changedCells.structure.didClose) {\n                        for (const close of changedCells.structure.didClose) {\n                            cellTextDocumentConnection.closeTextDocument({ textDocument: close });\n                            closed.push(close.uri);\n                        }\n                    }\n                }\n                if (changedCells.data !== undefined) {\n                    const cellUpdates = new Map(changedCells.data.map(cell => [cell.document, cell]));\n                    for (let i = 0; i <= notebookDocument.cells.length; i++) {\n                        const change = cellUpdates.get(notebookDocument.cells[i].document);\n                        if (change !== undefined) {\n                            const old = notebookDocument.cells.splice(i, 1, change);\n                            data.push({ old: old[0], new: change });\n                            cellUpdates.delete(change.document);\n                            if (cellUpdates.size === 0) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (changedCells.textContent !== undefined) {\n                    for (const cellTextDocument of changedCells.textContent) {\n                        cellTextDocumentConnection.changeTextDocument({ textDocument: cellTextDocument.document, contentChanges: cellTextDocument.changes });\n                        text.push(cellTextDocument.document.uri);\n                    }\n                }\n            }\n            // Update internal data structure.\n            this.updateCellMap(notebookDocument);\n            const changeEvent = { notebookDocument };\n            if (metadataChanged) {\n                changeEvent.metadata = { old: oldMetadata, new: notebookDocument.metadata };\n            }\n            const added = [];\n            for (const open of opened) {\n                added.push(this.getNotebookCell(open));\n            }\n            const removed = [];\n            for (const close of closed) {\n                removed.push(this.getNotebookCell(close));\n            }\n            const textContent = [];\n            for (const change of text) {\n                textContent.push(this.getNotebookCell(change));\n            }\n            if (added.length > 0 || removed.length > 0 || data.length > 0 || textContent.length > 0) {\n                changeEvent.cells = { added, removed, changed: { data, textContent } };\n            }\n            if (changeEvent.metadata !== undefined || changeEvent.cells !== undefined) {\n                this._onDidChange.fire(changeEvent);\n            }\n        }));\n        disposables.push(connection.notebooks.synchronization.onDidSaveNotebookDocument((params) => {\n            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);\n            if (notebookDocument === undefined) {\n                return;\n            }\n            this._onDidSave.fire(notebookDocument);\n        }));\n        disposables.push(connection.notebooks.synchronization.onDidCloseNotebookDocument((params) => {\n            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);\n            if (notebookDocument === undefined) {\n                return;\n            }\n            this._onDidClose.fire(notebookDocument);\n            for (const cellTextDocument of params.cellTextDocuments) {\n                cellTextDocumentConnection.closeTextDocument({ textDocument: cellTextDocument });\n            }\n            this.notebookDocuments.delete(params.notebookDocument.uri);\n            for (const cell of notebookDocument.cells) {\n                this.notebookCellMap.delete(cell.document);\n            }\n        }));\n        return vscode_languageserver_protocol_1.Disposable.create(() => { disposables.forEach(disposable => disposable.dispose()); });\n    }\n    updateCellMap(notebookDocument) {\n        for (const cell of notebookDocument.cells) {\n            this.notebookCellMap.set(cell.document, [cell, notebookDocument]);\n        }\n    }\n}\nexports.NotebookDocuments = NotebookDocuments;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attachPartialResult = exports.ProgressFeature = exports.attachWorkDone = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst uuid_1 = require(\"./utils/uuid\");\nclass WorkDoneProgressReporterImpl {\n    constructor(_connection, _token) {\n        this._connection = _connection;\n        this._token = _token;\n        WorkDoneProgressReporterImpl.Instances.set(this._token, this);\n    }\n    begin(title, percentage, message, cancellable) {\n        let param = {\n            kind: 'begin',\n            title,\n            percentage,\n            message,\n            cancellable\n        };\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n    }\n    report(arg0, arg1) {\n        let param = {\n            kind: 'report'\n        };\n        if (typeof arg0 === 'number') {\n            param.percentage = arg0;\n            if (arg1 !== undefined) {\n                param.message = arg1;\n            }\n        }\n        else {\n            param.message = arg0;\n        }\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n    }\n    done() {\n        WorkDoneProgressReporterImpl.Instances.delete(this._token);\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, { kind: 'end' });\n    }\n}\nWorkDoneProgressReporterImpl.Instances = new Map();\nclass WorkDoneProgressServerReporterImpl extends WorkDoneProgressReporterImpl {\n    constructor(connection, token) {\n        super(connection, token);\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n    }\n    get token() {\n        return this._source.token;\n    }\n    done() {\n        this._source.dispose();\n        super.done();\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nclass NullProgressReporter {\n    constructor() {\n    }\n    begin() {\n    }\n    report() {\n    }\n    done() {\n    }\n}\nclass NullProgressServerReporter extends NullProgressReporter {\n    constructor() {\n        super();\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n    }\n    get token() {\n        return this._source.token;\n    }\n    done() {\n        this._source.dispose();\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nfunction attachWorkDone(connection, params) {\n    if (params === undefined || params.workDoneToken === undefined) {\n        return new NullProgressReporter();\n    }\n    const token = params.workDoneToken;\n    delete params.workDoneToken;\n    return new WorkDoneProgressReporterImpl(connection, token);\n}\nexports.attachWorkDone = attachWorkDone;\nconst ProgressFeature = (Base) => {\n    return class extends Base {\n        constructor() {\n            super();\n            this._progressSupported = false;\n        }\n        initialize(capabilities) {\n            super.initialize(capabilities);\n            if (capabilities?.window?.workDoneProgress === true) {\n                this._progressSupported = true;\n                this.connection.onNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, (params) => {\n                    let progress = WorkDoneProgressReporterImpl.Instances.get(params.token);\n                    if (progress instanceof WorkDoneProgressServerReporterImpl || progress instanceof NullProgressServerReporter) {\n                        progress.cancel();\n                    }\n                });\n            }\n        }\n        attachWorkDoneProgress(token) {\n            if (token === undefined) {\n                return new NullProgressReporter();\n            }\n            else {\n                return new WorkDoneProgressReporterImpl(this.connection, token);\n            }\n        }\n        createWorkDoneProgress() {\n            if (this._progressSupported) {\n                const token = (0, uuid_1.generateUuid)();\n                return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, { token }).then(() => {\n                    const result = new WorkDoneProgressServerReporterImpl(this.connection, token);\n                    return result;\n                });\n            }\n            else {\n                return Promise.resolve(new NullProgressServerReporter());\n            }\n        }\n    };\n};\nexports.ProgressFeature = ProgressFeature;\nvar ResultProgress;\n(function (ResultProgress) {\n    ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();\n})(ResultProgress || (ResultProgress = {}));\nclass ResultProgressReporterImpl {\n    constructor(_connection, _token) {\n        this._connection = _connection;\n        this._token = _token;\n    }\n    report(data) {\n        this._connection.sendProgress(ResultProgress.type, this._token, data);\n    }\n}\nfunction attachPartialResult(connection, params) {\n    if (params === undefined || params.partialResultToken === undefined) {\n        return undefined;\n    }\n    const token = params.partialResultToken;\n    delete params.partialResultToken;\n    return new ResultProgressReporterImpl(connection, token);\n}\nexports.attachPartialResult = attachPartialResult;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensBuilder = exports.SemanticTokensDiff = exports.SemanticTokensFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst SemanticTokensFeature = (Base) => {\n    return class extends Base {\n        get semanticTokens() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.SemanticTokensRefreshRequest.type);\n                },\n                on: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onDelta: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onRange: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.SemanticTokensFeature = SemanticTokensFeature;\nclass SemanticTokensDiff {\n    constructor(originalSequence, modifiedSequence) {\n        this.originalSequence = originalSequence;\n        this.modifiedSequence = modifiedSequence;\n    }\n    computeDiff() {\n        const originalLength = this.originalSequence.length;\n        const modifiedLength = this.modifiedSequence.length;\n        let startIndex = 0;\n        while (startIndex < modifiedLength && startIndex < originalLength && this.originalSequence[startIndex] === this.modifiedSequence[startIndex]) {\n            startIndex++;\n        }\n        if (startIndex < modifiedLength && startIndex < originalLength) {\n            let originalEndIndex = originalLength - 1;\n            let modifiedEndIndex = modifiedLength - 1;\n            while (originalEndIndex >= startIndex && modifiedEndIndex >= startIndex && this.originalSequence[originalEndIndex] === this.modifiedSequence[modifiedEndIndex]) {\n                originalEndIndex--;\n                modifiedEndIndex--;\n            }\n            // if one moved behind the start index move them forward again\n            if (originalEndIndex < startIndex || modifiedEndIndex < startIndex) {\n                originalEndIndex++;\n                modifiedEndIndex++;\n            }\n            const deleteCount = originalEndIndex - startIndex + 1;\n            const newData = this.modifiedSequence.slice(startIndex, modifiedEndIndex + 1);\n            // If we moved behind the start index we could have missed a simple delete.\n            if (newData.length === 1 && newData[0] === this.originalSequence[originalEndIndex]) {\n                return [\n                    { start: startIndex, deleteCount: deleteCount - 1 }\n                ];\n            }\n            else {\n                return [\n                    { start: startIndex, deleteCount, data: newData }\n                ];\n            }\n        }\n        else if (startIndex < modifiedLength) {\n            return [\n                { start: startIndex, deleteCount: 0, data: this.modifiedSequence.slice(startIndex) }\n            ];\n        }\n        else if (startIndex < originalLength) {\n            return [\n                { start: startIndex, deleteCount: originalLength - startIndex }\n            ];\n        }\n        else {\n            // The two arrays are the same.\n            return [];\n        }\n    }\n}\nexports.SemanticTokensDiff = SemanticTokensDiff;\nclass SemanticTokensBuilder {\n    constructor() {\n        this._prevData = undefined;\n        this.initialize();\n    }\n    initialize() {\n        this._id = Date.now();\n        this._prevLine = 0;\n        this._prevChar = 0;\n        this._data = [];\n        this._dataLen = 0;\n    }\n    push(line, char, length, tokenType, tokenModifiers) {\n        let pushLine = line;\n        let pushChar = char;\n        if (this._dataLen > 0) {\n            pushLine -= this._prevLine;\n            if (pushLine === 0) {\n                pushChar -= this._prevChar;\n            }\n        }\n        this._data[this._dataLen++] = pushLine;\n        this._data[this._dataLen++] = pushChar;\n        this._data[this._dataLen++] = length;\n        this._data[this._dataLen++] = tokenType;\n        this._data[this._dataLen++] = tokenModifiers;\n        this._prevLine = line;\n        this._prevChar = char;\n    }\n    get id() {\n        return this._id.toString();\n    }\n    previousResult(id) {\n        if (this.id === id) {\n            this._prevData = this._data;\n        }\n        this.initialize();\n    }\n    build() {\n        this._prevData = undefined;\n        return {\n            resultId: this.id,\n            data: this._data\n        };\n    }\n    canBuildEdits() {\n        return this._prevData !== undefined;\n    }\n    buildEdits() {\n        if (this._prevData !== undefined) {\n            return {\n                resultId: this.id,\n                edits: (new SemanticTokensDiff(this._prevData, this._data)).computeDiff()\n            };\n        }\n        else {\n            return this.build();\n        }\n    }\n}\nexports.SemanticTokensBuilder = SemanticTokensBuilder;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConnection = exports.combineFeatures = exports.combineNotebooksFeatures = exports.combineLanguagesFeatures = exports.combineWorkspaceFeatures = exports.combineWindowFeatures = exports.combineClientFeatures = exports.combineTracerFeatures = exports.combineTelemetryFeatures = exports.combineConsoleFeatures = exports._NotebooksImpl = exports._LanguagesImpl = exports.BulkUnregistration = exports.BulkRegistration = exports.ErrorMessageTracker = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst UUID = require(\"./utils/uuid\");\nconst progress_1 = require(\"./progress\");\nconst configuration_1 = require(\"./configuration\");\nconst workspaceFolder_1 = require(\"./workspaceFolder\");\nconst callHierarchy_1 = require(\"./callHierarchy\");\nconst semanticTokens_1 = require(\"./semanticTokens\");\nconst showDocument_1 = require(\"./showDocument\");\nconst fileOperations_1 = require(\"./fileOperations\");\nconst linkedEditingRange_1 = require(\"./linkedEditingRange\");\nconst typeHierarchy_1 = require(\"./typeHierarchy\");\nconst inlineValue_1 = require(\"./inlineValue\");\nconst inlayHint_1 = require(\"./inlayHint\");\nconst diagnostic_1 = require(\"./diagnostic\");\nconst notebook_1 = require(\"./notebook\");\nconst moniker_1 = require(\"./moniker\");\nfunction null2Undefined(value) {\n    if (value === null) {\n        return undefined;\n    }\n    return value;\n}\n/**\n * Helps tracking error message. Equal occurrences of the same\n * message are only stored once. This class is for example\n * useful if text documents are validated in a loop and equal\n * error message should be folded into one.\n */\nclass ErrorMessageTracker {\n    constructor() {\n        this._messages = Object.create(null);\n    }\n    /**\n     * Add a message to the tracker.\n     *\n     * @param message The message to add.\n     */\n    add(message) {\n        let count = this._messages[message];\n        if (!count) {\n            count = 0;\n        }\n        count++;\n        this._messages[message] = count;\n    }\n    /**\n     * Send all tracked messages to the connection's window.\n     *\n     * @param connection The connection established between client and server.\n     */\n    sendErrors(connection) {\n        Object.keys(this._messages).forEach(message => {\n            connection.window.showErrorMessage(message);\n        });\n    }\n}\nexports.ErrorMessageTracker = ErrorMessageTracker;\nclass RemoteConsoleImpl {\n    constructor() {\n    }\n    rawAttach(connection) {\n        this._rawConnection = connection;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    initialize(_capabilities) {\n    }\n    error(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);\n    }\n    warn(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);\n    }\n    info(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);\n    }\n    log(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);\n    }\n    send(type, message) {\n        if (this._rawConnection) {\n            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message }).catch(() => {\n                (0, vscode_languageserver_protocol_1.RAL)().console.error(`Sending log message failed`);\n            });\n        }\n    }\n}\nclass _RemoteWindowImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    showErrorMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n    showWarningMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n    showInformationMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n}\nconst RemoteWindowImpl = (0, showDocument_1.ShowDocumentFeature)((0, progress_1.ProgressFeature)(_RemoteWindowImpl));\nvar BulkRegistration;\n(function (BulkRegistration) {\n    /**\n     * Creates a new bulk registration.\n     * @return an empty bulk registration.\n     */\n    function create() {\n        return new BulkRegistrationImpl();\n    }\n    BulkRegistration.create = create;\n})(BulkRegistration = exports.BulkRegistration || (exports.BulkRegistration = {}));\nclass BulkRegistrationImpl {\n    constructor() {\n        this._registrations = [];\n        this._registered = new Set();\n    }\n    add(type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        if (this._registered.has(method)) {\n            throw new Error(`${method} is already added to this registration`);\n        }\n        const id = UUID.generateUuid();\n        this._registrations.push({\n            id: id,\n            method: method,\n            registerOptions: registerOptions || {}\n        });\n        this._registered.add(method);\n    }\n    asRegistrationParams() {\n        return {\n            registrations: this._registrations\n        };\n    }\n}\nvar BulkUnregistration;\n(function (BulkUnregistration) {\n    function create() {\n        return new BulkUnregistrationImpl(undefined, []);\n    }\n    BulkUnregistration.create = create;\n})(BulkUnregistration = exports.BulkUnregistration || (exports.BulkUnregistration = {}));\nclass BulkUnregistrationImpl {\n    constructor(_connection, unregistrations) {\n        this._connection = _connection;\n        this._unregistrations = new Map();\n        unregistrations.forEach(unregistration => {\n            this._unregistrations.set(unregistration.method, unregistration);\n        });\n    }\n    get isAttached() {\n        return !!this._connection;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    add(unregistration) {\n        this._unregistrations.set(unregistration.method, unregistration);\n    }\n    dispose() {\n        let unregistrations = [];\n        for (let unregistration of this._unregistrations.values()) {\n            unregistrations.push(unregistration);\n        }\n        let params = {\n            unregisterations: unregistrations\n        };\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).catch(() => {\n            this._connection.console.info(`Bulk unregistration failed.`);\n        });\n    }\n    disposeSingle(arg) {\n        const method = Is.string(arg) ? arg : arg.method;\n        const unregistration = this._unregistrations.get(method);\n        if (!unregistration) {\n            return false;\n        }\n        let params = {\n            unregisterations: [unregistration]\n        };\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {\n            this._unregistrations.delete(method);\n        }, (_error) => {\n            this._connection.console.info(`Un-registering request handler for ${unregistration.id} failed.`);\n        });\n        return true;\n    }\n}\nclass RemoteClientImpl {\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {\n        if (typeOrRegistrations instanceof BulkRegistrationImpl) {\n            return this.registerMany(typeOrRegistrations);\n        }\n        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {\n            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);\n        }\n        else {\n            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);\n        }\n    }\n    registerSingle1(unregistration, type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        const id = UUID.generateUuid();\n        let params = {\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\n        };\n        if (!unregistration.isAttached) {\n            unregistration.attach(this.connection);\n        }\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\n            unregistration.add({ id: id, method: method });\n            return unregistration;\n        }, (_error) => {\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\n            return Promise.reject(_error);\n        });\n    }\n    registerSingle2(type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        const id = UUID.generateUuid();\n        let params = {\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\n        };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\n            return vscode_languageserver_protocol_1.Disposable.create(() => {\n                this.unregisterSingle(id, method).catch(() => { this.connection.console.info(`Un-registering capability with id ${id} failed.`); });\n            });\n        }, (_error) => {\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\n            return Promise.reject(_error);\n        });\n    }\n    unregisterSingle(id, method) {\n        let params = {\n            unregisterations: [{ id, method }]\n        };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).catch(() => {\n            this.connection.console.info(`Un-registering request handler for ${id} failed.`);\n        });\n    }\n    registerMany(registrations) {\n        let params = registrations.asRegistrationParams();\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {\n            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));\n        }, (_error) => {\n            this.connection.console.info(`Bulk registration failed.`);\n            return Promise.reject(_error);\n        });\n    }\n}\nclass _RemoteWorkspaceImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    applyEdit(paramOrEdit) {\n        function isApplyWorkspaceEditParams(value) {\n            return value && !!value.edit;\n        }\n        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);\n    }\n}\nconst RemoteWorkspaceImpl = (0, fileOperations_1.FileOperationsFeature)((0, workspaceFolder_1.WorkspaceFoldersFeature)((0, configuration_1.ConfigurationFeature)(_RemoteWorkspaceImpl)));\nclass TracerImpl {\n    constructor() {\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    set trace(value) {\n        this._trace = value;\n    }\n    log(message, verbose) {\n        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {\n            return;\n        }\n        this.connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {\n            message: message,\n            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined\n        }).catch(() => {\n            // Very hard to decide what to do. We tried to send a log\n            // message which failed so we can't simply send another :-(.\n        });\n    }\n}\nclass TelemetryImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    logEvent(data) {\n        this.connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data).catch(() => {\n            this.connection.console.log(`Sending TelemetryEventNotification failed`);\n        });\n    }\n}\nclass _LanguagesImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    attachWorkDoneProgress(params) {\n        return (0, progress_1.attachWorkDone)(this.connection, params);\n    }\n    attachPartialResultProgress(_type, params) {\n        return (0, progress_1.attachPartialResult)(this.connection, params);\n    }\n}\nexports._LanguagesImpl = _LanguagesImpl;\nconst LanguagesImpl = (0, moniker_1.MonikerFeature)((0, diagnostic_1.DiagnosticFeature)((0, inlayHint_1.InlayHintFeature)((0, inlineValue_1.InlineValueFeature)((0, typeHierarchy_1.TypeHierarchyFeature)((0, linkedEditingRange_1.LinkedEditingRangeFeature)((0, semanticTokens_1.SemanticTokensFeature)((0, callHierarchy_1.CallHierarchyFeature)(_LanguagesImpl))))))));\nclass _NotebooksImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    attachWorkDoneProgress(params) {\n        return (0, progress_1.attachWorkDone)(this.connection, params);\n    }\n    attachPartialResultProgress(_type, params) {\n        return (0, progress_1.attachPartialResult)(this.connection, params);\n    }\n}\nexports._NotebooksImpl = _NotebooksImpl;\nconst NotebooksImpl = (0, notebook_1.NotebookSyncFeature)(_NotebooksImpl);\nfunction combineConsoleFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineConsoleFeatures = combineConsoleFeatures;\nfunction combineTelemetryFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineTelemetryFeatures = combineTelemetryFeatures;\nfunction combineTracerFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineTracerFeatures = combineTracerFeatures;\nfunction combineClientFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineClientFeatures = combineClientFeatures;\nfunction combineWindowFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineWindowFeatures = combineWindowFeatures;\nfunction combineWorkspaceFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineWorkspaceFeatures = combineWorkspaceFeatures;\nfunction combineLanguagesFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineLanguagesFeatures = combineLanguagesFeatures;\nfunction combineNotebooksFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineNotebooksFeatures = combineNotebooksFeatures;\nfunction combineFeatures(one, two) {\n    function combine(one, two, func) {\n        if (one && two) {\n            return func(one, two);\n        }\n        else if (one) {\n            return one;\n        }\n        else {\n            return two;\n        }\n    }\n    let result = {\n        __brand: 'features',\n        console: combine(one.console, two.console, combineConsoleFeatures),\n        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),\n        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),\n        client: combine(one.client, two.client, combineClientFeatures),\n        window: combine(one.window, two.window, combineWindowFeatures),\n        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures),\n        languages: combine(one.languages, two.languages, combineLanguagesFeatures),\n        notebooks: combine(one.notebooks, two.notebooks, combineNotebooksFeatures)\n    };\n    return result;\n}\nexports.combineFeatures = combineFeatures;\nfunction createConnection(connectionFactory, watchDog, factories) {\n    const logger = (factories && factories.console ? new (factories.console(RemoteConsoleImpl))() : new RemoteConsoleImpl());\n    const connection = connectionFactory(logger);\n    logger.rawAttach(connection);\n    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());\n    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());\n    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());\n    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());\n    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());\n    const languages = (factories && factories.languages ? new (factories.languages(LanguagesImpl))() : new LanguagesImpl());\n    const notebooks = (factories && factories.notebooks ? new (factories.notebooks(NotebooksImpl))() : new NotebooksImpl());\n    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace, languages, notebooks];\n    function asPromise(value) {\n        if (value instanceof Promise) {\n            return value;\n        }\n        else if (Is.thenable(value)) {\n            return new Promise((resolve, reject) => {\n                value.then((resolved) => resolve(resolved), (error) => reject(error));\n            });\n        }\n        else {\n            return Promise.resolve(value);\n        }\n    }\n    let shutdownHandler = undefined;\n    let initializeHandler = undefined;\n    let exitHandler = undefined;\n    let protocolConnection = {\n        listen: () => connection.listen(),\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\n        onRequest: (type, handler) => connection.onRequest(type, handler),\n        sendNotification: (type, param) => {\n            const method = Is.string(type) ? type : type.method;\n            if (arguments.length === 1) {\n                return connection.sendNotification(method);\n            }\n            else {\n                return connection.sendNotification(method, param);\n            }\n        },\n        onNotification: (type, handler) => connection.onNotification(type, handler),\n        onProgress: connection.onProgress,\n        sendProgress: connection.sendProgress,\n        onInitialize: (handler) => {\n            initializeHandler = handler;\n            return {\n                dispose: () => {\n                    initializeHandler = undefined;\n                }\n            };\n        },\n        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),\n        onShutdown: (handler) => {\n            shutdownHandler = handler;\n            return {\n                dispose: () => {\n                    shutdownHandler = undefined;\n                }\n            };\n        },\n        onExit: (handler) => {\n            exitHandler = handler;\n            return {\n                dispose: () => {\n                    exitHandler = undefined;\n                }\n            };\n        },\n        get console() { return logger; },\n        get telemetry() { return telemetry; },\n        get tracer() { return tracer; },\n        get client() { return client; },\n        get window() { return remoteWindow; },\n        get workspace() { return workspace; },\n        get languages() { return languages; },\n        get notebooks() { return notebooks; },\n        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),\n        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),\n        __textDocumentSync: undefined,\n        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),\n        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),\n        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),\n        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),\n        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),\n        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),\n        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),\n        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),\n        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onWorkspaceSymbolResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, handler),\n        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onCodeActionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onSelectionRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        dispose: () => connection.dispose()\n    };\n    for (let remote of allRemotes) {\n        remote.attach(protocolConnection);\n    }\n    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {\n        watchDog.initialize(params);\n        if (Is.string(params.trace)) {\n            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);\n        }\n        for (let remote of allRemotes) {\n            remote.initialize(params.capabilities);\n        }\n        if (initializeHandler) {\n            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token, (0, progress_1.attachWorkDone)(connection, params), undefined);\n            return asPromise(result).then((value) => {\n                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {\n                    return value;\n                }\n                let result = value;\n                if (!result) {\n                    result = { capabilities: {} };\n                }\n                let capabilities = result.capabilities;\n                if (!capabilities) {\n                    capabilities = {};\n                    result.capabilities = capabilities;\n                }\n                if (capabilities.textDocumentSync === undefined || capabilities.textDocumentSync === null) {\n                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n                }\n                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {\n                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n                }\n                for (let remote of allRemotes) {\n                    remote.fillServerCapabilities(capabilities);\n                }\n                return result;\n            });\n        }\n        else {\n            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };\n            for (let remote of allRemotes) {\n                remote.fillServerCapabilities(result.capabilities);\n            }\n            return result;\n        }\n    });\n    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {\n        watchDog.shutdownReceived = true;\n        if (shutdownHandler) {\n            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);\n        }\n        else {\n            return undefined;\n        }\n    });\n    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {\n        try {\n            if (exitHandler) {\n                exitHandler();\n            }\n        }\n        finally {\n            if (watchDog.shutdownReceived) {\n                watchDog.exit(0);\n            }\n            else {\n                watchDog.exit(1);\n            }\n        }\n    });\n    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {\n        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);\n    });\n    return protocolConnection;\n}\nexports.createConnection = createConnection;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShowDocumentFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst ShowDocumentFeature = (Base) => {\n    return class extends Base {\n        showDocument(params) {\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowDocumentRequest.type, params);\n        }\n    };\n};\nexports.ShowDocumentFeature = ShowDocumentFeature;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDocuments = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\n/**\n * A manager for simple text documents. The manager requires at a minimum that\n * the server registered for the following text document sync events in the\n * initialize handler or via dynamic registration:\n *\n * - open and close events.\n * - change events.\n *\n * Registering for save and will save events is optional.\n */\nclass TextDocuments {\n    /**\n     * Create a new text document manager.\n     */\n    constructor(configuration) {\n        this._configuration = configuration;\n        this._syncedDocuments = new Map();\n        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\n        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been opened.\n     */\n    get onDidOpen() {\n        return this._onDidOpen.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been opened or the content changes.\n     */\n    get onDidChangeContent() {\n        return this._onDidChangeContent.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * will be saved.\n     */\n    get onWillSave() {\n        return this._onWillSave.event;\n    }\n    /**\n     * Sets a handler that will be called if a participant wants to provide\n     * edits during a text document save.\n     */\n    onWillSaveWaitUntil(handler) {\n        this._willSaveWaitUntil = handler;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been saved.\n     */\n    get onDidSave() {\n        return this._onDidSave.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been closed.\n     */\n    get onDidClose() {\n        return this._onDidClose.event;\n    }\n    /**\n     * Returns the document for the given URI. Returns undefined if\n     * the document is not managed by this instance.\n     *\n     * @param uri The text document's URI to retrieve.\n     * @return the text document or `undefined`.\n     */\n    get(uri) {\n        return this._syncedDocuments.get(uri);\n    }\n    /**\n     * Returns all text documents managed by this instance.\n     *\n     * @return all text documents.\n     */\n    all() {\n        return Array.from(this._syncedDocuments.values());\n    }\n    /**\n     * Returns the URIs of all text documents managed by this instance.\n     *\n     * @return the URI's of all text documents.\n     */\n    keys() {\n        return Array.from(this._syncedDocuments.keys());\n    }\n    /**\n     * Listens for `low level` notification on the given connection to\n     * update the text documents managed by this instance.\n     *\n     * Please note that the connection only provides handlers not an event model. Therefore\n     * listening on a connection will overwrite the following handlers on a connection:\n     * `onDidOpenTextDocument`, `onDidChangeTextDocument`, `onDidCloseTextDocument`,\n     * `onWillSaveTextDocument`, `onWillSaveTextDocumentWaitUntil` and `onDidSaveTextDocument`.\n     *\n     * Use the corresponding events on the TextDocuments instance instead.\n     *\n     * @param connection The connection to listen on.\n     */\n    listen(connection) {\n        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental;\n        const disposables = [];\n        disposables.push(connection.onDidOpenTextDocument((event) => {\n            const td = event.textDocument;\n            const document = this._configuration.create(td.uri, td.languageId, td.version, td.text);\n            this._syncedDocuments.set(td.uri, document);\n            const toFire = Object.freeze({ document });\n            this._onDidOpen.fire(toFire);\n            this._onDidChangeContent.fire(toFire);\n        }));\n        disposables.push(connection.onDidChangeTextDocument((event) => {\n            const td = event.textDocument;\n            const changes = event.contentChanges;\n            if (changes.length === 0) {\n                return;\n            }\n            const { version } = td;\n            if (version === null || version === undefined) {\n                throw new Error(`Received document change event for ${td.uri} without valid version identifier`);\n            }\n            let syncedDocument = this._syncedDocuments.get(td.uri);\n            if (syncedDocument !== undefined) {\n                syncedDocument = this._configuration.update(syncedDocument, changes, version);\n                this._syncedDocuments.set(td.uri, syncedDocument);\n                this._onDidChangeContent.fire(Object.freeze({ document: syncedDocument }));\n            }\n        }));\n        disposables.push(connection.onDidCloseTextDocument((event) => {\n            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);\n            if (syncedDocument !== undefined) {\n                this._syncedDocuments.delete(event.textDocument.uri);\n                this._onDidClose.fire(Object.freeze({ document: syncedDocument }));\n            }\n        }));\n        disposables.push(connection.onWillSaveTextDocument((event) => {\n            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);\n            if (syncedDocument !== undefined) {\n                this._onWillSave.fire(Object.freeze({ document: syncedDocument, reason: event.reason }));\n            }\n        }));\n        disposables.push(connection.onWillSaveTextDocumentWaitUntil((event, token) => {\n            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);\n            if (syncedDocument !== undefined && this._willSaveWaitUntil) {\n                return this._willSaveWaitUntil(Object.freeze({ document: syncedDocument, reason: event.reason }), token);\n            }\n            else {\n                return [];\n            }\n        }));\n        disposables.push(connection.onDidSaveTextDocument((event) => {\n            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);\n            if (syncedDocument !== undefined) {\n                this._onDidSave.fire(Object.freeze({ document: syncedDocument }));\n            }\n        }));\n        return vscode_languageserver_protocol_1.Disposable.create(() => { disposables.forEach(disposable => disposable.dispose()); });\n    }\n}\nexports.TextDocuments = TextDocuments;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeHierarchyFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst TypeHierarchyFeature = (Base) => {\n    return class extends Base {\n        get typeHierarchy() {\n            return {\n                onPrepare: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\n                    });\n                },\n                onSupertypes: (handler) => {\n                    const type = vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onSubtypes: (handler) => {\n                    const type = vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.TypeHierarchyFeature = TypeHierarchyFeature;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction thenable(value) {\n    return value && func(value.then);\n}\nexports.thenable = thenable;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = void 0;\nclass ValueUUID {\n    constructor(_value) {\n        this._value = _value;\n        // empty\n    }\n    asHex() {\n        return this._value;\n    }\n    equals(other) {\n        return this.asHex() === other.asHex();\n    }\n}\nclass V4UUID extends ValueUUID {\n    constructor() {\n        super([\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            '4',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._oneOf(V4UUID._timeHighBits),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n        ].join(''));\n    }\n    static _oneOf(array) {\n        return array[Math.floor(array.length * Math.random())];\n    }\n    static _randomHex() {\n        return V4UUID._oneOf(V4UUID._chars);\n    }\n}\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n/**\n * An empty UUID that contains only zeros.\n */\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\nfunction v4() {\n    return new V4UUID();\n}\nexports.v4 = v4;\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nfunction isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexports.isUUID = isUUID;\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nfunction parse(value) {\n    if (!isUUID(value)) {\n        throw new Error('invalid uuid');\n    }\n    return new ValueUUID(value);\n}\nexports.parse = parse;\nfunction generateUuid() {\n    return v4().asHex();\n}\nexports.generateUuid = generateUuid;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceFoldersFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst WorkspaceFoldersFeature = (Base) => {\n    return class extends Base {\n        constructor() {\n            super();\n            this._notificationIsAutoRegistered = false;\n        }\n        initialize(capabilities) {\n            super.initialize(capabilities);\n            let workspaceCapabilities = capabilities.workspace;\n            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {\n                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();\n                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {\n                    this._onDidChangeWorkspaceFolders.fire(params.event);\n                });\n            }\n        }\n        fillServerCapabilities(capabilities) {\n            super.fillServerCapabilities(capabilities);\n            const changeNotifications = capabilities.workspace?.workspaceFolders?.changeNotifications;\n            this._notificationIsAutoRegistered = changeNotifications === true || typeof changeNotifications === 'string';\n        }\n        getWorkspaceFolders() {\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);\n        }\n        get onDidChangeWorkspaceFolders() {\n            if (!this._onDidChangeWorkspaceFolders) {\n                throw new Error('Client doesn\\'t support sending workspace folder change events.');\n            }\n            if (!this._notificationIsAutoRegistered && !this._unregistration) {\n                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);\n            }\n            return this._onDidChangeWorkspaceFolders.event;\n        }\n    };\n};\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveModulePath = exports.FileSystem = exports.resolveGlobalYarnPath = exports.resolveGlobalNodePath = exports.resolve = exports.uriToFilePath = void 0;\nconst url = require(\"url\");\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst child_process_1 = require(\"child_process\");\n/**\n * @deprecated Use the `vscode-uri` npm module which provides a more\n * complete implementation of handling VS Code URIs.\n */\nfunction uriToFilePath(uri) {\n    let parsed = url.parse(uri);\n    if (parsed.protocol !== 'file:' || !parsed.path) {\n        return undefined;\n    }\n    let segments = parsed.path.split('/');\n    for (var i = 0, len = segments.length; i < len; i++) {\n        segments[i] = decodeURIComponent(segments[i]);\n    }\n    if (process.platform === 'win32' && segments.length > 1) {\n        let first = segments[0];\n        let second = segments[1];\n        // Do we have a drive letter and we started with a / which is the\n        // case if the first segement is empty (see split above)\n        if (first.length === 0 && second.length > 1 && second[1] === ':') {\n            // Remove first slash\n            segments.shift();\n        }\n    }\n    return path.normalize(segments.join('/'));\n}\nexports.uriToFilePath = uriToFilePath;\nfunction isWindows() {\n    return process.platform === 'win32';\n}\nfunction resolve(moduleName, nodePath, cwd, tracer) {\n    const nodePathKey = 'NODE_PATH';\n    const app = [\n        'var p = process;',\n        'p.on(\\'message\\',function(m){',\n        'if(m.c===\\'e\\'){',\n        'p.exit(0);',\n        '}',\n        'else if(m.c===\\'rs\\'){',\n        'try{',\n        'var r=require.resolve(m.a);',\n        'p.send({c:\\'r\\',s:true,r:r});',\n        '}',\n        'catch(err){',\n        'p.send({c:\\'r\\',s:false});',\n        '}',\n        '}',\n        '});'\n    ].join('');\n    return new Promise((resolve, reject) => {\n        let env = process.env;\n        let newEnv = Object.create(null);\n        Object.keys(env).forEach(key => newEnv[key] = env[key]);\n        if (nodePath && fs.existsSync(nodePath) /* see issue 545 */) {\n            if (newEnv[nodePathKey]) {\n                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];\n            }\n            else {\n                newEnv[nodePathKey] = nodePath;\n            }\n            if (tracer) {\n                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);\n            }\n        }\n        newEnv['ELECTRON_RUN_AS_NODE'] = '1';\n        try {\n            let cp = (0, child_process_1.fork)('', [], {\n                cwd: cwd,\n                env: newEnv,\n                execArgv: ['-e', app]\n            });\n            if (cp.pid === void 0) {\n                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));\n                return;\n            }\n            cp.on('error', (error) => {\n                reject(error);\n            });\n            cp.on('message', (message) => {\n                if (message.c === 'r') {\n                    cp.send({ c: 'e' });\n                    if (message.s) {\n                        resolve(message.r);\n                    }\n                    else {\n                        reject(new Error(`Failed to resolve module: ${moduleName}`));\n                    }\n                }\n            });\n            let message = {\n                c: 'rs',\n                a: moduleName\n            };\n            cp.send(message);\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\nexports.resolve = resolve;\n/**\n * Resolve the global npm package path.\n * @deprecated Since this depends on the used package manager and their version the best is that servers\n * implement this themselves since they know best what kind of package managers to support.\n * @param tracer the tracer to use\n */\nfunction resolveGlobalNodePath(tracer) {\n    let npmCommand = 'npm';\n    const env = Object.create(null);\n    Object.keys(process.env).forEach(key => env[key] = process.env[key]);\n    env['NO_UPDATE_NOTIFIER'] = 'true';\n    const options = {\n        encoding: 'utf8',\n        env\n    };\n    if (isWindows()) {\n        npmCommand = 'npm.cmd';\n        options.shell = true;\n    }\n    let handler = () => { };\n    try {\n        process.on('SIGPIPE', handler);\n        let stdout = (0, child_process_1.spawnSync)(npmCommand, ['config', 'get', 'prefix'], options).stdout;\n        if (!stdout) {\n            if (tracer) {\n                tracer(`'npm config get prefix' didn't return a value.`);\n            }\n            return undefined;\n        }\n        let prefix = stdout.trim();\n        if (tracer) {\n            tracer(`'npm config get prefix' value is: ${prefix}`);\n        }\n        if (prefix.length > 0) {\n            if (isWindows()) {\n                return path.join(prefix, 'node_modules');\n            }\n            else {\n                return path.join(prefix, 'lib', 'node_modules');\n            }\n        }\n        return undefined;\n    }\n    catch (err) {\n        return undefined;\n    }\n    finally {\n        process.removeListener('SIGPIPE', handler);\n    }\n}\nexports.resolveGlobalNodePath = resolveGlobalNodePath;\n/*\n * Resolve the global yarn pakage path.\n * @deprecated Since this depends on the used package manager and their version the best is that servers\n * implement this themselves since they know best what kind of package managers to support.\n * @param tracer the tracer to use\n */\nfunction resolveGlobalYarnPath(tracer) {\n    let yarnCommand = 'yarn';\n    let options = {\n        encoding: 'utf8'\n    };\n    if (isWindows()) {\n        yarnCommand = 'yarn.cmd';\n        options.shell = true;\n    }\n    let handler = () => { };\n    try {\n        process.on('SIGPIPE', handler);\n        let results = (0, child_process_1.spawnSync)(yarnCommand, ['global', 'dir', '--json'], options);\n        let stdout = results.stdout;\n        if (!stdout) {\n            if (tracer) {\n                tracer(`'yarn global dir' didn't return a value.`);\n                if (results.stderr) {\n                    tracer(results.stderr);\n                }\n            }\n            return undefined;\n        }\n        let lines = stdout.trim().split(/\\r?\\n/);\n        for (let line of lines) {\n            try {\n                let yarn = JSON.parse(line);\n                if (yarn.type === 'log') {\n                    return path.join(yarn.data, 'node_modules');\n                }\n            }\n            catch (e) {\n                // Do nothing. Ignore the line\n            }\n        }\n        return undefined;\n    }\n    catch (err) {\n        return undefined;\n    }\n    finally {\n        process.removeListener('SIGPIPE', handler);\n    }\n}\nexports.resolveGlobalYarnPath = resolveGlobalYarnPath;\nvar FileSystem;\n(function (FileSystem) {\n    let _isCaseSensitive = undefined;\n    function isCaseSensitive() {\n        if (_isCaseSensitive !== void 0) {\n            return _isCaseSensitive;\n        }\n        if (process.platform === 'win32') {\n            _isCaseSensitive = false;\n        }\n        else {\n            // convert current file name to upper case / lower case and check if file exists\n            // (guards against cases when name is already all uppercase or lowercase)\n            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());\n        }\n        return _isCaseSensitive;\n    }\n    FileSystem.isCaseSensitive = isCaseSensitive;\n    function isParent(parent, child) {\n        if (isCaseSensitive()) {\n            return path.normalize(child).indexOf(path.normalize(parent)) === 0;\n        }\n        else {\n            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) === 0;\n        }\n    }\n    FileSystem.isParent = isParent;\n})(FileSystem = exports.FileSystem || (exports.FileSystem = {}));\nfunction resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {\n    if (nodePath) {\n        if (!path.isAbsolute(nodePath)) {\n            nodePath = path.join(workspaceRoot, nodePath);\n        }\n        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {\n            if (FileSystem.isParent(nodePath, value)) {\n                return value;\n            }\n            else {\n                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));\n            }\n        }).then(undefined, (_error) => {\n            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\n        });\n    }\n    else {\n        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\n    }\n}\nexports.resolveModulePath = resolveModulePath;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConnection = exports.Files = void 0;\nconst Is = require(\"../common/utils/is\");\nconst server_1 = require(\"../common/server\");\nconst fm = require(\"./files\");\nconst node_1 = require(\"vscode-languageserver-protocol/node\");\n__exportStar(require(\"vscode-languageserver-protocol/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nvar Files;\n(function (Files) {\n    Files.uriToFilePath = fm.uriToFilePath;\n    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;\n    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;\n    Files.resolve = fm.resolve;\n    Files.resolveModulePath = fm.resolveModulePath;\n})(Files = exports.Files || (exports.Files = {}));\nlet _protocolConnection;\nfunction endProtocolConnection() {\n    if (_protocolConnection === undefined) {\n        return;\n    }\n    try {\n        _protocolConnection.end();\n    }\n    catch (_err) {\n        // Ignore. The client process could have already\n        // did and we can't send an end into the connection.\n    }\n}\nlet _shutdownReceived = false;\nlet exitTimer = undefined;\nfunction setupExitTimer() {\n    const argName = '--clientProcessId';\n    function runTimer(value) {\n        try {\n            let processId = parseInt(value);\n            if (!isNaN(processId)) {\n                exitTimer = setInterval(() => {\n                    try {\n                        process.kill(processId, 0);\n                    }\n                    catch (ex) {\n                        // Parent process doesn't exist anymore. Exit the server.\n                        endProtocolConnection();\n                        process.exit(_shutdownReceived ? 0 : 1);\n                    }\n                }, 3000);\n            }\n        }\n        catch (e) {\n            // Ignore errors;\n        }\n    }\n    for (let i = 2; i < process.argv.length; i++) {\n        let arg = process.argv[i];\n        if (arg === argName && i + 1 < process.argv.length) {\n            runTimer(process.argv[i + 1]);\n            return;\n        }\n        else {\n            let args = arg.split('=');\n            if (args[0] === argName) {\n                runTimer(args[1]);\n            }\n        }\n    }\n}\nsetupExitTimer();\nconst watchDog = {\n    initialize: (params) => {\n        const processId = params.processId;\n        if (Is.number(processId) && exitTimer === undefined) {\n            // We received a parent process id. Set up a timer to periodically check\n            // if the parent is still alive.\n            setInterval(() => {\n                try {\n                    process.kill(processId, 0);\n                }\n                catch (ex) {\n                    // Parent process doesn't exist anymore. Exit the server.\n                    process.exit(_shutdownReceived ? 0 : 1);\n                }\n            }, 3000);\n        }\n    },\n    get shutdownReceived() {\n        return _shutdownReceived;\n    },\n    set shutdownReceived(value) {\n        _shutdownReceived = value;\n    },\n    exit: (code) => {\n        endProtocolConnection();\n        process.exit(code);\n    }\n};\nfunction createConnection(arg1, arg2, arg3, arg4) {\n    let factories;\n    let input;\n    let output;\n    let options;\n    if (arg1 !== void 0 && arg1.__brand === 'features') {\n        factories = arg1;\n        arg1 = arg2;\n        arg2 = arg3;\n        arg3 = arg4;\n    }\n    if (node_1.ConnectionStrategy.is(arg1) || node_1.ConnectionOptions.is(arg1)) {\n        options = arg1;\n    }\n    else {\n        input = arg1;\n        output = arg2;\n        options = arg3;\n    }\n    return _createConnection(input, output, options, factories);\n}\nexports.createConnection = createConnection;\nfunction _createConnection(input, output, options, factories) {\n    if (!input && !output && process.argv.length > 2) {\n        let port = void 0;\n        let pipeName = void 0;\n        let argv = process.argv.slice(2);\n        for (let i = 0; i < argv.length; i++) {\n            let arg = argv[i];\n            if (arg === '--node-ipc') {\n                input = new node_1.IPCMessageReader(process);\n                output = new node_1.IPCMessageWriter(process);\n                break;\n            }\n            else if (arg === '--stdio') {\n                input = process.stdin;\n                output = process.stdout;\n                break;\n            }\n            else if (arg === '--socket') {\n                port = parseInt(argv[i + 1]);\n                break;\n            }\n            else if (arg === '--pipe') {\n                pipeName = argv[i + 1];\n                break;\n            }\n            else {\n                var args = arg.split('=');\n                if (args[0] === '--socket') {\n                    port = parseInt(args[1]);\n                    break;\n                }\n                else if (args[0] === '--pipe') {\n                    pipeName = args[1];\n                    break;\n                }\n            }\n        }\n        if (port) {\n            let transport = (0, node_1.createServerSocketTransport)(port);\n            input = transport[0];\n            output = transport[1];\n        }\n        else if (pipeName) {\n            let transport = (0, node_1.createServerPipeTransport)(pipeName);\n            input = transport[0];\n            output = transport[1];\n        }\n    }\n    var commandLineMessage = 'Use arguments of createConnection or set command line parameters: \\'--node-ipc\\', \\'--stdio\\' or \\'--socket={number}\\'';\n    if (!input) {\n        throw new Error('Connection input stream is not set. ' + commandLineMessage);\n    }\n    if (!output) {\n        throw new Error('Connection output stream is not set. ' + commandLineMessage);\n    }\n    // Backwards compatibility\n    if (Is.func(input.read) && Is.func(input.on)) {\n        let inputStream = input;\n        inputStream.on('end', () => {\n            endProtocolConnection();\n            process.exit(_shutdownReceived ? 0 : 1);\n        });\n        inputStream.on('close', () => {\n            endProtocolConnection();\n            process.exit(_shutdownReceived ? 0 : 1);\n        });\n    }\n    const connectionFactory = (logger) => {\n        const result = (0, node_1.createProtocolConnection)(input, output, logger, options);\n        return result;\n    };\n    return (0, server_1.createConnection)(connectionFactory, watchDog, factories);\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r=e();for(var n in r)(\"object\"==typeof exports?exports:t)[n]=r[n]}}(this,(()=>(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,a=0;a<=t.length;++a){if(a<t.length)r=t.charCodeAt(a);else{if(47===r)break;r=47}if(47===r){if(o===a-1||1===s);else if(o!==a-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var h=n.lastIndexOf(\"/\");if(h!==n.length-1){-1===h?(n=\"\",i=0):i=(n=n.slice(0,h)).length-1-n.lastIndexOf(\"/\"),o=a,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=a,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,a):n=t.slice(o+1,a),i=a-o-1;o=a,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,a=1;a<r.length&&47===r.charCodeAt(a);++a);for(var h=r.length-a,c=s<h?s:h,f=-1,u=0;u<=c;++u){if(u===c){if(h>c){if(47===r.charCodeAt(a+u))return r.slice(a+u+1);if(0===u)return r.slice(a+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(a+u))break;47===l&&(f=u)}var d=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===d.length?d+=\"..\":d+=\"/..\");return d.length>0?d+r.slice(a+f):(a+=f,47===r.charCodeAt(a)&&++a,r.slice(a))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var a=r.length-1,h=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===h&&(s=!1,h=n+1),a>=0&&(c===r.charCodeAt(a)?-1==--a&&(o=n):(a=-1,o=h))}return i===o?o=h:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,a=t.length-1;a>=0;--a){var h=t.charCodeAt(a);if(47!==h)-1===i&&(o=!1,i=a+1),46===h?-1===r?r=a:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=a+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,a=0,h=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===h&&(c=!1,h=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){a=f+1;break}return-1===s||-1===h||0===u||1===u&&s===h-1&&s===a+1?-1!==h&&(r.base=r.name=0===a&&o?t.slice(1,h):t.slice(a,h)):(0===a&&o?(r.name=t.slice(1,s),r.base=t.slice(1,h)):(r.name=t.slice(a,s),r.base=t.slice(a,h)),r.ext=t.slice(s,h)),a>0?r.dir=t.slice(0,a-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n},674:(t,e)=>{if(Object.defineProperty(e,\"__esModule\",{value:!0}),e.isWindows=void 0,\"object\"==typeof process)e.isWindows=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let t=navigator.userAgent;e.isWindows=t.indexOf(\"Windows\")>=0}},796:(t,e,r)=>{Object.defineProperty(e,\"__esModule\",{value:!0}),e.uriToFsPath=e.URI=void 0;const n=r(674),i=/^\\w[\\w\\d+.-]*$/,o=/^\\//,s=/^\\/\\//;function a(t,e){if(!t.scheme&&e)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!i.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!o.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(s.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",c=\"/\",f=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class u{static isUri(t){return t instanceof u||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==c&&(e=c+e):e=c}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,a(this,o))}get fsPath(){return v(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new d(e,r,n,i,o)}static parse(t,e=!1){const r=f.exec(t);return r?new d(r[2]||h,w(r[4]||h),w(r[5]||h),w(r[7]||h),w(r[9]||h),e):new d(h,h,h,h,h)}static file(t){let e=h;if(n.isWindows&&(t=t.replace(/\\\\/g,c)),t[0]===c&&t[1]===c){const r=t.indexOf(c,2);-1===r?(e=t.substring(2),t=c):(e=t.substring(2,r),t=t.substring(r)||c)}return new d(\"file\",e,t,h,h)}static from(t){const e=new d(t.scheme,t.authority,t.path,t.query,t.fragment);return a(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof u)return t;{const e=new d(t);return e._formatted=t.external,e._fsPath=t._sep===l?t.fsPath:null,e}}return t}}e.URI=u;const l=n.isWindows?1:void 0;class d extends u{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=v(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=l),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const p={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function g(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=p[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function m(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=p[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function v(t,e){let r;return r=t.authority&&t.path.length>1&&\"file\"===t.scheme?`//${t.authority}${t.path}`:47===t.path.charCodeAt(0)&&(t.path.charCodeAt(1)>=65&&t.path.charCodeAt(1)<=90||t.path.charCodeAt(1)>=97&&t.path.charCodeAt(1)<=122)&&58===t.path.charCodeAt(2)?e?t.path.substr(1):t.path[1].toLowerCase()+t.path.substr(2):t.path,n.isWindows&&(r=r.replace(/\\//g,\"\\\\\")),r}function y(t,e){const r=e?m:g;let n=\"\",{scheme:i,authority:o,path:s,query:a,fragment:h}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=c,n+=c),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return a&&(n+=\"?\",n+=r(a,!1,!1)),h&&(n+=\"#\",n+=e?h:g(h,!1,!1)),n}function b(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+b(t.substr(3)):t}}e.uriToFsPath=v;const C=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function w(t){return t.match(C)?t.replace(C,(t=>b(t))):t}},679:function(t,e,r){var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!(\"get\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,\"default\",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)\"default\"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&n(e,t,r);return i(e,t),e};Object.defineProperty(e,\"__esModule\",{value:!0}),e.Utils=void 0;const s=o(r(470)),a=s.posix||s,h=\"/\";var c;!function(t){t.joinPath=function(t,...e){return t.with({path:a.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==h&&(r=h+r,n=!0);let i=a.resolve(r,...e);return n&&i[0]===h&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===h)return t;let e=a.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return a.basename(t.path)},t.extname=function(t){return a.extname(t.path)}}(c||(e.Utils=c={}))}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n].call(o.exports,o,o.exports,r),o.exports}var n={};return(()=>{var t=n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.Utils=t.URI=void 0;const e=r(796);Object.defineProperty(t,\"URI\",{enumerable:!0,get:function(){return e.URI}});const i=r(679);Object.defineProperty(t,\"Utils\",{enumerable:!0,get:function(){return i.Utils}})})(),n})()));\n//# sourceMappingURL=index.js.map","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"net\");","module.exports = require(\"node:child_process\");","module.exports = require(\"node:console\");","module.exports = require(\"node:crypto\");","module.exports = require(\"node:events\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:fs/promises\");","module.exports = require(\"node:path\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:string_decoder\");","module.exports = require(\"node:url\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Glob = void 0;\nconst minimatch_1 = require(\"minimatch\");\nconst node_url_1 = require(\"node:url\");\nconst path_scurry_1 = require(\"path-scurry\");\nconst pattern_js_1 = require(\"./pattern.js\");\nconst walker_js_1 = require(\"./walker.js\");\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform = (typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string') ?\n    process.platform\n    : 'linux';\n/**\n * An object that can perform glob pattern traversals.\n */\nclass Glob {\n    absolute;\n    cwd;\n    root;\n    dot;\n    dotRelative;\n    follow;\n    ignore;\n    magicalBraces;\n    mark;\n    matchBase;\n    maxDepth;\n    nobrace;\n    nocase;\n    nodir;\n    noext;\n    noglobstar;\n    pattern;\n    platform;\n    realpath;\n    scurry;\n    stat;\n    signal;\n    windowsPathsNoEscape;\n    withFileTypes;\n    includeChildMatches;\n    /**\n     * The options provided to the constructor.\n     */\n    opts;\n    /**\n     * An array of parsed immutable {@link Pattern} objects.\n     */\n    patterns;\n    /**\n     * All options are stored as properties on the `Glob` object.\n     *\n     * See {@link GlobOptions} for full options descriptions.\n     *\n     * Note that a previous `Glob` object can be passed as the\n     * `GlobOptions` to another `Glob` instantiation to re-use settings\n     * and caches with a new pattern.\n     *\n     * Traversal functions can be called multiple times to run the walk\n     * again.\n     */\n    constructor(pattern, opts) {\n        /* c8 ignore start */\n        if (!opts)\n            throw new TypeError('glob options required');\n        /* c8 ignore stop */\n        this.withFileTypes = !!opts.withFileTypes;\n        this.signal = opts.signal;\n        this.follow = !!opts.follow;\n        this.dot = !!opts.dot;\n        this.dotRelative = !!opts.dotRelative;\n        this.nodir = !!opts.nodir;\n        this.mark = !!opts.mark;\n        if (!opts.cwd) {\n            this.cwd = '';\n        }\n        else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n            opts.cwd = (0, node_url_1.fileURLToPath)(opts.cwd);\n        }\n        this.cwd = opts.cwd || '';\n        this.root = opts.root;\n        this.magicalBraces = !!opts.magicalBraces;\n        this.nobrace = !!opts.nobrace;\n        this.noext = !!opts.noext;\n        this.realpath = !!opts.realpath;\n        this.absolute = opts.absolute;\n        this.includeChildMatches = opts.includeChildMatches !== false;\n        this.noglobstar = !!opts.noglobstar;\n        this.matchBase = !!opts.matchBase;\n        this.maxDepth =\n            typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity;\n        this.stat = !!opts.stat;\n        this.ignore = opts.ignore;\n        if (this.withFileTypes && this.absolute !== undefined) {\n            throw new Error('cannot set absolute and withFileTypes:true');\n        }\n        if (typeof pattern === 'string') {\n            pattern = [pattern];\n        }\n        this.windowsPathsNoEscape =\n            !!opts.windowsPathsNoEscape ||\n                opts.allowWindowsEscape ===\n                    false;\n        if (this.windowsPathsNoEscape) {\n            pattern = pattern.map(p => p.replace(/\\\\/g, '/'));\n        }\n        if (this.matchBase) {\n            if (opts.noglobstar) {\n                throw new TypeError('base matching requires globstar');\n            }\n            pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`));\n        }\n        this.pattern = pattern;\n        this.platform = opts.platform || defaultPlatform;\n        this.opts = { ...opts, platform: this.platform };\n        if (opts.scurry) {\n            this.scurry = opts.scurry;\n            if (opts.nocase !== undefined &&\n                opts.nocase !== opts.scurry.nocase) {\n                throw new Error('nocase option contradicts provided scurry option');\n            }\n        }\n        else {\n            const Scurry = opts.platform === 'win32' ? path_scurry_1.PathScurryWin32\n                : opts.platform === 'darwin' ? path_scurry_1.PathScurryDarwin\n                    : opts.platform ? path_scurry_1.PathScurryPosix\n                        : path_scurry_1.PathScurry;\n            this.scurry = new Scurry(this.cwd, {\n                nocase: opts.nocase,\n                fs: opts.fs,\n            });\n        }\n        this.nocase = this.scurry.nocase;\n        // If you do nocase:true on a case-sensitive file system, then\n        // we need to use regexps instead of strings for non-magic\n        // path portions, because statting `aBc` won't return results\n        // for the file `AbC` for example.\n        const nocaseMagicOnly = this.platform === 'darwin' || this.platform === 'win32';\n        const mmo = {\n            // default nocase based on platform\n            ...opts,\n            dot: this.dot,\n            matchBase: this.matchBase,\n            nobrace: this.nobrace,\n            nocase: this.nocase,\n            nocaseMagicOnly,\n            nocomment: true,\n            noext: this.noext,\n            nonegate: true,\n            optimizationLevel: 2,\n            platform: this.platform,\n            windowsPathsNoEscape: this.windowsPathsNoEscape,\n            debug: !!this.opts.debug,\n        };\n        const mms = this.pattern.map(p => new minimatch_1.Minimatch(p, mmo));\n        const [matchSet, globParts] = mms.reduce((set, m) => {\n            set[0].push(...m.set);\n            set[1].push(...m.globParts);\n            return set;\n        }, [[], []]);\n        this.patterns = matchSet.map((set, i) => {\n            const g = globParts[i];\n            /* c8 ignore start */\n            if (!g)\n                throw new Error('invalid pattern object');\n            /* c8 ignore stop */\n            return new pattern_js_1.Pattern(set, g, 0, this.platform);\n        });\n    }\n    async walk() {\n        // Walkers always return array of Path objects, so we just have to\n        // coerce them into the right shape.  It will have already called\n        // realpath() if the option was set to do so, so we know that's cached.\n        // start out knowing the cwd, at least\n        return [\n            ...(await new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n                ...this.opts,\n                maxDepth: this.maxDepth !== Infinity ?\n                    this.maxDepth + this.scurry.cwd.depth()\n                    : Infinity,\n                platform: this.platform,\n                nocase: this.nocase,\n                includeChildMatches: this.includeChildMatches,\n            }).walk()),\n        ];\n    }\n    walkSync() {\n        return [\n            ...new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n                ...this.opts,\n                maxDepth: this.maxDepth !== Infinity ?\n                    this.maxDepth + this.scurry.cwd.depth()\n                    : Infinity,\n                platform: this.platform,\n                nocase: this.nocase,\n                includeChildMatches: this.includeChildMatches,\n            }).walkSync(),\n        ];\n    }\n    stream() {\n        return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n            ...this.opts,\n            maxDepth: this.maxDepth !== Infinity ?\n                this.maxDepth + this.scurry.cwd.depth()\n                : Infinity,\n            platform: this.platform,\n            nocase: this.nocase,\n            includeChildMatches: this.includeChildMatches,\n        }).stream();\n    }\n    streamSync() {\n        return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n            ...this.opts,\n            maxDepth: this.maxDepth !== Infinity ?\n                this.maxDepth + this.scurry.cwd.depth()\n                : Infinity,\n            platform: this.platform,\n            nocase: this.nocase,\n            includeChildMatches: this.includeChildMatches,\n        }).streamSync();\n    }\n    /**\n     * Default sync iteration function. Returns a Generator that\n     * iterates over the results.\n     */\n    iterateSync() {\n        return this.streamSync()[Symbol.iterator]();\n    }\n    [Symbol.iterator]() {\n        return this.iterateSync();\n    }\n    /**\n     * Default async iteration function. Returns an AsyncGenerator that\n     * iterates over the results.\n     */\n    iterate() {\n        return this.stream()[Symbol.asyncIterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n}\nexports.Glob = Glob;\n//# sourceMappingURL=glob.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasMagic = void 0;\nconst minimatch_1 = require(\"minimatch\");\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nconst hasMagic = (pattern, options = {}) => {\n    if (!Array.isArray(pattern)) {\n        pattern = [pattern];\n    }\n    for (const p of pattern) {\n        if (new minimatch_1.Minimatch(p, options).hasMagic())\n            return true;\n    }\n    return false;\n};\nexports.hasMagic = hasMagic;\n//# sourceMappingURL=has-magic.js.map","\"use strict\";\n// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ignore = void 0;\nconst minimatch_1 = require(\"minimatch\");\nconst pattern_js_1 = require(\"./pattern.js\");\nconst defaultPlatform = (typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string') ?\n    process.platform\n    : 'linux';\n/**\n * Class used to process ignored patterns\n */\nclass Ignore {\n    relative;\n    relativeChildren;\n    absolute;\n    absoluteChildren;\n    platform;\n    mmopts;\n    constructor(ignored, { nobrace, nocase, noext, noglobstar, platform = defaultPlatform, }) {\n        this.relative = [];\n        this.absolute = [];\n        this.relativeChildren = [];\n        this.absoluteChildren = [];\n        this.platform = platform;\n        this.mmopts = {\n            dot: true,\n            nobrace,\n            nocase,\n            noext,\n            noglobstar,\n            optimizationLevel: 2,\n            platform,\n            nocomment: true,\n            nonegate: true,\n        };\n        for (const ign of ignored)\n            this.add(ign);\n    }\n    add(ign) {\n        // this is a little weird, but it gives us a clean set of optimized\n        // minimatch matchers, without getting tripped up if one of them\n        // ends in /** inside a brace section, and it's only inefficient at\n        // the start of the walk, not along it.\n        // It'd be nice if the Pattern class just had a .test() method, but\n        // handling globstars is a bit of a pita, and that code already lives\n        // in minimatch anyway.\n        // Another way would be if maybe Minimatch could take its set/globParts\n        // as an option, and then we could at least just use Pattern to test\n        // for absolute-ness.\n        // Yet another way, Minimatch could take an array of glob strings, and\n        // a cwd option, and do the right thing.\n        const mm = new minimatch_1.Minimatch(ign, this.mmopts);\n        for (let i = 0; i < mm.set.length; i++) {\n            const parsed = mm.set[i];\n            const globParts = mm.globParts[i];\n            /* c8 ignore start */\n            if (!parsed || !globParts) {\n                throw new Error('invalid pattern object');\n            }\n            // strip off leading ./ portions\n            // https://github.com/isaacs/node-glob/issues/570\n            while (parsed[0] === '.' && globParts[0] === '.') {\n                parsed.shift();\n                globParts.shift();\n            }\n            /* c8 ignore stop */\n            const p = new pattern_js_1.Pattern(parsed, globParts, 0, this.platform);\n            const m = new minimatch_1.Minimatch(p.globString(), this.mmopts);\n            const children = globParts[globParts.length - 1] === '**';\n            const absolute = p.isAbsolute();\n            if (absolute)\n                this.absolute.push(m);\n            else\n                this.relative.push(m);\n            if (children) {\n                if (absolute)\n                    this.absoluteChildren.push(m);\n                else\n                    this.relativeChildren.push(m);\n            }\n        }\n    }\n    ignored(p) {\n        const fullpath = p.fullpath();\n        const fullpaths = `${fullpath}/`;\n        const relative = p.relative() || '.';\n        const relatives = `${relative}/`;\n        for (const m of this.relative) {\n            if (m.match(relative) || m.match(relatives))\n                return true;\n        }\n        for (const m of this.absolute) {\n            if (m.match(fullpath) || m.match(fullpaths))\n                return true;\n        }\n        return false;\n    }\n    childrenIgnored(p) {\n        const fullpath = p.fullpath() + '/';\n        const relative = (p.relative() || '.') + '/';\n        for (const m of this.relativeChildren) {\n            if (m.match(relative))\n                return true;\n        }\n        for (const m of this.absoluteChildren) {\n            if (m.match(fullpath))\n                return true;\n        }\n        return false;\n    }\n}\nexports.Ignore = Ignore;\n//# sourceMappingURL=ignore.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.glob = exports.sync = exports.iterate = exports.iterateSync = exports.stream = exports.streamSync = exports.Ignore = exports.hasMagic = exports.Glob = exports.unescape = exports.escape = void 0;\nexports.globStreamSync = globStreamSync;\nexports.globStream = globStream;\nexports.globSync = globSync;\nexports.globIterateSync = globIterateSync;\nexports.globIterate = globIterate;\nconst minimatch_1 = require(\"minimatch\");\nconst glob_js_1 = require(\"./glob.js\");\nconst has_magic_js_1 = require(\"./has-magic.js\");\nvar minimatch_2 = require(\"minimatch\");\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return minimatch_2.escape; } });\nObject.defineProperty(exports, \"unescape\", { enumerable: true, get: function () { return minimatch_2.unescape; } });\nvar glob_js_2 = require(\"./glob.js\");\nObject.defineProperty(exports, \"Glob\", { enumerable: true, get: function () { return glob_js_2.Glob; } });\nvar has_magic_js_2 = require(\"./has-magic.js\");\nObject.defineProperty(exports, \"hasMagic\", { enumerable: true, get: function () { return has_magic_js_2.hasMagic; } });\nvar ignore_js_1 = require(\"./ignore.js\");\nObject.defineProperty(exports, \"Ignore\", { enumerable: true, get: function () { return ignore_js_1.Ignore; } });\nfunction globStreamSync(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).streamSync();\n}\nfunction globStream(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).stream();\n}\nfunction globSync(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).walkSync();\n}\nasync function glob_(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).walk();\n}\nfunction globIterateSync(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).iterateSync();\n}\nfunction globIterate(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).iterate();\n}\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexports.streamSync = globStreamSync;\nexports.stream = Object.assign(globStream, { sync: globStreamSync });\nexports.iterateSync = globIterateSync;\nexports.iterate = Object.assign(globIterate, {\n    sync: globIterateSync,\n});\nexports.sync = Object.assign(globSync, {\n    stream: globStreamSync,\n    iterate: globIterateSync,\n});\nexports.glob = Object.assign(glob_, {\n    glob: glob_,\n    globSync,\n    sync: exports.sync,\n    globStream,\n    stream: exports.stream,\n    globStreamSync,\n    streamSync: exports.streamSync,\n    globIterate,\n    iterate: exports.iterate,\n    globIterateSync,\n    iterateSync: exports.iterateSync,\n    Glob: glob_js_1.Glob,\n    hasMagic: has_magic_js_1.hasMagic,\n    escape: minimatch_1.escape,\n    unescape: minimatch_1.unescape,\n});\nexports.glob.glob = exports.glob;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// this is just a very light wrapper around 2 arrays with an offset index\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pattern = void 0;\nconst minimatch_1 = require(\"minimatch\");\nconst isPatternList = (pl) => pl.length >= 1;\nconst isGlobList = (gl) => gl.length >= 1;\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nclass Pattern {\n    #patternList;\n    #globList;\n    #index;\n    length;\n    #platform;\n    #rest;\n    #globString;\n    #isDrive;\n    #isUNC;\n    #isAbsolute;\n    #followGlobstar = true;\n    constructor(patternList, globList, index, platform) {\n        if (!isPatternList(patternList)) {\n            throw new TypeError('empty pattern list');\n        }\n        if (!isGlobList(globList)) {\n            throw new TypeError('empty glob list');\n        }\n        if (globList.length !== patternList.length) {\n            throw new TypeError('mismatched pattern list and glob list lengths');\n        }\n        this.length = patternList.length;\n        if (index < 0 || index >= this.length) {\n            throw new TypeError('index out of range');\n        }\n        this.#patternList = patternList;\n        this.#globList = globList;\n        this.#index = index;\n        this.#platform = platform;\n        // normalize root entries of absolute patterns on initial creation.\n        if (this.#index === 0) {\n            // c: => ['c:/']\n            // C:/ => ['C:/']\n            // C:/x => ['C:/', 'x']\n            // //host/share => ['//host/share/']\n            // //host/share/ => ['//host/share/']\n            // //host/share/x => ['//host/share/', 'x']\n            // /etc => ['/', 'etc']\n            // / => ['/']\n            if (this.isUNC()) {\n                // '' / '' / 'host' / 'share'\n                const [p0, p1, p2, p3, ...prest] = this.#patternList;\n                const [g0, g1, g2, g3, ...grest] = this.#globList;\n                if (prest[0] === '') {\n                    // ends in /\n                    prest.shift();\n                    grest.shift();\n                }\n                const p = [p0, p1, p2, p3, ''].join('/');\n                const g = [g0, g1, g2, g3, ''].join('/');\n                this.#patternList = [p, ...prest];\n                this.#globList = [g, ...grest];\n                this.length = this.#patternList.length;\n            }\n            else if (this.isDrive() || this.isAbsolute()) {\n                const [p1, ...prest] = this.#patternList;\n                const [g1, ...grest] = this.#globList;\n                if (prest[0] === '') {\n                    // ends in /\n                    prest.shift();\n                    grest.shift();\n                }\n                const p = p1 + '/';\n                const g = g1 + '/';\n                this.#patternList = [p, ...prest];\n                this.#globList = [g, ...grest];\n                this.length = this.#patternList.length;\n            }\n        }\n    }\n    /**\n     * The first entry in the parsed list of patterns\n     */\n    pattern() {\n        return this.#patternList[this.#index];\n    }\n    /**\n     * true of if pattern() returns a string\n     */\n    isString() {\n        return typeof this.#patternList[this.#index] === 'string';\n    }\n    /**\n     * true of if pattern() returns GLOBSTAR\n     */\n    isGlobstar() {\n        return this.#patternList[this.#index] === minimatch_1.GLOBSTAR;\n    }\n    /**\n     * true if pattern() returns a regexp\n     */\n    isRegExp() {\n        return this.#patternList[this.#index] instanceof RegExp;\n    }\n    /**\n     * The /-joined set of glob parts that make up this pattern\n     */\n    globString() {\n        return (this.#globString =\n            this.#globString ||\n                (this.#index === 0 ?\n                    this.isAbsolute() ?\n                        this.#globList[0] + this.#globList.slice(1).join('/')\n                        : this.#globList.join('/')\n                    : this.#globList.slice(this.#index).join('/')));\n    }\n    /**\n     * true if there are more pattern parts after this one\n     */\n    hasMore() {\n        return this.length > this.#index + 1;\n    }\n    /**\n     * The rest of the pattern after this part, or null if this is the end\n     */\n    rest() {\n        if (this.#rest !== undefined)\n            return this.#rest;\n        if (!this.hasMore())\n            return (this.#rest = null);\n        this.#rest = new Pattern(this.#patternList, this.#globList, this.#index + 1, this.#platform);\n        this.#rest.#isAbsolute = this.#isAbsolute;\n        this.#rest.#isUNC = this.#isUNC;\n        this.#rest.#isDrive = this.#isDrive;\n        return this.#rest;\n    }\n    /**\n     * true if the pattern represents a //unc/path/ on windows\n     */\n    isUNC() {\n        const pl = this.#patternList;\n        return this.#isUNC !== undefined ?\n            this.#isUNC\n            : (this.#isUNC =\n                this.#platform === 'win32' &&\n                    this.#index === 0 &&\n                    pl[0] === '' &&\n                    pl[1] === '' &&\n                    typeof pl[2] === 'string' &&\n                    !!pl[2] &&\n                    typeof pl[3] === 'string' &&\n                    !!pl[3]);\n    }\n    // pattern like C:/...\n    // split = ['C:', ...]\n    // XXX: would be nice to handle patterns like `c:*` to test the cwd\n    // in c: for *, but I don't know of a way to even figure out what that\n    // cwd is without actually chdir'ing into it?\n    /**\n     * True if the pattern starts with a drive letter on Windows\n     */\n    isDrive() {\n        const pl = this.#patternList;\n        return this.#isDrive !== undefined ?\n            this.#isDrive\n            : (this.#isDrive =\n                this.#platform === 'win32' &&\n                    this.#index === 0 &&\n                    this.length > 1 &&\n                    typeof pl[0] === 'string' &&\n                    /^[a-z]:$/i.test(pl[0]));\n    }\n    // pattern = '/' or '/...' or '/x/...'\n    // split = ['', ''] or ['', ...] or ['', 'x', ...]\n    // Drive and UNC both considered absolute on windows\n    /**\n     * True if the pattern is rooted on an absolute path\n     */\n    isAbsolute() {\n        const pl = this.#patternList;\n        return this.#isAbsolute !== undefined ?\n            this.#isAbsolute\n            : (this.#isAbsolute =\n                (pl[0] === '' && pl.length > 1) ||\n                    this.isDrive() ||\n                    this.isUNC());\n    }\n    /**\n     * consume the root of the pattern, and return it\n     */\n    root() {\n        const p = this.#patternList[0];\n        return (typeof p === 'string' && this.isAbsolute() && this.#index === 0) ?\n            p\n            : '';\n    }\n    /**\n     * Check to see if the current globstar pattern is allowed to follow\n     * a symbolic link.\n     */\n    checkFollowGlobstar() {\n        return !(this.#index === 0 ||\n            !this.isGlobstar() ||\n            !this.#followGlobstar);\n    }\n    /**\n     * Mark that the current globstar pattern is following a symbolic link\n     */\n    markFollowGlobstar() {\n        if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n            return false;\n        this.#followGlobstar = false;\n        return true;\n    }\n}\nexports.Pattern = Pattern;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\n// synchronous utility for filtering entries and calculating subwalks\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Processor = exports.SubWalks = exports.MatchRecord = exports.HasWalkedCache = void 0;\nconst minimatch_1 = require(\"minimatch\");\n/**\n * A cache of which patterns have been processed for a given Path\n */\nclass HasWalkedCache {\n    store;\n    constructor(store = new Map()) {\n        this.store = store;\n    }\n    copy() {\n        return new HasWalkedCache(new Map(this.store));\n    }\n    hasWalked(target, pattern) {\n        return this.store.get(target.fullpath())?.has(pattern.globString());\n    }\n    storeWalked(target, pattern) {\n        const fullpath = target.fullpath();\n        const cached = this.store.get(fullpath);\n        if (cached)\n            cached.add(pattern.globString());\n        else\n            this.store.set(fullpath, new Set([pattern.globString()]));\n    }\n}\nexports.HasWalkedCache = HasWalkedCache;\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nclass MatchRecord {\n    store = new Map();\n    add(target, absolute, ifDir) {\n        const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0);\n        const current = this.store.get(target);\n        this.store.set(target, current === undefined ? n : n & current);\n    }\n    // match, absolute, ifdir\n    entries() {\n        return [...this.store.entries()].map(([path, n]) => [\n            path,\n            !!(n & 2),\n            !!(n & 1),\n        ]);\n    }\n}\nexports.MatchRecord = MatchRecord;\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nclass SubWalks {\n    store = new Map();\n    add(target, pattern) {\n        if (!target.canReaddir()) {\n            return;\n        }\n        const subs = this.store.get(target);\n        if (subs) {\n            if (!subs.find(p => p.globString() === pattern.globString())) {\n                subs.push(pattern);\n            }\n        }\n        else\n            this.store.set(target, [pattern]);\n    }\n    get(target) {\n        const subs = this.store.get(target);\n        /* c8 ignore start */\n        if (!subs) {\n            throw new Error('attempting to walk unknown path');\n        }\n        /* c8 ignore stop */\n        return subs;\n    }\n    entries() {\n        return this.keys().map(k => [k, this.store.get(k)]);\n    }\n    keys() {\n        return [...this.store.keys()].filter(t => t.canReaddir());\n    }\n}\nexports.SubWalks = SubWalks;\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nclass Processor {\n    hasWalkedCache;\n    matches = new MatchRecord();\n    subwalks = new SubWalks();\n    patterns;\n    follow;\n    dot;\n    opts;\n    constructor(opts, hasWalkedCache) {\n        this.opts = opts;\n        this.follow = !!opts.follow;\n        this.dot = !!opts.dot;\n        this.hasWalkedCache =\n            hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache();\n    }\n    processPatterns(target, patterns) {\n        this.patterns = patterns;\n        const processingSet = patterns.map(p => [target, p]);\n        // map of paths to the magic-starting subwalks they need to walk\n        // first item in patterns is the filter\n        for (let [t, pattern] of processingSet) {\n            this.hasWalkedCache.storeWalked(t, pattern);\n            const root = pattern.root();\n            const absolute = pattern.isAbsolute() && this.opts.absolute !== false;\n            // start absolute patterns at root\n            if (root) {\n                t = t.resolve(root === '/' && this.opts.root !== undefined ?\n                    this.opts.root\n                    : root);\n                const rest = pattern.rest();\n                if (!rest) {\n                    this.matches.add(t, true, false);\n                    continue;\n                }\n                else {\n                    pattern = rest;\n                }\n            }\n            if (t.isENOENT())\n                continue;\n            let p;\n            let rest;\n            let changed = false;\n            while (typeof (p = pattern.pattern()) === 'string' &&\n                (rest = pattern.rest())) {\n                const c = t.resolve(p);\n                t = c;\n                pattern = rest;\n                changed = true;\n            }\n            p = pattern.pattern();\n            rest = pattern.rest();\n            if (changed) {\n                if (this.hasWalkedCache.hasWalked(t, pattern))\n                    continue;\n                this.hasWalkedCache.storeWalked(t, pattern);\n            }\n            // now we have either a final string for a known entry,\n            // more strings for an unknown entry,\n            // or a pattern starting with magic, mounted on t.\n            if (typeof p === 'string') {\n                // must not be final entry, otherwise we would have\n                // concatenated it earlier.\n                const ifDir = p === '..' || p === '' || p === '.';\n                this.matches.add(t.resolve(p), absolute, ifDir);\n                continue;\n            }\n            else if (p === minimatch_1.GLOBSTAR) {\n                // if no rest, match and subwalk pattern\n                // if rest, process rest and subwalk pattern\n                // if it's a symlink, but we didn't get here by way of a\n                // globstar match (meaning it's the first time THIS globstar\n                // has traversed a symlink), then we follow it. Otherwise, stop.\n                if (!t.isSymbolicLink() ||\n                    this.follow ||\n                    pattern.checkFollowGlobstar()) {\n                    this.subwalks.add(t, pattern);\n                }\n                const rp = rest?.pattern();\n                const rrest = rest?.rest();\n                if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n                    // only HAS to be a dir if it ends in **/ or **/.\n                    // but ending in ** will match files as well.\n                    this.matches.add(t, absolute, rp === '' || rp === '.');\n                }\n                else {\n                    if (rp === '..') {\n                        // this would mean you're matching **/.. at the fs root,\n                        // and no thanks, I'm not gonna test that specific case.\n                        /* c8 ignore start */\n                        const tp = t.parent || t;\n                        /* c8 ignore stop */\n                        if (!rrest)\n                            this.matches.add(tp, absolute, true);\n                        else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n                            this.subwalks.add(tp, rrest);\n                        }\n                    }\n                }\n            }\n            else if (p instanceof RegExp) {\n                this.subwalks.add(t, pattern);\n            }\n        }\n        return this;\n    }\n    subwalkTargets() {\n        return this.subwalks.keys();\n    }\n    child() {\n        return new Processor(this.opts, this.hasWalkedCache);\n    }\n    // return a new Processor containing the subwalks for each\n    // child entry, and a set of matches, and\n    // a hasWalkedCache that's a copy of this one\n    // then we're going to call\n    filterEntries(parent, entries) {\n        const patterns = this.subwalks.get(parent);\n        // put matches and entry walks into the results processor\n        const results = this.child();\n        for (const e of entries) {\n            for (const pattern of patterns) {\n                const absolute = pattern.isAbsolute();\n                const p = pattern.pattern();\n                const rest = pattern.rest();\n                if (p === minimatch_1.GLOBSTAR) {\n                    results.testGlobstar(e, pattern, rest, absolute);\n                }\n                else if (p instanceof RegExp) {\n                    results.testRegExp(e, p, rest, absolute);\n                }\n                else {\n                    results.testString(e, p, rest, absolute);\n                }\n            }\n        }\n        return results;\n    }\n    testGlobstar(e, pattern, rest, absolute) {\n        if (this.dot || !e.name.startsWith('.')) {\n            if (!pattern.hasMore()) {\n                this.matches.add(e, absolute, false);\n            }\n            if (e.canReaddir()) {\n                // if we're in follow mode or it's not a symlink, just keep\n                // testing the same pattern. If there's more after the globstar,\n                // then this symlink consumes the globstar. If not, then we can\n                // follow at most ONE symlink along the way, so we mark it, which\n                // also checks to ensure that it wasn't already marked.\n                if (this.follow || !e.isSymbolicLink()) {\n                    this.subwalks.add(e, pattern);\n                }\n                else if (e.isSymbolicLink()) {\n                    if (rest && pattern.checkFollowGlobstar()) {\n                        this.subwalks.add(e, rest);\n                    }\n                    else if (pattern.markFollowGlobstar()) {\n                        this.subwalks.add(e, pattern);\n                    }\n                }\n            }\n        }\n        // if the NEXT thing matches this entry, then also add\n        // the rest.\n        if (rest) {\n            const rp = rest.pattern();\n            if (typeof rp === 'string' &&\n                // dots and empty were handled already\n                rp !== '..' &&\n                rp !== '' &&\n                rp !== '.') {\n                this.testString(e, rp, rest.rest(), absolute);\n            }\n            else if (rp === '..') {\n                /* c8 ignore start */\n                const ep = e.parent || e;\n                /* c8 ignore stop */\n                this.subwalks.add(ep, rest);\n            }\n            else if (rp instanceof RegExp) {\n                this.testRegExp(e, rp, rest.rest(), absolute);\n            }\n        }\n    }\n    testRegExp(e, p, rest, absolute) {\n        if (!p.test(e.name))\n            return;\n        if (!rest) {\n            this.matches.add(e, absolute, false);\n        }\n        else {\n            this.subwalks.add(e, rest);\n        }\n    }\n    testString(e, p, rest, absolute) {\n        // should never happen?\n        if (!e.isNamed(p))\n            return;\n        if (!rest) {\n            this.matches.add(e, absolute, false);\n        }\n        else {\n            this.subwalks.add(e, rest);\n        }\n    }\n}\nexports.Processor = Processor;\n//# sourceMappingURL=processor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GlobStream = exports.GlobWalker = exports.GlobUtil = void 0;\n/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nconst minipass_1 = require(\"minipass\");\nconst ignore_js_1 = require(\"./ignore.js\");\nconst processor_js_1 = require(\"./processor.js\");\nconst makeIgnore = (ignore, opts) => typeof ignore === 'string' ? new ignore_js_1.Ignore([ignore], opts)\n    : Array.isArray(ignore) ? new ignore_js_1.Ignore(ignore, opts)\n        : ignore;\n/**\n * basic walking utilities that all the glob walker types use\n */\nclass GlobUtil {\n    path;\n    patterns;\n    opts;\n    seen = new Set();\n    paused = false;\n    aborted = false;\n    #onResume = [];\n    #ignore;\n    #sep;\n    signal;\n    maxDepth;\n    includeChildMatches;\n    constructor(patterns, path, opts) {\n        this.patterns = patterns;\n        this.path = path;\n        this.opts = opts;\n        this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/';\n        this.includeChildMatches = opts.includeChildMatches !== false;\n        if (opts.ignore || !this.includeChildMatches) {\n            this.#ignore = makeIgnore(opts.ignore ?? [], opts);\n            if (!this.includeChildMatches &&\n                typeof this.#ignore.add !== 'function') {\n                const m = 'cannot ignore child matches, ignore lacks add() method.';\n                throw new Error(m);\n            }\n        }\n        // ignore, always set with maxDepth, but it's optional on the\n        // GlobOptions type\n        /* c8 ignore start */\n        this.maxDepth = opts.maxDepth || Infinity;\n        /* c8 ignore stop */\n        if (opts.signal) {\n            this.signal = opts.signal;\n            this.signal.addEventListener('abort', () => {\n                this.#onResume.length = 0;\n            });\n        }\n    }\n    #ignored(path) {\n        return this.seen.has(path) || !!this.#ignore?.ignored?.(path);\n    }\n    #childrenIgnored(path) {\n        return !!this.#ignore?.childrenIgnored?.(path);\n    }\n    // backpressure mechanism\n    pause() {\n        this.paused = true;\n    }\n    resume() {\n        /* c8 ignore start */\n        if (this.signal?.aborted)\n            return;\n        /* c8 ignore stop */\n        this.paused = false;\n        let fn = undefined;\n        while (!this.paused && (fn = this.#onResume.shift())) {\n            fn();\n        }\n    }\n    onResume(fn) {\n        if (this.signal?.aborted)\n            return;\n        /* c8 ignore start */\n        if (!this.paused) {\n            fn();\n        }\n        else {\n            /* c8 ignore stop */\n            this.#onResume.push(fn);\n        }\n    }\n    // do the requisite realpath/stat checking, and return the path\n    // to add or undefined to filter it out.\n    async matchCheck(e, ifDir) {\n        if (ifDir && this.opts.nodir)\n            return undefined;\n        let rpc;\n        if (this.opts.realpath) {\n            rpc = e.realpathCached() || (await e.realpath());\n            if (!rpc)\n                return undefined;\n            e = rpc;\n        }\n        const needStat = e.isUnknown() || this.opts.stat;\n        const s = needStat ? await e.lstat() : e;\n        if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n            const target = await s.realpath();\n            /* c8 ignore start */\n            if (target && (target.isUnknown() || this.opts.stat)) {\n                await target.lstat();\n            }\n            /* c8 ignore stop */\n        }\n        return this.matchCheckTest(s, ifDir);\n    }\n    matchCheckTest(e, ifDir) {\n        return (e &&\n            (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n            (!ifDir || e.canReaddir()) &&\n            (!this.opts.nodir || !e.isDirectory()) &&\n            (!this.opts.nodir ||\n                !this.opts.follow ||\n                !e.isSymbolicLink() ||\n                !e.realpathCached()?.isDirectory()) &&\n            !this.#ignored(e)) ?\n            e\n            : undefined;\n    }\n    matchCheckSync(e, ifDir) {\n        if (ifDir && this.opts.nodir)\n            return undefined;\n        let rpc;\n        if (this.opts.realpath) {\n            rpc = e.realpathCached() || e.realpathSync();\n            if (!rpc)\n                return undefined;\n            e = rpc;\n        }\n        const needStat = e.isUnknown() || this.opts.stat;\n        const s = needStat ? e.lstatSync() : e;\n        if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n            const target = s.realpathSync();\n            if (target && (target?.isUnknown() || this.opts.stat)) {\n                target.lstatSync();\n            }\n        }\n        return this.matchCheckTest(s, ifDir);\n    }\n    matchFinish(e, absolute) {\n        if (this.#ignored(e))\n            return;\n        // we know we have an ignore if this is false, but TS doesn't\n        if (!this.includeChildMatches && this.#ignore?.add) {\n            const ign = `${e.relativePosix()}/**`;\n            this.#ignore.add(ign);\n        }\n        const abs = this.opts.absolute === undefined ? absolute : this.opts.absolute;\n        this.seen.add(e);\n        const mark = this.opts.mark && e.isDirectory() ? this.#sep : '';\n        // ok, we have what we need!\n        if (this.opts.withFileTypes) {\n            this.matchEmit(e);\n        }\n        else if (abs) {\n            const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath();\n            this.matchEmit(abs + mark);\n        }\n        else {\n            const rel = this.opts.posix ? e.relativePosix() : e.relative();\n            const pre = this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n                '.' + this.#sep\n                : '';\n            this.matchEmit(!rel ? '.' + mark : pre + rel + mark);\n        }\n    }\n    async match(e, absolute, ifDir) {\n        const p = await this.matchCheck(e, ifDir);\n        if (p)\n            this.matchFinish(p, absolute);\n    }\n    matchSync(e, absolute, ifDir) {\n        const p = this.matchCheckSync(e, ifDir);\n        if (p)\n            this.matchFinish(p, absolute);\n    }\n    walkCB(target, patterns, cb) {\n        /* c8 ignore start */\n        if (this.signal?.aborted)\n            cb();\n        /* c8 ignore stop */\n        this.walkCB2(target, patterns, new processor_js_1.Processor(this.opts), cb);\n    }\n    walkCB2(target, patterns, processor, cb) {\n        if (this.#childrenIgnored(target))\n            return cb();\n        if (this.signal?.aborted)\n            cb();\n        if (this.paused) {\n            this.onResume(() => this.walkCB2(target, patterns, processor, cb));\n            return;\n        }\n        processor.processPatterns(target, patterns);\n        // done processing.  all of the above is sync, can be abstracted out.\n        // subwalks is a map of paths to the entry filters they need\n        // matches is a map of paths to [absolute, ifDir] tuples.\n        let tasks = 1;\n        const next = () => {\n            if (--tasks === 0)\n                cb();\n        };\n        for (const [m, absolute, ifDir] of processor.matches.entries()) {\n            if (this.#ignored(m))\n                continue;\n            tasks++;\n            this.match(m, absolute, ifDir).then(() => next());\n        }\n        for (const t of processor.subwalkTargets()) {\n            if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n                continue;\n            }\n            tasks++;\n            const childrenCached = t.readdirCached();\n            if (t.calledReaddir())\n                this.walkCB3(t, childrenCached, processor, next);\n            else {\n                t.readdirCB((_, entries) => this.walkCB3(t, entries, processor, next), true);\n            }\n        }\n        next();\n    }\n    walkCB3(target, entries, processor, cb) {\n        processor = processor.filterEntries(target, entries);\n        let tasks = 1;\n        const next = () => {\n            if (--tasks === 0)\n                cb();\n        };\n        for (const [m, absolute, ifDir] of processor.matches.entries()) {\n            if (this.#ignored(m))\n                continue;\n            tasks++;\n            this.match(m, absolute, ifDir).then(() => next());\n        }\n        for (const [target, patterns] of processor.subwalks.entries()) {\n            tasks++;\n            this.walkCB2(target, patterns, processor.child(), next);\n        }\n        next();\n    }\n    walkCBSync(target, patterns, cb) {\n        /* c8 ignore start */\n        if (this.signal?.aborted)\n            cb();\n        /* c8 ignore stop */\n        this.walkCB2Sync(target, patterns, new processor_js_1.Processor(this.opts), cb);\n    }\n    walkCB2Sync(target, patterns, processor, cb) {\n        if (this.#childrenIgnored(target))\n            return cb();\n        if (this.signal?.aborted)\n            cb();\n        if (this.paused) {\n            this.onResume(() => this.walkCB2Sync(target, patterns, processor, cb));\n            return;\n        }\n        processor.processPatterns(target, patterns);\n        // done processing.  all of the above is sync, can be abstracted out.\n        // subwalks is a map of paths to the entry filters they need\n        // matches is a map of paths to [absolute, ifDir] tuples.\n        let tasks = 1;\n        const next = () => {\n            if (--tasks === 0)\n                cb();\n        };\n        for (const [m, absolute, ifDir] of processor.matches.entries()) {\n            if (this.#ignored(m))\n                continue;\n            this.matchSync(m, absolute, ifDir);\n        }\n        for (const t of processor.subwalkTargets()) {\n            if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n                continue;\n            }\n            tasks++;\n            const children = t.readdirSync();\n            this.walkCB3Sync(t, children, processor, next);\n        }\n        next();\n    }\n    walkCB3Sync(target, entries, processor, cb) {\n        processor = processor.filterEntries(target, entries);\n        let tasks = 1;\n        const next = () => {\n            if (--tasks === 0)\n                cb();\n        };\n        for (const [m, absolute, ifDir] of processor.matches.entries()) {\n            if (this.#ignored(m))\n                continue;\n            this.matchSync(m, absolute, ifDir);\n        }\n        for (const [target, patterns] of processor.subwalks.entries()) {\n            tasks++;\n            this.walkCB2Sync(target, patterns, processor.child(), next);\n        }\n        next();\n    }\n}\nexports.GlobUtil = GlobUtil;\nclass GlobWalker extends GlobUtil {\n    matches = new Set();\n    constructor(patterns, path, opts) {\n        super(patterns, path, opts);\n    }\n    matchEmit(e) {\n        this.matches.add(e);\n    }\n    async walk() {\n        if (this.signal?.aborted)\n            throw this.signal.reason;\n        if (this.path.isUnknown()) {\n            await this.path.lstat();\n        }\n        await new Promise((res, rej) => {\n            this.walkCB(this.path, this.patterns, () => {\n                if (this.signal?.aborted) {\n                    rej(this.signal.reason);\n                }\n                else {\n                    res(this.matches);\n                }\n            });\n        });\n        return this.matches;\n    }\n    walkSync() {\n        if (this.signal?.aborted)\n            throw this.signal.reason;\n        if (this.path.isUnknown()) {\n            this.path.lstatSync();\n        }\n        // nothing for the callback to do, because this never pauses\n        this.walkCBSync(this.path, this.patterns, () => {\n            if (this.signal?.aborted)\n                throw this.signal.reason;\n        });\n        return this.matches;\n    }\n}\nexports.GlobWalker = GlobWalker;\nclass GlobStream extends GlobUtil {\n    results;\n    constructor(patterns, path, opts) {\n        super(patterns, path, opts);\n        this.results = new minipass_1.Minipass({\n            signal: this.signal,\n            objectMode: true,\n        });\n        this.results.on('drain', () => this.resume());\n        this.results.on('resume', () => this.resume());\n    }\n    matchEmit(e) {\n        this.results.write(e);\n        if (!this.results.flowing)\n            this.pause();\n    }\n    stream() {\n        const target = this.path;\n        if (target.isUnknown()) {\n            target.lstat().then(() => {\n                this.walkCB(target, this.patterns, () => this.results.end());\n            });\n        }\n        else {\n            this.walkCB(target, this.patterns, () => this.results.end());\n        }\n        return this.results;\n    }\n    streamSync() {\n        if (this.path.isUnknown()) {\n            this.path.lstatSync();\n        }\n        this.walkCBSync(this.path, this.patterns, () => this.results.end());\n        return this.results;\n    }\n}\nexports.GlobStream = GlobStream;\n//# sourceMappingURL=walker.js.map","\"use strict\";\n/**\n * @module LRUCache\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = void 0;\nconst perf = typeof performance === 'object' &&\n    performance &&\n    typeof performance.now === 'function'\n    ? performance\n    : Date;\nconst warned = new Set();\n/* c8 ignore start */\nconst PROCESS = (typeof process === 'object' && !!process ? process : {});\n/* c8 ignore start */\nconst emitWarning = (msg, type, code, fn) => {\n    typeof PROCESS.emitWarning === 'function'\n        ? PROCESS.emitWarning(msg, type, code, fn)\n        : console.error(`[${code}] ${type}: ${msg}`);\n};\nlet AC = globalThis.AbortController;\nlet AS = globalThis.AbortSignal;\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n    //@ts-ignore\n    AS = class AbortSignal {\n        onabort;\n        _onabort = [];\n        reason;\n        aborted = false;\n        addEventListener(_, fn) {\n            this._onabort.push(fn);\n        }\n    };\n    //@ts-ignore\n    AC = class AbortController {\n        constructor() {\n            warnACPolyfill();\n        }\n        signal = new AS();\n        abort(reason) {\n            if (this.signal.aborted)\n                return;\n            //@ts-ignore\n            this.signal.reason = reason;\n            //@ts-ignore\n            this.signal.aborted = true;\n            //@ts-ignore\n            for (const fn of this.signal._onabort) {\n                fn(reason);\n            }\n            this.signal.onabort?.(reason);\n        }\n    };\n    let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1';\n    const warnACPolyfill = () => {\n        if (!printACPolyfillWarning)\n            return;\n        printACPolyfillWarning = false;\n        emitWarning('AbortController is not defined. If using lru-cache in ' +\n            'node 14, load an AbortController polyfill from the ' +\n            '`node-abort-controller` package. A minimal polyfill is ' +\n            'provided for use by LRUCache.fetch(), but it should not be ' +\n            'relied upon in other contexts (eg, passing it to other APIs that ' +\n            'use AbortController/AbortSignal might have undesirable effects). ' +\n            'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.', 'NO_ABORT_CONTROLLER', 'ENOTSUP', warnACPolyfill);\n    };\n}\n/* c8 ignore stop */\nconst shouldWarn = (code) => !warned.has(code);\nconst TYPE = Symbol('type');\nconst isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max) => !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n        ? Uint8Array\n        : max <= Math.pow(2, 16)\n            ? Uint16Array\n            : max <= Math.pow(2, 32)\n                ? Uint32Array\n                : max <= Number.MAX_SAFE_INTEGER\n                    ? ZeroArray\n                    : null;\n/* c8 ignore stop */\nclass ZeroArray extends Array {\n    constructor(size) {\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    heap;\n    length;\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls)\n            return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls) {\n        /* c8 ignore start */\n        if (!Stack.#constructing) {\n            throw new TypeError('instantiate Stack using Stack.create(n)');\n        }\n        /* c8 ignore stop */\n        this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nclass LRUCache {\n    // options that cannot be changed without disaster\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    #memoMethod;\n    /**\n     * {@link LRUCache.OptionsBase.ttl}\n     */\n    ttl;\n    /**\n     * {@link LRUCache.OptionsBase.ttlResolution}\n     */\n    ttlResolution;\n    /**\n     * {@link LRUCache.OptionsBase.ttlAutopurge}\n     */\n    ttlAutopurge;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnGet}\n     */\n    updateAgeOnGet;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnHas}\n     */\n    updateAgeOnHas;\n    /**\n     * {@link LRUCache.OptionsBase.allowStale}\n     */\n    allowStale;\n    /**\n     * {@link LRUCache.OptionsBase.noDisposeOnSet}\n     */\n    noDisposeOnSet;\n    /**\n     * {@link LRUCache.OptionsBase.noUpdateTTL}\n     */\n    noUpdateTTL;\n    /**\n     * {@link LRUCache.OptionsBase.maxEntrySize}\n     */\n    maxEntrySize;\n    /**\n     * {@link LRUCache.OptionsBase.sizeCalculation}\n     */\n    sizeCalculation;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n     */\n    noDeleteOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n     */\n    noDeleteOnStaleGet;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n     */\n    allowStaleOnFetchAbort;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n     */\n    allowStaleOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n     */\n    ignoreFetchAbort;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */\n    static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head() {\n                return c.#head;\n            },\n            get tail() {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index) => c.#moveToTail(index),\n            indexes: (options) => c.#indexes(options),\n            rindexes: (options) => c.#rindexes(options),\n            isStale: (index) => c.#isStale(index),\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */\n    get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */\n    get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */\n    get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */\n    get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */\n    get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    get memoMethod() {\n        return this.#memoMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */\n    get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */\n    get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options) {\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, memoMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError('max option must be a nonnegative integer');\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error('invalid max value: ' + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError('cannot set sizeCalculation without setting maxSize or maxEntrySize');\n            }\n            if (typeof this.sizeCalculation !== 'function') {\n                throw new TypeError('sizeCalculation set to non-function');\n            }\n        }\n        if (memoMethod !== undefined &&\n            typeof memoMethod !== 'function') {\n            throw new TypeError('memoMethod must be a function if defined');\n        }\n        this.#memoMethod = memoMethod;\n        if (fetchMethod !== undefined &&\n            typeof fetchMethod !== 'function') {\n            throw new TypeError('fetchMethod must be a function if specified');\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === 'function') {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === 'function') {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        }\n        else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError('maxSize must be a positive integer if specified');\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError('maxEntrySize must be a positive integer if specified');\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution =\n            isPosInt(ttlResolution) || ttlResolution === 0\n                ? ttlResolution\n                : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError('ttl must be a positive integer if specified');\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError('At least one of max, maxSize, or ttl is required');\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = 'LRU_CACHE_UNBOUNDED';\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = 'TTL caching without ttlAutopurge, max, or maxSize can ' +\n                    'result in unbounded memory consumption.';\n                emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the number of ms left in the item's TTL. If item is not in cache,\n     * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n     */\n    getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now()) => {\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(() => {\n                    if (this.#isStale(index)) {\n                        this.#delete(this.#keyList[index], 'expire');\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n        };\n        this.#updateItemAge = index => {\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index) => {\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                /* c8 ignore next */\n                if (!ttl || !start)\n                    return;\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                const age = status.now - start;\n                status.remainingTTL = ttl - age;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = () => {\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(() => (cachedNow = 0), this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n            return n;\n        };\n        this.getRemainingTTL = key => {\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            const ttl = ttls[index];\n            const start = starts[index];\n            if (!ttl || !start) {\n                return Infinity;\n            }\n            const age = (cachedNow || getNow()) - start;\n            return ttl - age;\n        };\n        this.#isStale = index => {\n            const s = starts[index];\n            const t = ttls[index];\n            return !!t && !!s && (cachedNow || getNow()) - s > t;\n        };\n    }\n    // conditionally set private methods related to TTL\n    #updateItemAge = () => { };\n    #statusTTL = () => { };\n    #setItemTTL = () => { };\n    /* c8 ignore stop */\n    #isStale = () => false;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = index => {\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation) => {\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== 'function') {\n                        throw new TypeError('sizeCalculation must be a function');\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError('sizeCalculation return invalid (expect positive integer)');\n                    }\n                }\n                else {\n                    throw new TypeError('invalid size value (must be positive integer). ' +\n                        'When maxSize or maxEntrySize is used, sizeCalculation ' +\n                        'or size must be set.');\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status) => {\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while (this.#calculatedSize > maxSize) {\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize = _i => { };\n    #addItemSize = (_i, _s, _st) => { };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n        if (size || sizeCalculation) {\n            throw new TypeError('cannot set size without setting maxSize or maxEntrySize on cache');\n        }\n        return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#tail; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                }\n                else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#head; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                }\n                else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return (index !== undefined &&\n            this.#keyMap.get(this.#keyList[index]) === index);\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */\n    *entries() {\n        for (const i of this.#indexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */\n    *rentries() {\n        for (const i of this.#rindexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *keys() {\n        for (const i of this.#indexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rkeys() {\n        for (const i of this.#rindexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *values() {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rvalues() {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * A String value that is used in the creation of the default string\n     * description of an object. Called by the built-in method\n     * `Object.prototype.toString`.\n     */\n    [Symbol.toStringTag] = 'LRUCache';\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n     */\n    find(fn, getOptions = {}) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from most\n     * recently used to least recently used.\n     *\n     * `fn` is called as `fn(value, key, cache)`.\n     *\n     * If `thisp` is provided, function will be called in the `this`-context of\n     * the provided object, or the cache if no `thisp` object is provided.\n     *\n     * Does not update age or recenty of use, or iterate over stale values.\n     */\n    forEach(fn, thisp = this) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */\n    rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */\n    purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({ allowStale: true })) {\n            if (this.#isStale(i)) {\n                this.#delete(this.#keyList[i], 'expire');\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Get the extended info about a given entry, to get its value, size, and\n     * TTL info simultaneously. Returns `undefined` if the key is not present.\n     *\n     * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n     * serialization, the `start` value is always the current timestamp, and the\n     * `ttl` is a calculated remaining time to live (negative if expired).\n     *\n     * Always returns stale values, if their info is found in the cache, so be\n     * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n     * if relevant.\n     */\n    info(key) {\n        const i = this.#keyMap.get(key);\n        if (i === undefined)\n            return undefined;\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v)\n            ? v.__staleWhileFetching\n            : v;\n        if (value === undefined)\n            return undefined;\n        const entry = { value };\n        if (this.#ttls && this.#starts) {\n            const ttl = this.#ttls[i];\n            const start = this.#starts[i];\n            if (ttl && start) {\n                const remain = ttl - (perf.now() - start);\n                entry.ttl = remain;\n                entry.start = Date.now();\n            }\n        }\n        if (this.#sizes) {\n            entry.size = this.#sizes[i];\n        }\n        return entry;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to {@link LRUCache#load}.\n     *\n     * The `start` fields are calculated relative to a portable `Date.now()`\n     * timestamp, even if `performance.now()` is available.\n     *\n     * Stale entries are always included in the `dump`, even if\n     * {@link LRUCache.OptionsBase.allowStale} is false.\n     *\n     * Note: this returns an actual array, not a generator, so it can be more\n     * easily passed around.\n     */\n    dump() {\n        const arr = [];\n        for (const i of this.#indexes({ allowStale: true })) {\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined || key === undefined)\n                continue;\n            const entry = { value };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([key, entry]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     *\n     * The shape of the resulting cache may be different if the same options are\n     * not used in both caches.\n     *\n     * The `start` fields are assumed to be calculated relative to a portable\n     * `Date.now()` timestamp, even if `performance.now()` is available.\n     */\n    load(arr) {\n        this.clear();\n        for (const [key, entry] of arr) {\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     *\n     * Note: if `undefined` is specified as a value, this is an alias for\n     * {@link LRUCache#delete}\n     *\n     * Fields on the {@link LRUCache.SetOptions} options param will override\n     * their corresponding values in the constructor options for the scope\n     * of this single `set()` operation.\n     *\n     * If `start` is provided, then that will set the effective start\n     * time for the TTL calculation. Note that this must be a previous\n     * value of `performance.now()` if supported, or a previous value of\n     * `Date.now()` if not.\n     *\n     * Options object may also include `size`, which will prevent\n     * calling the `sizeCalculation` function and just use the specified\n     * number if it is a positive integer, and `noDisposeOnSet` which\n     * will prevent calling a `dispose` function in the case of\n     * overwrites.\n     *\n     * If the `size` (or return value of `sizeCalculation`) for a given\n     * entry is greater than `maxEntrySize`, then the item will not be\n     * added to the cache.\n     *\n     * Will update the recency of the entry.\n     *\n     * If the value is `undefined`, then this is an alias for\n     * `cache.delete(key)`. `undefined` is never stored in the cache.\n     */\n    set(k, v, setOptions = {}) {\n        if (v === undefined) {\n            this.delete(k);\n            return this;\n        }\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status, } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = 'miss';\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.#delete(k, 'set');\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = (this.#size === 0\n                ? this.#tail\n                : this.#free.length !== 0\n                    ? this.#free.pop()\n                    : this.#size === this.#max\n                        ? this.#evict(false)\n                        : this.#size);\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status)\n                status.set = 'add';\n            noUpdateTTL = false;\n        }\n        else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error('replaced'));\n                    const { __staleWhileFetching: s } = oldVal;\n                    if (s !== undefined && !noDisposeOnSet) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(s, k, 'set');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([s, k, 'set']);\n                        }\n                    }\n                }\n                else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, 'set');\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([oldVal, k, 'set']);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = 'replace';\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal)\n                        ? oldVal.__staleWhileFetching\n                        : oldVal;\n                    if (oldValue !== undefined)\n                        status.oldValue = oldValue;\n                }\n            }\n            else if (status) {\n                status.set = 'update';\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status)\n                this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */\n    pop() {\n        try {\n            while (this.#size) {\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                }\n                else if (val !== undefined) {\n                    return val;\n                }\n            }\n        }\n        finally {\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while ((task = dt?.shift())) {\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('evicted'));\n        }\n        else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, 'evict');\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, 'evict']);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        }\n        else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Check if a key is in the cache, without updating the recency of\n     * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n     * to `true` in either the options or the constructor.\n     *\n     * Will return `false` if the item is stale, even though it is technically in\n     * the cache. The difference can be determined (if it matters) by using a\n     * `status` argument, and inspecting the `has` field.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */\n    has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) &&\n                v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = 'hit';\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            }\n            else if (status) {\n                status.has = 'stale';\n                this.#statusTTL(status, index);\n            }\n        }\n        else if (status) {\n            status.has = 'miss';\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */\n    peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index === undefined ||\n            (!allowStale && this.#isStale(index))) {\n            return;\n        }\n        const v = this.#valList[index];\n        // either stale and allowed, or forcing a refresh of non-stale value\n        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AC();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n            signal: ac.signal,\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context,\n        };\n        const cb = (v, updateCache = false) => {\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort)\n                        options.status.fetchAbortIgnored = true;\n                }\n                else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    }\n                    else {\n                        this.#delete(k, 'fetch');\n                    }\n                }\n                else {\n                    if (options.status)\n                        options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er) => {\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er) => {\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.#delete(k, 'fetch');\n                }\n                else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            }\n            else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej) => {\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then(v => res(v === undefined ? undefined : v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener('abort', () => {\n                if (!options.ignoreFetchAbort ||\n                    options.allowStaleOnFetchAbort) {\n                    res(undefined);\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = v => cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status)\n            options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined,\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, { ...fetchOpts.options, status: undefined });\n            index = this.#keyMap.get(k);\n        }\n        else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod)\n            return false;\n        const b = p;\n        return (!!b &&\n            b instanceof Promise &&\n            b.hasOwnProperty('__staleWhileFetching') &&\n            b.__abortController instanceof AC);\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { \n        // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, \n        // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, \n        // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal, } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status)\n                status.fetch = 'get';\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status,\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal,\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status)\n                status.fetch = 'miss';\n            const p = this.#backgroundFetch(k, index, options, context);\n            return (p.__returned = p);\n        }\n        else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = 'inflight';\n                    if (stale)\n                        status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : (v.__returned = v);\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status)\n                    status.fetch = 'hit';\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status)\n                    this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? 'stale' : 'refresh';\n                if (staleVal && isStale)\n                    status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : (p.__returned = p);\n        }\n    }\n    async forceFetch(k, fetchOptions = {}) {\n        const v = await this.fetch(k, fetchOptions);\n        if (v === undefined)\n            throw new Error('fetch() returned undefined');\n        return v;\n    }\n    memo(k, memoOptions = {}) {\n        const memoMethod = this.#memoMethod;\n        if (!memoMethod) {\n            throw new Error('no memoMethod provided to constructor');\n        }\n        const { context, forceRefresh, ...options } = memoOptions;\n        const v = this.get(k, options);\n        if (!forceRefresh && v !== undefined)\n            return v;\n        const vv = memoMethod(k, v, {\n            options,\n            context,\n        });\n        this.set(k, vv, options);\n        return vv;\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */\n    get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status, } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status)\n                this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status)\n                    status.get = 'stale';\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.#delete(k, 'expire');\n                    }\n                    if (status && allowStale)\n                        status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                }\n                else {\n                    if (status &&\n                        allowStale &&\n                        value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            }\n            else {\n                if (status)\n                    status.get = 'hit';\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        }\n        else if (status) {\n            status.get = 'miss';\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            }\n            else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     *\n     * Returns true if the key was deleted, false otherwise.\n     */\n    delete(k) {\n        return this.#delete(k, 'delete');\n    }\n    #delete(k, reason) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.#clear(reason);\n                }\n                else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error('deleted'));\n                    }\n                    else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, reason);\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([v, k, reason]);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    }\n                    else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    }\n                    else {\n                        const pi = this.#prev[index];\n                        this.#next[pi] = this.#next[index];\n                        const ni = this.#next[index];\n                        this.#prev[ni] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */\n    clear() {\n        return this.#clear('delete');\n    }\n    #clear(reason) {\n        for (const index of this.#rindexes({ allowStale: true })) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error('deleted'));\n            }\n            else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, reason);\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([v, k, reason]);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertValidPattern = void 0;\nconst MAX_PATTERN_LENGTH = 1024 * 64;\nconst assertValidPattern = (pattern) => {\n    if (typeof pattern !== 'string') {\n        throw new TypeError('invalid pattern');\n    }\n    if (pattern.length > MAX_PATTERN_LENGTH) {\n        throw new TypeError('pattern is too long');\n    }\n};\nexports.assertValidPattern = assertValidPattern;\n//# sourceMappingURL=assert-valid-pattern.js.map","\"use strict\";\n// parse a single path portion\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AST = void 0;\nconst brace_expressions_js_1 = require(\"./brace-expressions.js\");\nconst unescape_js_1 = require(\"./unescape.js\");\nconst types = new Set(['!', '?', '+', '*', '@']);\nconst isExtglobType = (c) => types.has(c);\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))';\nconst startNoDot = '(?!\\\\.)';\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.']);\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.']);\nconst reSpecials = new Set('().*{}+?[]^$\\\\!');\nconst regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n// any single thing other than /\nconst qmark = '[^/]';\n// * => any number of characters\nconst star = qmark + '*?';\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?';\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\nclass AST {\n    type;\n    #root;\n    #hasMagic;\n    #uflag = false;\n    #parts = [];\n    #parent;\n    #parentIndex;\n    #negs;\n    #filledNegs = false;\n    #options;\n    #toString;\n    // set to true if it's an extglob with no children\n    // (which really means one child of '')\n    #emptyExt = false;\n    constructor(type, parent, options = {}) {\n        this.type = type;\n        // extglobs are inherently magical\n        if (type)\n            this.#hasMagic = true;\n        this.#parent = parent;\n        this.#root = this.#parent ? this.#parent.#root : this;\n        this.#options = this.#root === this ? options : this.#root.#options;\n        this.#negs = this.#root === this ? [] : this.#root.#negs;\n        if (type === '!' && !this.#root.#filledNegs)\n            this.#negs.push(this);\n        this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0;\n    }\n    get hasMagic() {\n        /* c8 ignore start */\n        if (this.#hasMagic !== undefined)\n            return this.#hasMagic;\n        /* c8 ignore stop */\n        for (const p of this.#parts) {\n            if (typeof p === 'string')\n                continue;\n            if (p.type || p.hasMagic)\n                return (this.#hasMagic = true);\n        }\n        // note: will be undefined until we generate the regexp src and find out\n        return this.#hasMagic;\n    }\n    // reconstructs the pattern\n    toString() {\n        if (this.#toString !== undefined)\n            return this.#toString;\n        if (!this.type) {\n            return (this.#toString = this.#parts.map(p => String(p)).join(''));\n        }\n        else {\n            return (this.#toString =\n                this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')');\n        }\n    }\n    #fillNegs() {\n        /* c8 ignore start */\n        if (this !== this.#root)\n            throw new Error('should only call on root');\n        if (this.#filledNegs)\n            return this;\n        /* c8 ignore stop */\n        // call toString() once to fill this out\n        this.toString();\n        this.#filledNegs = true;\n        let n;\n        while ((n = this.#negs.pop())) {\n            if (n.type !== '!')\n                continue;\n            // walk up the tree, appending everthing that comes AFTER parentIndex\n            let p = n;\n            let pp = p.#parent;\n            while (pp) {\n                for (let i = p.#parentIndex + 1; !pp.type && i < pp.#parts.length; i++) {\n                    for (const part of n.#parts) {\n                        /* c8 ignore start */\n                        if (typeof part === 'string') {\n                            throw new Error('string part in extglob AST??');\n                        }\n                        /* c8 ignore stop */\n                        part.copyIn(pp.#parts[i]);\n                    }\n                }\n                p = pp;\n                pp = p.#parent;\n            }\n        }\n        return this;\n    }\n    push(...parts) {\n        for (const p of parts) {\n            if (p === '')\n                continue;\n            /* c8 ignore start */\n            if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n                throw new Error('invalid part: ' + p);\n            }\n            /* c8 ignore stop */\n            this.#parts.push(p);\n        }\n    }\n    toJSON() {\n        const ret = this.type === null\n            ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n            : [this.type, ...this.#parts.map(p => p.toJSON())];\n        if (this.isStart() && !this.type)\n            ret.unshift([]);\n        if (this.isEnd() &&\n            (this === this.#root ||\n                (this.#root.#filledNegs && this.#parent?.type === '!'))) {\n            ret.push({});\n        }\n        return ret;\n    }\n    isStart() {\n        if (this.#root === this)\n            return true;\n        // if (this.type) return !!this.#parent?.isStart()\n        if (!this.#parent?.isStart())\n            return false;\n        if (this.#parentIndex === 0)\n            return true;\n        // if everything AHEAD of this is a negation, then it's still the \"start\"\n        const p = this.#parent;\n        for (let i = 0; i < this.#parentIndex; i++) {\n            const pp = p.#parts[i];\n            if (!(pp instanceof AST && pp.type === '!')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    isEnd() {\n        if (this.#root === this)\n            return true;\n        if (this.#parent?.type === '!')\n            return true;\n        if (!this.#parent?.isEnd())\n            return false;\n        if (!this.type)\n            return this.#parent?.isEnd();\n        // if not root, it'll always have a parent\n        /* c8 ignore start */\n        const pl = this.#parent ? this.#parent.#parts.length : 0;\n        /* c8 ignore stop */\n        return this.#parentIndex === pl - 1;\n    }\n    copyIn(part) {\n        if (typeof part === 'string')\n            this.push(part);\n        else\n            this.push(part.clone(this));\n    }\n    clone(parent) {\n        const c = new AST(this.type, parent);\n        for (const p of this.#parts) {\n            c.copyIn(p);\n        }\n        return c;\n    }\n    static #parseAST(str, ast, pos, opt) {\n        let escaping = false;\n        let inBrace = false;\n        let braceStart = -1;\n        let braceNeg = false;\n        if (ast.type === null) {\n            // outside of a extglob, append until we find a start\n            let i = pos;\n            let acc = '';\n            while (i < str.length) {\n                const c = str.charAt(i++);\n                // still accumulate escapes at this point, but we do ignore\n                // starts that are escaped\n                if (escaping || c === '\\\\') {\n                    escaping = !escaping;\n                    acc += c;\n                    continue;\n                }\n                if (inBrace) {\n                    if (i === braceStart + 1) {\n                        if (c === '^' || c === '!') {\n                            braceNeg = true;\n                        }\n                    }\n                    else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n                        inBrace = false;\n                    }\n                    acc += c;\n                    continue;\n                }\n                else if (c === '[') {\n                    inBrace = true;\n                    braceStart = i;\n                    braceNeg = false;\n                    acc += c;\n                    continue;\n                }\n                if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n                    ast.push(acc);\n                    acc = '';\n                    const ext = new AST(c, ast);\n                    i = AST.#parseAST(str, ext, i, opt);\n                    ast.push(ext);\n                    continue;\n                }\n                acc += c;\n            }\n            ast.push(acc);\n            return i;\n        }\n        // some kind of extglob, pos is at the (\n        // find the next | or )\n        let i = pos + 1;\n        let part = new AST(null, ast);\n        const parts = [];\n        let acc = '';\n        while (i < str.length) {\n            const c = str.charAt(i++);\n            // still accumulate escapes at this point, but we do ignore\n            // starts that are escaped\n            if (escaping || c === '\\\\') {\n                escaping = !escaping;\n                acc += c;\n                continue;\n            }\n            if (inBrace) {\n                if (i === braceStart + 1) {\n                    if (c === '^' || c === '!') {\n                        braceNeg = true;\n                    }\n                }\n                else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n                    inBrace = false;\n                }\n                acc += c;\n                continue;\n            }\n            else if (c === '[') {\n                inBrace = true;\n                braceStart = i;\n                braceNeg = false;\n                acc += c;\n                continue;\n            }\n            if (isExtglobType(c) && str.charAt(i) === '(') {\n                part.push(acc);\n                acc = '';\n                const ext = new AST(c, part);\n                part.push(ext);\n                i = AST.#parseAST(str, ext, i, opt);\n                continue;\n            }\n            if (c === '|') {\n                part.push(acc);\n                acc = '';\n                parts.push(part);\n                part = new AST(null, ast);\n                continue;\n            }\n            if (c === ')') {\n                if (acc === '' && ast.#parts.length === 0) {\n                    ast.#emptyExt = true;\n                }\n                part.push(acc);\n                acc = '';\n                ast.push(...parts, part);\n                return i;\n            }\n            acc += c;\n        }\n        // unfinished extglob\n        // if we got here, it was a malformed extglob! not an extglob, but\n        // maybe something else in there.\n        ast.type = null;\n        ast.#hasMagic = undefined;\n        ast.#parts = [str.substring(pos - 1)];\n        return i;\n    }\n    static fromGlob(pattern, options = {}) {\n        const ast = new AST(null, undefined, options);\n        AST.#parseAST(pattern, ast, 0, options);\n        return ast;\n    }\n    // returns the regular expression if there's magic, or the unescaped\n    // string if not.\n    toMMPattern() {\n        // should only be called on root\n        /* c8 ignore start */\n        if (this !== this.#root)\n            return this.#root.toMMPattern();\n        /* c8 ignore stop */\n        const glob = this.toString();\n        const [re, body, hasMagic, uflag] = this.toRegExpSource();\n        // if we're in nocase mode, and not nocaseMagicOnly, then we do\n        // still need a regular expression if we have to case-insensitively\n        // match capital/lowercase characters.\n        const anyMagic = hasMagic ||\n            this.#hasMagic ||\n            (this.#options.nocase &&\n                !this.#options.nocaseMagicOnly &&\n                glob.toUpperCase() !== glob.toLowerCase());\n        if (!anyMagic) {\n            return body;\n        }\n        const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '');\n        return Object.assign(new RegExp(`^${re}$`, flags), {\n            _src: re,\n            _glob: glob,\n        });\n    }\n    get options() {\n        return this.#options;\n    }\n    // returns the string match, the regexp source, whether there's magic\n    // in the regexp (so a regular expression is required) and whether or\n    // not the uflag is needed for the regular expression (for posix classes)\n    // TODO: instead of injecting the start/end at this point, just return\n    // the BODY of the regexp, along with the start/end portions suitable\n    // for binding the start/end in either a joined full-path makeRe context\n    // (where we bind to (^|/), or a standalone matchPart context (where\n    // we bind to ^, and not /).  Otherwise slashes get duped!\n    //\n    // In part-matching mode, the start is:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n    // - if dots allowed or not possible: ^\n    // - if dots possible and not allowed: ^(?!\\.)\n    // end is:\n    // - if not isEnd(): nothing\n    // - else: $\n    //\n    // In full-path matching mode, we put the slash at the START of the\n    // pattern, so start is:\n    // - if first pattern: same as part-matching mode\n    // - if not isStart(): nothing\n    // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n    // - if dots allowed or not possible: /\n    // - if dots possible and not allowed: /(?!\\.)\n    // end is:\n    // - if last pattern, same as part-matching mode\n    // - else nothing\n    //\n    // Always put the (?:$|/) on negated tails, though, because that has to be\n    // there to bind the end of the negated pattern portion, and it's easier to\n    // just stick it in now rather than try to inject it later in the middle of\n    // the pattern.\n    //\n    // We can just always return the same end, and leave it up to the caller\n    // to know whether it's going to be used joined or in parts.\n    // And, if the start is adjusted slightly, can do the same there:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n    // - if dots allowed or not possible: (?:/|^)\n    // - if dots possible and not allowed: (?:/|^)(?!\\.)\n    //\n    // But it's better to have a simpler binding without a conditional, for\n    // performance, so probably better to return both start options.\n    //\n    // Then the caller just ignores the end if it's not the first pattern,\n    // and the start always gets applied.\n    //\n    // But that's always going to be $ if it's the ending pattern, or nothing,\n    // so the caller can just attach $ at the end of the pattern when building.\n    //\n    // So the todo is:\n    // - better detect what kind of start is needed\n    // - return both flavors of starting pattern\n    // - attach $ at the end of the pattern when creating the actual RegExp\n    //\n    // Ah, but wait, no, that all only applies to the root when the first pattern\n    // is not an extglob. If the first pattern IS an extglob, then we need all\n    // that dot prevention biz to live in the extglob portions, because eg\n    // +(*|.x*) can match .xy but not .yx.\n    //\n    // So, return the two flavors if it's #root and the first child is not an\n    // AST, otherwise leave it to the child AST to handle it, and there,\n    // use the (?:^|/) style of start binding.\n    //\n    // Even simplified further:\n    // - Since the start for a join is eg /(?!\\.) and the start for a part\n    // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n    // or start or whatever) and prepend ^ or / at the Regexp construction.\n    toRegExpSource(allowDot) {\n        const dot = allowDot ?? !!this.#options.dot;\n        if (this.#root === this)\n            this.#fillNegs();\n        if (!this.type) {\n            const noEmpty = this.isStart() && this.isEnd();\n            const src = this.#parts\n                .map(p => {\n                const [re, _, hasMagic, uflag] = typeof p === 'string'\n                    ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n                    : p.toRegExpSource(allowDot);\n                this.#hasMagic = this.#hasMagic || hasMagic;\n                this.#uflag = this.#uflag || uflag;\n                return re;\n            })\n                .join('');\n            let start = '';\n            if (this.isStart()) {\n                if (typeof this.#parts[0] === 'string') {\n                    // this is the string that will match the start of the pattern,\n                    // so we need to protect against dots and such.\n                    // '.' and '..' cannot match unless the pattern is that exactly,\n                    // even if it starts with . or dot:true is set.\n                    const dotTravAllowed = this.#parts.length === 1 && justDots.has(this.#parts[0]);\n                    if (!dotTravAllowed) {\n                        const aps = addPatternStart;\n                        // check if we have a possibility of matching . or ..,\n                        // and prevent that.\n                        const needNoTrav = \n                        // dots are allowed, and the pattern starts with [ or .\n                        (dot && aps.has(src.charAt(0))) ||\n                            // the pattern starts with \\., and then [ or .\n                            (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n                            // the pattern starts with \\.\\., and then [ or .\n                            (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)));\n                        // no need to prevent dots if it can't match a dot, or if a\n                        // sub-pattern will be preventing it anyway.\n                        const needNoDot = !dot && !allowDot && aps.has(src.charAt(0));\n                        start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : '';\n                    }\n                }\n            }\n            // append the \"end of path portion\" pattern to negation tails\n            let end = '';\n            if (this.isEnd() &&\n                this.#root.#filledNegs &&\n                this.#parent?.type === '!') {\n                end = '(?:$|\\\\/)';\n            }\n            const final = start + src + end;\n            return [\n                final,\n                (0, unescape_js_1.unescape)(src),\n                (this.#hasMagic = !!this.#hasMagic),\n                this.#uflag,\n            ];\n        }\n        // We need to calculate the body *twice* if it's a repeat pattern\n        // at the start, once in nodot mode, then again in dot mode, so a\n        // pattern like *(?) can match 'x.y'\n        const repeated = this.type === '*' || this.type === '+';\n        // some kind of extglob\n        const start = this.type === '!' ? '(?:(?!(?:' : '(?:';\n        let body = this.#partsToRegExp(dot);\n        if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n            // invalid extglob, has to at least be *something* present, if it's\n            // the entire path portion.\n            const s = this.toString();\n            this.#parts = [s];\n            this.type = null;\n            this.#hasMagic = undefined;\n            return [s, (0, unescape_js_1.unescape)(this.toString()), false, false];\n        }\n        // XXX abstract out this map method\n        let bodyDotAllowed = !repeated || allowDot || dot || !startNoDot\n            ? ''\n            : this.#partsToRegExp(true);\n        if (bodyDotAllowed === body) {\n            bodyDotAllowed = '';\n        }\n        if (bodyDotAllowed) {\n            body = `(?:${body})(?:${bodyDotAllowed})*?`;\n        }\n        // an empty !() is exactly equivalent to a starNoEmpty\n        let final = '';\n        if (this.type === '!' && this.#emptyExt) {\n            final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty;\n        }\n        else {\n            const close = this.type === '!'\n                ? // !() must match something,but !(x) can match ''\n                    '))' +\n                        (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n                        star +\n                        ')'\n                : this.type === '@'\n                    ? ')'\n                    : this.type === '?'\n                        ? ')?'\n                        : this.type === '+' && bodyDotAllowed\n                            ? ')'\n                            : this.type === '*' && bodyDotAllowed\n                                ? `)?`\n                                : `)${this.type}`;\n            final = start + body + close;\n        }\n        return [\n            final,\n            (0, unescape_js_1.unescape)(body),\n            (this.#hasMagic = !!this.#hasMagic),\n            this.#uflag,\n        ];\n    }\n    #partsToRegExp(dot) {\n        return this.#parts\n            .map(p => {\n            // extglob ASTs should only contain parent ASTs\n            /* c8 ignore start */\n            if (typeof p === 'string') {\n                throw new Error('string type in extglob ast??');\n            }\n            /* c8 ignore stop */\n            // can ignore hasMagic, because extglobs are already always magic\n            const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot);\n            this.#uflag = this.#uflag || uflag;\n            return re;\n        })\n            .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n            .join('|');\n    }\n    static #parseGlob(glob, hasMagic, noEmpty = false) {\n        let escaping = false;\n        let re = '';\n        let uflag = false;\n        for (let i = 0; i < glob.length; i++) {\n            const c = glob.charAt(i);\n            if (escaping) {\n                escaping = false;\n                re += (reSpecials.has(c) ? '\\\\' : '') + c;\n                continue;\n            }\n            if (c === '\\\\') {\n                if (i === glob.length - 1) {\n                    re += '\\\\\\\\';\n                }\n                else {\n                    escaping = true;\n                }\n                continue;\n            }\n            if (c === '[') {\n                const [src, needUflag, consumed, magic] = (0, brace_expressions_js_1.parseClass)(glob, i);\n                if (consumed) {\n                    re += src;\n                    uflag = uflag || needUflag;\n                    i += consumed - 1;\n                    hasMagic = hasMagic || magic;\n                    continue;\n                }\n            }\n            if (c === '*') {\n                if (noEmpty && glob === '*')\n                    re += starNoEmpty;\n                else\n                    re += star;\n                hasMagic = true;\n                continue;\n            }\n            if (c === '?') {\n                re += qmark;\n                hasMagic = true;\n                continue;\n            }\n            re += regExpEscape(c);\n        }\n        return [re, (0, unescape_js_1.unescape)(glob), !!hasMagic, uflag];\n    }\n}\nexports.AST = AST;\n//# sourceMappingURL=ast.js.map","\"use strict\";\n// translate the various posix character classes into unicode properties\n// this works across all unicode locales\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseClass = void 0;\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses = {\n    '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n    '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n    '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n    '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n    '[:cntrl:]': ['\\\\p{Cc}', true],\n    '[:digit:]': ['\\\\p{Nd}', true],\n    '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n    '[:lower:]': ['\\\\p{Ll}', true],\n    '[:print:]': ['\\\\p{C}', true],\n    '[:punct:]': ['\\\\p{P}', true],\n    '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n    '[:upper:]': ['\\\\p{Lu}', true],\n    '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n    '[:xdigit:]': ['A-Fa-f0-9', false],\n};\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s) => s.replace(/[[\\]\\\\-]/g, '\\\\$&');\n// escape all regexp magic characters\nconst regexpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges) => ranges.join('');\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nconst parseClass = (glob, position) => {\n    const pos = position;\n    /* c8 ignore start */\n    if (glob.charAt(pos) !== '[') {\n        throw new Error('not in a brace expression');\n    }\n    /* c8 ignore stop */\n    const ranges = [];\n    const negs = [];\n    let i = pos + 1;\n    let sawStart = false;\n    let uflag = false;\n    let escaping = false;\n    let negate = false;\n    let endPos = pos;\n    let rangeStart = '';\n    WHILE: while (i < glob.length) {\n        const c = glob.charAt(i);\n        if ((c === '!' || c === '^') && i === pos + 1) {\n            negate = true;\n            i++;\n            continue;\n        }\n        if (c === ']' && sawStart && !escaping) {\n            endPos = i + 1;\n            break;\n        }\n        sawStart = true;\n        if (c === '\\\\') {\n            if (!escaping) {\n                escaping = true;\n                i++;\n                continue;\n            }\n            // escaped \\ char, fall through and treat like normal char\n        }\n        if (c === '[' && !escaping) {\n            // either a posix class, a collation equivalent, or just a [\n            for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n                if (glob.startsWith(cls, i)) {\n                    // invalid, [a-[] is fine, but not [a-[:alpha]]\n                    if (rangeStart) {\n                        return ['$.', false, glob.length - pos, true];\n                    }\n                    i += cls.length;\n                    if (neg)\n                        negs.push(unip);\n                    else\n                        ranges.push(unip);\n                    uflag = uflag || u;\n                    continue WHILE;\n                }\n            }\n        }\n        // now it's just a normal character, effectively\n        escaping = false;\n        if (rangeStart) {\n            // throw this range away if it's not valid, but others\n            // can still match.\n            if (c > rangeStart) {\n                ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c));\n            }\n            else if (c === rangeStart) {\n                ranges.push(braceEscape(c));\n            }\n            rangeStart = '';\n            i++;\n            continue;\n        }\n        // now might be the start of a range.\n        // can be either c-d or c-] or c<more...>] or c] at this point\n        if (glob.startsWith('-]', i + 1)) {\n            ranges.push(braceEscape(c + '-'));\n            i += 2;\n            continue;\n        }\n        if (glob.startsWith('-', i + 1)) {\n            rangeStart = c;\n            i += 2;\n            continue;\n        }\n        // not the start of a range, just a single character\n        ranges.push(braceEscape(c));\n        i++;\n    }\n    if (endPos < i) {\n        // didn't see the end of the class, not a valid class,\n        // but might still be valid as a literal match.\n        return ['', false, 0, false];\n    }\n    // if we got no ranges and no negates, then we have a range that\n    // cannot possibly match anything, and that poisons the whole glob\n    if (!ranges.length && !negs.length) {\n        return ['$.', false, glob.length - pos, true];\n    }\n    // if we got one positive range, and it's a single character, then that's\n    // not actually a magic pattern, it's just that one literal character.\n    // we should not treat that as \"magic\", we should just return the literal\n    // character. [_] is a perfectly valid way to escape glob magic chars.\n    if (negs.length === 0 &&\n        ranges.length === 1 &&\n        /^\\\\?.$/.test(ranges[0]) &&\n        !negate) {\n        const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0];\n        return [regexpEscape(r), false, endPos - pos, false];\n    }\n    const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']';\n    const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']';\n    const comb = ranges.length && negs.length\n        ? '(' + sranges + '|' + snegs + ')'\n        : ranges.length\n            ? sranges\n            : snegs;\n    return [comb, uflag, endPos - pos, true];\n};\nexports.parseClass = parseClass;\n//# sourceMappingURL=brace-expressions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = void 0;\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nconst escape = (s, { windowsPathsNoEscape = false, } = {}) => {\n    // don't need to escape +@! because we escape the parens\n    // that make those magic, and escaping ! as [!] isn't valid,\n    // because [!]] is a valid glob class meaning not ']'.\n    return windowsPathsNoEscape\n        ? s.replace(/[?*()[\\]]/g, '[$&]')\n        : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&');\n};\nexports.escape = escape;\n//# sourceMappingURL=escape.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unescape = exports.escape = exports.AST = exports.Minimatch = exports.match = exports.makeRe = exports.braceExpand = exports.defaults = exports.filter = exports.GLOBSTAR = exports.sep = exports.minimatch = void 0;\nconst brace_expansion_1 = __importDefault(require(\"brace-expansion\"));\nconst assert_valid_pattern_js_1 = require(\"./assert-valid-pattern.js\");\nconst ast_js_1 = require(\"./ast.js\");\nconst escape_js_1 = require(\"./escape.js\");\nconst unescape_js_1 = require(\"./unescape.js\");\nconst minimatch = (p, pattern, options = {}) => {\n    (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n    // shortcut: comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n        return false;\n    }\n    return new Minimatch(pattern, options).match(p);\n};\nexports.minimatch = minimatch;\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/;\nconst starDotExtTest = (ext) => (f) => !f.startsWith('.') && f.endsWith(ext);\nconst starDotExtTestDot = (ext) => (f) => f.endsWith(ext);\nconst starDotExtTestNocase = (ext) => {\n    ext = ext.toLowerCase();\n    return (f) => !f.startsWith('.') && f.toLowerCase().endsWith(ext);\n};\nconst starDotExtTestNocaseDot = (ext) => {\n    ext = ext.toLowerCase();\n    return (f) => f.toLowerCase().endsWith(ext);\n};\nconst starDotStarRE = /^\\*+\\.\\*+$/;\nconst starDotStarTest = (f) => !f.startsWith('.') && f.includes('.');\nconst starDotStarTestDot = (f) => f !== '.' && f !== '..' && f.includes('.');\nconst dotStarRE = /^\\.\\*+$/;\nconst dotStarTest = (f) => f !== '.' && f !== '..' && f.startsWith('.');\nconst starRE = /^\\*+$/;\nconst starTest = (f) => f.length !== 0 && !f.startsWith('.');\nconst starTestDot = (f) => f.length !== 0 && f !== '.' && f !== '..';\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/;\nconst qmarksTestNocase = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExt([$0]);\n    if (!ext)\n        return noext;\n    ext = ext.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst qmarksTestNocaseDot = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    if (!ext)\n        return noext;\n    ext = ext.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst qmarksTestDot = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    return !ext ? noext : (f) => noext(f) && f.endsWith(ext);\n};\nconst qmarksTest = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExt([$0]);\n    return !ext ? noext : (f) => noext(f) && f.endsWith(ext);\n};\nconst qmarksTestNoExt = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && !f.startsWith('.');\n};\nconst qmarksTestNoExtDot = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && f !== '.' && f !== '..';\n};\n/* c8 ignore start */\nconst defaultPlatform = (typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n        process.platform\n    : 'posix');\nconst path = {\n    win32: { sep: '\\\\' },\n    posix: { sep: '/' },\n};\n/* c8 ignore stop */\nexports.sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep;\nexports.minimatch.sep = exports.sep;\nexports.GLOBSTAR = Symbol('globstar **');\nexports.minimatch.GLOBSTAR = exports.GLOBSTAR;\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]';\n// * => any number of characters\nconst star = qmark + '*?';\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?';\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?';\nconst filter = (pattern, options = {}) => (p) => (0, exports.minimatch)(p, pattern, options);\nexports.filter = filter;\nexports.minimatch.filter = exports.filter;\nconst ext = (a, b = {}) => Object.assign({}, a, b);\nconst defaults = (def) => {\n    if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n        return exports.minimatch;\n    }\n    const orig = exports.minimatch;\n    const m = (p, pattern, options = {}) => orig(p, pattern, ext(def, options));\n    return Object.assign(m, {\n        Minimatch: class Minimatch extends orig.Minimatch {\n            constructor(pattern, options = {}) {\n                super(pattern, ext(def, options));\n            }\n            static defaults(options) {\n                return orig.defaults(ext(def, options)).Minimatch;\n            }\n        },\n        AST: class AST extends orig.AST {\n            /* c8 ignore start */\n            constructor(type, parent, options = {}) {\n                super(type, parent, ext(def, options));\n            }\n            /* c8 ignore stop */\n            static fromGlob(pattern, options = {}) {\n                return orig.AST.fromGlob(pattern, ext(def, options));\n            }\n        },\n        unescape: (s, options = {}) => orig.unescape(s, ext(def, options)),\n        escape: (s, options = {}) => orig.escape(s, ext(def, options)),\n        filter: (pattern, options = {}) => orig.filter(pattern, ext(def, options)),\n        defaults: (options) => orig.defaults(ext(def, options)),\n        makeRe: (pattern, options = {}) => orig.makeRe(pattern, ext(def, options)),\n        braceExpand: (pattern, options = {}) => orig.braceExpand(pattern, ext(def, options)),\n        match: (list, pattern, options = {}) => orig.match(list, pattern, ext(def, options)),\n        sep: orig.sep,\n        GLOBSTAR: exports.GLOBSTAR,\n    });\n};\nexports.defaults = defaults;\nexports.minimatch.defaults = exports.defaults;\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nconst braceExpand = (pattern, options = {}) => {\n    (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n    // Thanks to Yeting Li <https://github.com/yetingli> for\n    // improving this regexp to avoid a ReDOS vulnerability.\n    if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n        // shortcut. no need to expand.\n        return [pattern];\n    }\n    return (0, brace_expansion_1.default)(pattern);\n};\nexports.braceExpand = braceExpand;\nexports.minimatch.braceExpand = exports.braceExpand;\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nconst makeRe = (pattern, options = {}) => new Minimatch(pattern, options).makeRe();\nexports.makeRe = makeRe;\nexports.minimatch.makeRe = exports.makeRe;\nconst match = (list, pattern, options = {}) => {\n    const mm = new Minimatch(pattern, options);\n    list = list.filter(f => mm.match(f));\n    if (mm.options.nonull && !list.length) {\n        list.push(pattern);\n    }\n    return list;\n};\nexports.match = match;\nexports.minimatch.match = exports.match;\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/;\nconst regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\nclass Minimatch {\n    options;\n    set;\n    pattern;\n    windowsPathsNoEscape;\n    nonegate;\n    negate;\n    comment;\n    empty;\n    preserveMultipleSlashes;\n    partial;\n    globSet;\n    globParts;\n    nocase;\n    isWindows;\n    platform;\n    windowsNoMagicRoot;\n    regexp;\n    constructor(pattern, options = {}) {\n        (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n        options = options || {};\n        this.options = options;\n        this.pattern = pattern;\n        this.platform = options.platform || defaultPlatform;\n        this.isWindows = this.platform === 'win32';\n        this.windowsPathsNoEscape =\n            !!options.windowsPathsNoEscape || options.allowWindowsEscape === false;\n        if (this.windowsPathsNoEscape) {\n            this.pattern = this.pattern.replace(/\\\\/g, '/');\n        }\n        this.preserveMultipleSlashes = !!options.preserveMultipleSlashes;\n        this.regexp = null;\n        this.negate = false;\n        this.nonegate = !!options.nonegate;\n        this.comment = false;\n        this.empty = false;\n        this.partial = !!options.partial;\n        this.nocase = !!this.options.nocase;\n        this.windowsNoMagicRoot =\n            options.windowsNoMagicRoot !== undefined\n                ? options.windowsNoMagicRoot\n                : !!(this.isWindows && this.nocase);\n        this.globSet = [];\n        this.globParts = [];\n        this.set = [];\n        // make the set of regexps etc.\n        this.make();\n    }\n    hasMagic() {\n        if (this.options.magicalBraces && this.set.length > 1) {\n            return true;\n        }\n        for (const pattern of this.set) {\n            for (const part of pattern) {\n                if (typeof part !== 'string')\n                    return true;\n            }\n        }\n        return false;\n    }\n    debug(..._) { }\n    make() {\n        const pattern = this.pattern;\n        const options = this.options;\n        // empty patterns and comments match nothing.\n        if (!options.nocomment && pattern.charAt(0) === '#') {\n            this.comment = true;\n            return;\n        }\n        if (!pattern) {\n            this.empty = true;\n            return;\n        }\n        // step 1: figure out negation, etc.\n        this.parseNegate();\n        // step 2: expand braces\n        this.globSet = [...new Set(this.braceExpand())];\n        if (options.debug) {\n            this.debug = (...args) => console.error(...args);\n        }\n        this.debug(this.pattern, this.globSet);\n        // step 3: now we have a set, so turn each one into a series of\n        // path-portion matching patterns.\n        // These will be regexps, except in the case of \"**\", which is\n        // set to the GLOBSTAR object for globstar behavior,\n        // and will not contain any / characters\n        //\n        // First, we preprocess to make the glob pattern sets a bit simpler\n        // and deduped.  There are some perf-killing patterns that can cause\n        // problems with a glob walk, but we can simplify them down a bit.\n        const rawGlobParts = this.globSet.map(s => this.slashSplit(s));\n        this.globParts = this.preprocess(rawGlobParts);\n        this.debug(this.pattern, this.globParts);\n        // glob --> regexps\n        let set = this.globParts.map((s, _, __) => {\n            if (this.isWindows && this.windowsNoMagicRoot) {\n                // check if it's a drive or unc path.\n                const isUNC = s[0] === '' &&\n                    s[1] === '' &&\n                    (s[2] === '?' || !globMagic.test(s[2])) &&\n                    !globMagic.test(s[3]);\n                const isDrive = /^[a-z]:/i.test(s[0]);\n                if (isUNC) {\n                    return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))];\n                }\n                else if (isDrive) {\n                    return [s[0], ...s.slice(1).map(ss => this.parse(ss))];\n                }\n            }\n            return s.map(ss => this.parse(ss));\n        });\n        this.debug(this.pattern, set);\n        // filter out everything that didn't compile properly.\n        this.set = set.filter(s => s.indexOf(false) === -1);\n        // do not treat the ? in UNC paths as magic\n        if (this.isWindows) {\n            for (let i = 0; i < this.set.length; i++) {\n                const p = this.set[i];\n                if (p[0] === '' &&\n                    p[1] === '' &&\n                    this.globParts[i][2] === '?' &&\n                    typeof p[3] === 'string' &&\n                    /^[a-z]:$/i.test(p[3])) {\n                    p[2] = '?';\n                }\n            }\n        }\n        this.debug(this.pattern, this.set);\n    }\n    // various transforms to equivalent pattern sets that are\n    // faster to process in a filesystem walk.  The goal is to\n    // eliminate what we can, and push all ** patterns as far\n    // to the right as possible, even if it increases the number\n    // of patterns that we have to process.\n    preprocess(globParts) {\n        // if we're not in globstar mode, then turn all ** into *\n        if (this.options.noglobstar) {\n            for (let i = 0; i < globParts.length; i++) {\n                for (let j = 0; j < globParts[i].length; j++) {\n                    if (globParts[i][j] === '**') {\n                        globParts[i][j] = '*';\n                    }\n                }\n            }\n        }\n        const { optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            // aggressive optimization for the purpose of fs walking\n            globParts = this.firstPhasePreProcess(globParts);\n            globParts = this.secondPhasePreProcess(globParts);\n        }\n        else if (optimizationLevel >= 1) {\n            // just basic optimizations to remove some .. parts\n            globParts = this.levelOneOptimize(globParts);\n        }\n        else {\n            // just collapse multiple ** portions into one\n            globParts = this.adjascentGlobstarOptimize(globParts);\n        }\n        return globParts;\n    }\n    // just get rid of adjascent ** portions\n    adjascentGlobstarOptimize(globParts) {\n        return globParts.map(parts => {\n            let gs = -1;\n            while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n                let i = gs;\n                while (parts[i + 1] === '**') {\n                    i++;\n                }\n                if (i !== gs) {\n                    parts.splice(gs, i - gs);\n                }\n            }\n            return parts;\n        });\n    }\n    // get rid of adjascent ** and resolve .. portions\n    levelOneOptimize(globParts) {\n        return globParts.map(parts => {\n            parts = parts.reduce((set, part) => {\n                const prev = set[set.length - 1];\n                if (part === '**' && prev === '**') {\n                    return set;\n                }\n                if (part === '..') {\n                    if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n                        set.pop();\n                        return set;\n                    }\n                }\n                set.push(part);\n                return set;\n            }, []);\n            return parts.length === 0 ? [''] : parts;\n        });\n    }\n    levelTwoFileOptimize(parts) {\n        if (!Array.isArray(parts)) {\n            parts = this.slashSplit(parts);\n        }\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/<e>/<rest> -> <pre>/<rest>\n            if (!this.preserveMultipleSlashes) {\n                for (let i = 1; i < parts.length - 1; i++) {\n                    const p = parts[i];\n                    // don't squeeze out UNC patterns\n                    if (i === 1 && p === '' && parts[0] === '')\n                        continue;\n                    if (p === '.' || p === '') {\n                        didSomething = true;\n                        parts.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (parts[0] === '.' &&\n                    parts.length === 2 &&\n                    (parts[1] === '.' || parts[1] === '')) {\n                    didSomething = true;\n                    parts.pop();\n                }\n            }\n            // <pre>/<p>/../<rest> -> <pre>/<rest>\n            let dd = 0;\n            while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n                const p = parts[dd - 1];\n                if (p && p !== '.' && p !== '..' && p !== '**') {\n                    didSomething = true;\n                    parts.splice(dd - 1, 2);\n                    dd -= 2;\n                }\n            }\n        } while (didSomething);\n        return parts.length === 0 ? [''] : parts;\n    }\n    // First phase: single-pattern processing\n    // <pre> is 1 or more portions\n    // <rest> is 1 or more portions\n    // <p> is any portion other than ., .., '', or **\n    // <e> is . or ''\n    //\n    // **/.. is *brutal* for filesystem walking performance, because\n    // it effectively resets the recursive walk each time it occurs,\n    // and ** cannot be reduced out by a .. pattern part like a regexp\n    // or most strings (other than .., ., and '') can be.\n    //\n    // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n    // <pre>/<e>/<rest> -> <pre>/<rest>\n    // <pre>/<p>/../<rest> -> <pre>/<rest>\n    // **/**/<rest> -> **/<rest>\n    //\n    // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n    // this WOULD be allowed if ** did follow symlinks, or * didn't\n    firstPhasePreProcess(globParts) {\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n            for (let parts of globParts) {\n                let gs = -1;\n                while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n                    let gss = gs;\n                    while (parts[gss + 1] === '**') {\n                        // <pre>/**/**/<rest> -> <pre>/**/<rest>\n                        gss++;\n                    }\n                    // eg, if gs is 2 and gss is 4, that means we have 3 **\n                    // parts, and can remove 2 of them.\n                    if (gss > gs) {\n                        parts.splice(gs + 1, gss - gs);\n                    }\n                    let next = parts[gs + 1];\n                    const p = parts[gs + 2];\n                    const p2 = parts[gs + 3];\n                    if (next !== '..')\n                        continue;\n                    if (!p ||\n                        p === '.' ||\n                        p === '..' ||\n                        !p2 ||\n                        p2 === '.' ||\n                        p2 === '..') {\n                        continue;\n                    }\n                    didSomething = true;\n                    // edit parts in place, and push the new one\n                    parts.splice(gs, 1);\n                    const other = parts.slice(0);\n                    other[gs] = '**';\n                    globParts.push(other);\n                    gs--;\n                }\n                // <pre>/<e>/<rest> -> <pre>/<rest>\n                if (!this.preserveMultipleSlashes) {\n                    for (let i = 1; i < parts.length - 1; i++) {\n                        const p = parts[i];\n                        // don't squeeze out UNC patterns\n                        if (i === 1 && p === '' && parts[0] === '')\n                            continue;\n                        if (p === '.' || p === '') {\n                            didSomething = true;\n                            parts.splice(i, 1);\n                            i--;\n                        }\n                    }\n                    if (parts[0] === '.' &&\n                        parts.length === 2 &&\n                        (parts[1] === '.' || parts[1] === '')) {\n                        didSomething = true;\n                        parts.pop();\n                    }\n                }\n                // <pre>/<p>/../<rest> -> <pre>/<rest>\n                let dd = 0;\n                while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n                    const p = parts[dd - 1];\n                    if (p && p !== '.' && p !== '..' && p !== '**') {\n                        didSomething = true;\n                        const needDot = dd === 1 && parts[dd + 1] === '**';\n                        const splin = needDot ? ['.'] : [];\n                        parts.splice(dd - 1, 2, ...splin);\n                        if (parts.length === 0)\n                            parts.push('');\n                        dd -= 2;\n                    }\n                }\n            }\n        } while (didSomething);\n        return globParts;\n    }\n    // second phase: multi-pattern dedupes\n    // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n    // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n    // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n    //\n    // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n    // ^-- not valid because ** doens't follow symlinks\n    secondPhasePreProcess(globParts) {\n        for (let i = 0; i < globParts.length - 1; i++) {\n            for (let j = i + 1; j < globParts.length; j++) {\n                const matched = this.partsMatch(globParts[i], globParts[j], !this.preserveMultipleSlashes);\n                if (matched) {\n                    globParts[i] = [];\n                    globParts[j] = matched;\n                    break;\n                }\n            }\n        }\n        return globParts.filter(gs => gs.length);\n    }\n    partsMatch(a, b, emptyGSMatch = false) {\n        let ai = 0;\n        let bi = 0;\n        let result = [];\n        let which = '';\n        while (ai < a.length && bi < b.length) {\n            if (a[ai] === b[bi]) {\n                result.push(which === 'b' ? b[bi] : a[ai]);\n                ai++;\n                bi++;\n            }\n            else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n                result.push(a[ai]);\n                ai++;\n            }\n            else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n                result.push(b[bi]);\n                bi++;\n            }\n            else if (a[ai] === '*' &&\n                b[bi] &&\n                (this.options.dot || !b[bi].startsWith('.')) &&\n                b[bi] !== '**') {\n                if (which === 'b')\n                    return false;\n                which = 'a';\n                result.push(a[ai]);\n                ai++;\n                bi++;\n            }\n            else if (b[bi] === '*' &&\n                a[ai] &&\n                (this.options.dot || !a[ai].startsWith('.')) &&\n                a[ai] !== '**') {\n                if (which === 'a')\n                    return false;\n                which = 'b';\n                result.push(b[bi]);\n                ai++;\n                bi++;\n            }\n            else {\n                return false;\n            }\n        }\n        // if we fall out of the loop, it means they two are identical\n        // as long as their lengths match\n        return a.length === b.length && result;\n    }\n    parseNegate() {\n        if (this.nonegate)\n            return;\n        const pattern = this.pattern;\n        let negate = false;\n        let negateOffset = 0;\n        for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n            negate = !negate;\n            negateOffset++;\n        }\n        if (negateOffset)\n            this.pattern = pattern.slice(negateOffset);\n        this.negate = negate;\n    }\n    // set partial to true to test if, for example,\n    // \"/a/b\" matches the start of \"/*/b/*/d\"\n    // Partial means, if you run out of file before you run\n    // out of pattern, then that's fine, as long as all\n    // the parts match.\n    matchOne(file, pattern, partial = false) {\n        const options = this.options;\n        // UNC paths like //?/X:/... can match X:/... and vice versa\n        // Drive letters in absolute drive or unc paths are always compared\n        // case-insensitively.\n        if (this.isWindows) {\n            const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0]);\n            const fileUNC = !fileDrive &&\n                file[0] === '' &&\n                file[1] === '' &&\n                file[2] === '?' &&\n                /^[a-z]:$/i.test(file[3]);\n            const patternDrive = typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0]);\n            const patternUNC = !patternDrive &&\n                pattern[0] === '' &&\n                pattern[1] === '' &&\n                pattern[2] === '?' &&\n                typeof pattern[3] === 'string' &&\n                /^[a-z]:$/i.test(pattern[3]);\n            const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined;\n            const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined;\n            if (typeof fdi === 'number' && typeof pdi === 'number') {\n                const [fd, pd] = [file[fdi], pattern[pdi]];\n                if (fd.toLowerCase() === pd.toLowerCase()) {\n                    pattern[pdi] = fd;\n                    if (pdi > fdi) {\n                        pattern = pattern.slice(pdi);\n                    }\n                    else if (fdi > pdi) {\n                        file = file.slice(fdi);\n                    }\n                }\n            }\n        }\n        // resolve and reduce . and .. portions in the file as well.\n        // dont' need to do the second phase, because it's only one string[]\n        const { optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            file = this.levelTwoFileOptimize(file);\n        }\n        this.debug('matchOne', this, { file, pattern });\n        this.debug('matchOne', file.length, pattern.length);\n        for (var fi = 0, pi = 0, fl = file.length, pl = pattern.length; fi < fl && pi < pl; fi++, pi++) {\n            this.debug('matchOne loop');\n            var p = pattern[pi];\n            var f = file[fi];\n            this.debug(pattern, p, f);\n            // should be impossible.\n            // some invalid regexp stuff in the set.\n            /* c8 ignore start */\n            if (p === false) {\n                return false;\n            }\n            /* c8 ignore stop */\n            if (p === exports.GLOBSTAR) {\n                this.debug('GLOBSTAR', [pattern, p, f]);\n                // \"**\"\n                // a/**/b/**/c would match the following:\n                // a/b/x/y/z/c\n                // a/x/y/z/b/c\n                // a/b/x/b/x/c\n                // a/b/c\n                // To do this, take the rest of the pattern after\n                // the **, and see if it would match the file remainder.\n                // If so, return success.\n                // If not, the ** \"swallows\" a segment, and try again.\n                // This is recursively awful.\n                //\n                // a/**/b/**/c matching a/b/x/y/z/c\n                // - a matches a\n                // - doublestar\n                //   - matchOne(b/x/y/z/c, b/**/c)\n                //     - b matches b\n                //     - doublestar\n                //       - matchOne(x/y/z/c, c) -> no\n                //       - matchOne(y/z/c, c) -> no\n                //       - matchOne(z/c, c) -> no\n                //       - matchOne(c, c) yes, hit\n                var fr = fi;\n                var pr = pi + 1;\n                if (pr === pl) {\n                    this.debug('** at the end');\n                    // a ** at the end will just swallow the rest.\n                    // We have found a match.\n                    // however, it will not swallow /.x, unless\n                    // options.dot is set.\n                    // . and .. are *never* matched by **, for explosively\n                    // exponential reasons.\n                    for (; fi < fl; fi++) {\n                        if (file[fi] === '.' ||\n                            file[fi] === '..' ||\n                            (!options.dot && file[fi].charAt(0) === '.'))\n                            return false;\n                    }\n                    return true;\n                }\n                // ok, let's see if we can swallow whatever we can.\n                while (fr < fl) {\n                    var swallowee = file[fr];\n                    this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee);\n                    // XXX remove this slice.  Just pass the start index.\n                    if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n                        this.debug('globstar found match!', fr, fl, swallowee);\n                        // found a match.\n                        return true;\n                    }\n                    else {\n                        // can't swallow \".\" or \"..\" ever.\n                        // can only swallow \".foo\" when explicitly asked.\n                        if (swallowee === '.' ||\n                            swallowee === '..' ||\n                            (!options.dot && swallowee.charAt(0) === '.')) {\n                            this.debug('dot detected!', file, fr, pattern, pr);\n                            break;\n                        }\n                        // ** swallows a segment, and continue.\n                        this.debug('globstar swallow a segment, and continue');\n                        fr++;\n                    }\n                }\n                // no match was found.\n                // However, in partial mode, we can't say this is necessarily over.\n                /* c8 ignore start */\n                if (partial) {\n                    // ran out of file\n                    this.debug('\\n>>> no match, partial?', file, fr, pattern, pr);\n                    if (fr === fl) {\n                        return true;\n                    }\n                }\n                /* c8 ignore stop */\n                return false;\n            }\n            // something other than **\n            // non-magic patterns just have to match exactly\n            // patterns with magic have been turned into regexps.\n            let hit;\n            if (typeof p === 'string') {\n                hit = f === p;\n                this.debug('string match', p, f, hit);\n            }\n            else {\n                hit = p.test(f);\n                this.debug('pattern match', p, f, hit);\n            }\n            if (!hit)\n                return false;\n        }\n        // Note: ending in / means that we'll get a final \"\"\n        // at the end of the pattern.  This can only match a\n        // corresponding \"\" at the end of the file.\n        // If the file ends in /, then it can only match a\n        // a pattern that ends in /, unless the pattern just\n        // doesn't have any more for it. But, a/b/ should *not*\n        // match \"a/b/*\", even though \"\" matches against the\n        // [^/]*? pattern, except in partial mode, where it might\n        // simply not be reached yet.\n        // However, a/b/ should still satisfy a/*\n        // now either we fell off the end of the pattern, or we're done.\n        if (fi === fl && pi === pl) {\n            // ran out of pattern and filename at the same time.\n            // an exact hit!\n            return true;\n        }\n        else if (fi === fl) {\n            // ran out of file, but still had pattern left.\n            // this is ok if we're doing the match as part of\n            // a glob fs traversal.\n            return partial;\n        }\n        else if (pi === pl) {\n            // ran out of pattern, still have file left.\n            // this is only acceptable if we're on the very last\n            // empty segment of a file with a trailing slash.\n            // a/* should match a/b/\n            return fi === fl - 1 && file[fi] === '';\n            /* c8 ignore start */\n        }\n        else {\n            // should be unreachable.\n            throw new Error('wtf?');\n        }\n        /* c8 ignore stop */\n    }\n    braceExpand() {\n        return (0, exports.braceExpand)(this.pattern, this.options);\n    }\n    parse(pattern) {\n        (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n        const options = this.options;\n        // shortcuts\n        if (pattern === '**')\n            return exports.GLOBSTAR;\n        if (pattern === '')\n            return '';\n        // far and away, the most common glob pattern parts are\n        // *, *.*, and *.<ext>  Add a fast check method for those.\n        let m;\n        let fastTest = null;\n        if ((m = pattern.match(starRE))) {\n            fastTest = options.dot ? starTestDot : starTest;\n        }\n        else if ((m = pattern.match(starDotExtRE))) {\n            fastTest = (options.nocase\n                ? options.dot\n                    ? starDotExtTestNocaseDot\n                    : starDotExtTestNocase\n                : options.dot\n                    ? starDotExtTestDot\n                    : starDotExtTest)(m[1]);\n        }\n        else if ((m = pattern.match(qmarksRE))) {\n            fastTest = (options.nocase\n                ? options.dot\n                    ? qmarksTestNocaseDot\n                    : qmarksTestNocase\n                : options.dot\n                    ? qmarksTestDot\n                    : qmarksTest)(m);\n        }\n        else if ((m = pattern.match(starDotStarRE))) {\n            fastTest = options.dot ? starDotStarTestDot : starDotStarTest;\n        }\n        else if ((m = pattern.match(dotStarRE))) {\n            fastTest = dotStarTest;\n        }\n        const re = ast_js_1.AST.fromGlob(pattern, this.options).toMMPattern();\n        if (fastTest && typeof re === 'object') {\n            // Avoids overriding in frozen environments\n            Reflect.defineProperty(re, 'test', { value: fastTest });\n        }\n        return re;\n    }\n    makeRe() {\n        if (this.regexp || this.regexp === false)\n            return this.regexp;\n        // at this point, this.set is a 2d array of partial\n        // pattern strings, or \"**\".\n        //\n        // It's better to use .match().  This function shouldn't\n        // be used, really, but it's pretty convenient sometimes,\n        // when you just want to work with a regex.\n        const set = this.set;\n        if (!set.length) {\n            this.regexp = false;\n            return this.regexp;\n        }\n        const options = this.options;\n        const twoStar = options.noglobstar\n            ? star\n            : options.dot\n                ? twoStarDot\n                : twoStarNoDot;\n        const flags = new Set(options.nocase ? ['i'] : []);\n        // regexpify non-globstar patterns\n        // if ** is only item, then we just do one twoStar\n        // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n        // if ** is last, append (\\/twoStar|) to previous\n        // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n        // then filter out GLOBSTAR symbols\n        let re = set\n            .map(pattern => {\n            const pp = pattern.map(p => {\n                if (p instanceof RegExp) {\n                    for (const f of p.flags.split(''))\n                        flags.add(f);\n                }\n                return typeof p === 'string'\n                    ? regExpEscape(p)\n                    : p === exports.GLOBSTAR\n                        ? exports.GLOBSTAR\n                        : p._src;\n            });\n            pp.forEach((p, i) => {\n                const next = pp[i + 1];\n                const prev = pp[i - 1];\n                if (p !== exports.GLOBSTAR || prev === exports.GLOBSTAR) {\n                    return;\n                }\n                if (prev === undefined) {\n                    if (next !== undefined && next !== exports.GLOBSTAR) {\n                        pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next;\n                    }\n                    else {\n                        pp[i] = twoStar;\n                    }\n                }\n                else if (next === undefined) {\n                    pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?';\n                }\n                else if (next !== exports.GLOBSTAR) {\n                    pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next;\n                    pp[i + 1] = exports.GLOBSTAR;\n                }\n            });\n            return pp.filter(p => p !== exports.GLOBSTAR).join('/');\n        })\n            .join('|');\n        // need to wrap in parens if we had more than one thing with |,\n        // otherwise only the first will be anchored to ^ and the last to $\n        const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', ''];\n        // must match entire pattern\n        // ending in a * or ** will make it less strict.\n        re = '^' + open + re + close + '$';\n        // can match anything, as long as it's not this.\n        if (this.negate)\n            re = '^(?!' + re + ').+$';\n        try {\n            this.regexp = new RegExp(re, [...flags].join(''));\n            /* c8 ignore start */\n        }\n        catch (ex) {\n            // should be impossible\n            this.regexp = false;\n        }\n        /* c8 ignore stop */\n        return this.regexp;\n    }\n    slashSplit(p) {\n        // if p starts with // on windows, we preserve that\n        // so that UNC paths aren't broken.  Otherwise, any number of\n        // / characters are coalesced into one, unless\n        // preserveMultipleSlashes is set to true.\n        if (this.preserveMultipleSlashes) {\n            return p.split('/');\n        }\n        else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n            // add an extra '' for the one we lose\n            return ['', ...p.split(/\\/+/)];\n        }\n        else {\n            return p.split(/\\/+/);\n        }\n    }\n    match(f, partial = this.partial) {\n        this.debug('match', f, this.pattern);\n        // short-circuit in the case of busted things.\n        // comments, etc.\n        if (this.comment) {\n            return false;\n        }\n        if (this.empty) {\n            return f === '';\n        }\n        if (f === '/' && partial) {\n            return true;\n        }\n        const options = this.options;\n        // windows: need to use /, not \\\n        if (this.isWindows) {\n            f = f.split('\\\\').join('/');\n        }\n        // treat the test path as a set of pathparts.\n        const ff = this.slashSplit(f);\n        this.debug(this.pattern, 'split', ff);\n        // just ONE of the pattern sets in this.set needs to match\n        // in order for it to be valid.  If negating, then just one\n        // match means that we have failed.\n        // Either way, return on the first hit.\n        const set = this.set;\n        this.debug(this.pattern, 'set', set);\n        // Find the basename of the path by looking for the last non-empty segment\n        let filename = ff[ff.length - 1];\n        if (!filename) {\n            for (let i = ff.length - 2; !filename && i >= 0; i--) {\n                filename = ff[i];\n            }\n        }\n        for (let i = 0; i < set.length; i++) {\n            const pattern = set[i];\n            let file = ff;\n            if (options.matchBase && pattern.length === 1) {\n                file = [filename];\n            }\n            const hit = this.matchOne(file, pattern, partial);\n            if (hit) {\n                if (options.flipNegate) {\n                    return true;\n                }\n                return !this.negate;\n            }\n        }\n        // didn't get any hits.  this is success if it's a negative\n        // pattern, failure otherwise.\n        if (options.flipNegate) {\n            return false;\n        }\n        return this.negate;\n    }\n    static defaults(def) {\n        return exports.minimatch.defaults(def).Minimatch;\n    }\n}\nexports.Minimatch = Minimatch;\n/* c8 ignore start */\nvar ast_js_2 = require(\"./ast.js\");\nObject.defineProperty(exports, \"AST\", { enumerable: true, get: function () { return ast_js_2.AST; } });\nvar escape_js_2 = require(\"./escape.js\");\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return escape_js_2.escape; } });\nvar unescape_js_2 = require(\"./unescape.js\");\nObject.defineProperty(exports, \"unescape\", { enumerable: true, get: function () { return unescape_js_2.unescape; } });\n/* c8 ignore stop */\nexports.minimatch.AST = ast_js_1.AST;\nexports.minimatch.Minimatch = Minimatch;\nexports.minimatch.escape = escape_js_1.escape;\nexports.minimatch.unescape = unescape_js_1.unescape;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unescape = void 0;\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nconst unescape = (s, { windowsPathsNoEscape = false, } = {}) => {\n    return windowsPathsNoEscape\n        ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n        : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1');\n};\nexports.unescape = unescape;\n//# sourceMappingURL=unescape.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathScurry = exports.Path = exports.PathScurryDarwin = exports.PathScurryPosix = exports.PathScurryWin32 = exports.PathScurryBase = exports.PathPosix = exports.PathWin32 = exports.PathBase = exports.ChildrenCache = exports.ResolveCache = void 0;\nconst lru_cache_1 = require(\"lru-cache\");\nconst node_path_1 = require(\"node:path\");\nconst node_url_1 = require(\"node:url\");\nconst fs_1 = require(\"fs\");\nconst actualFS = __importStar(require(\"node:fs\"));\nconst realpathSync = fs_1.realpathSync.native;\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\nconst promises_1 = require(\"node:fs/promises\");\nconst minipass_1 = require(\"minipass\");\nconst defaultFS = {\n    lstatSync: fs_1.lstatSync,\n    readdir: fs_1.readdir,\n    readdirSync: fs_1.readdirSync,\n    readlinkSync: fs_1.readlinkSync,\n    realpathSync,\n    promises: {\n        lstat: promises_1.lstat,\n        readdir: promises_1.readdir,\n        readlink: promises_1.readlink,\n        realpath: promises_1.realpath,\n    },\n};\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption) => !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n    : {\n        ...defaultFS,\n        ...fsOption,\n        promises: {\n            ...defaultFS.promises,\n            ...(fsOption.promises || {}),\n        },\n    };\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i;\nconst uncToDrive = (rootPath) => rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\');\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/;\nconst UNKNOWN = 0; // may not even exist, for all we know\nconst IFIFO = 0b0001;\nconst IFCHR = 0b0010;\nconst IFDIR = 0b0100;\nconst IFBLK = 0b0110;\nconst IFREG = 0b1000;\nconst IFLNK = 0b1010;\nconst IFSOCK = 0b1100;\nconst IFMT = 0b1111;\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT;\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000;\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000;\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000;\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000;\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000;\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000;\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH;\nconst TYPEMASK = 0b0011_1111_1111;\nconst entToType = (s) => s.isFile() ? IFREG\n    : s.isDirectory() ? IFDIR\n        : s.isSymbolicLink() ? IFLNK\n            : s.isCharacterDevice() ? IFCHR\n                : s.isBlockDevice() ? IFBLK\n                    : s.isSocket() ? IFSOCK\n                        : s.isFIFO() ? IFIFO\n                            : UNKNOWN;\n// normalize unicode path names\nconst normalizeCache = new Map();\nconst normalize = (s) => {\n    const c = normalizeCache.get(s);\n    if (c)\n        return c;\n    const n = s.normalize('NFKD');\n    normalizeCache.set(s, n);\n    return n;\n};\nconst normalizeNocaseCache = new Map();\nconst normalizeNocase = (s) => {\n    const c = normalizeNocaseCache.get(s);\n    if (c)\n        return c;\n    const n = normalize(s.toLowerCase());\n    normalizeNocaseCache.set(s, n);\n    return n;\n};\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nclass ResolveCache extends lru_cache_1.LRUCache {\n    constructor() {\n        super({ max: 256 });\n    }\n}\nexports.ResolveCache = ResolveCache;\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nclass ChildrenCache extends lru_cache_1.LRUCache {\n    constructor(maxSize = 16 * 1024) {\n        super({\n            maxSize,\n            // parent + children\n            sizeCalculation: a => a.length + 1,\n        });\n    }\n}\nexports.ChildrenCache = ChildrenCache;\nconst setAsCwd = Symbol('PathScurry setAsCwd');\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nclass PathBase {\n    /**\n     * the basename of this path\n     *\n     * **Important**: *always* test the path name against any test string\n     * usingthe {@link isNamed} method, and not by directly comparing this\n     * string. Otherwise, unicode path strings that the system sees as identical\n     * will not be properly treated as the same path, leading to incorrect\n     * behavior and possible security issues.\n     */\n    name;\n    /**\n     * the Path entry corresponding to the path root.\n     *\n     * @internal\n     */\n    root;\n    /**\n     * All roots found within the current PathScurry family\n     *\n     * @internal\n     */\n    roots;\n    /**\n     * a reference to the parent path, or undefined in the case of root entries\n     *\n     * @internal\n     */\n    parent;\n    /**\n     * boolean indicating whether paths are compared case-insensitively\n     * @internal\n     */\n    nocase;\n    /**\n     * boolean indicating that this path is the current working directory\n     * of the PathScurry collection that contains it.\n     */\n    isCWD = false;\n    // potential default fs override\n    #fs;\n    // Stats fields\n    #dev;\n    get dev() {\n        return this.#dev;\n    }\n    #mode;\n    get mode() {\n        return this.#mode;\n    }\n    #nlink;\n    get nlink() {\n        return this.#nlink;\n    }\n    #uid;\n    get uid() {\n        return this.#uid;\n    }\n    #gid;\n    get gid() {\n        return this.#gid;\n    }\n    #rdev;\n    get rdev() {\n        return this.#rdev;\n    }\n    #blksize;\n    get blksize() {\n        return this.#blksize;\n    }\n    #ino;\n    get ino() {\n        return this.#ino;\n    }\n    #size;\n    get size() {\n        return this.#size;\n    }\n    #blocks;\n    get blocks() {\n        return this.#blocks;\n    }\n    #atimeMs;\n    get atimeMs() {\n        return this.#atimeMs;\n    }\n    #mtimeMs;\n    get mtimeMs() {\n        return this.#mtimeMs;\n    }\n    #ctimeMs;\n    get ctimeMs() {\n        return this.#ctimeMs;\n    }\n    #birthtimeMs;\n    get birthtimeMs() {\n        return this.#birthtimeMs;\n    }\n    #atime;\n    get atime() {\n        return this.#atime;\n    }\n    #mtime;\n    get mtime() {\n        return this.#mtime;\n    }\n    #ctime;\n    get ctime() {\n        return this.#ctime;\n    }\n    #birthtime;\n    get birthtime() {\n        return this.#birthtime;\n    }\n    #matchName;\n    #depth;\n    #fullpath;\n    #fullpathPosix;\n    #relative;\n    #relativePosix;\n    #type;\n    #children;\n    #linkTarget;\n    #realpath;\n    /**\n     * This property is for compatibility with the Dirent class as of\n     * Node v20, where Dirent['parentPath'] refers to the path of the\n     * directory that was passed to readdir. For root entries, it's the path\n     * to the entry itself.\n     */\n    get parentPath() {\n        return (this.parent || this).fullpath();\n    }\n    /**\n     * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n     * this property refers to the *parent* path, not the path object itself.\n     *\n     * @deprecated\n     */\n    get path() {\n        return this.parentPath;\n    }\n    /**\n     * Do not create new Path objects directly.  They should always be accessed\n     * via the PathScurry class or other methods on the Path class.\n     *\n     * @internal\n     */\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n        this.name = name;\n        this.#matchName = nocase ? normalizeNocase(name) : normalize(name);\n        this.#type = type & TYPEMASK;\n        this.nocase = nocase;\n        this.roots = roots;\n        this.root = root || this;\n        this.#children = children;\n        this.#fullpath = opts.fullpath;\n        this.#relative = opts.relative;\n        this.#relativePosix = opts.relativePosix;\n        this.parent = opts.parent;\n        if (this.parent) {\n            this.#fs = this.parent.#fs;\n        }\n        else {\n            this.#fs = fsFromOption(opts.fs);\n        }\n    }\n    /**\n     * Returns the depth of the Path object from its root.\n     *\n     * For example, a path at `/foo/bar` would have a depth of 2.\n     */\n    depth() {\n        if (this.#depth !== undefined)\n            return this.#depth;\n        if (!this.parent)\n            return (this.#depth = 0);\n        return (this.#depth = this.parent.depth() + 1);\n    }\n    /**\n     * @internal\n     */\n    childrenCache() {\n        return this.#children;\n    }\n    /**\n     * Get the Path object referenced by the string path, resolved from this Path\n     */\n    resolve(path) {\n        if (!path) {\n            return this;\n        }\n        const rootPath = this.getRootString(path);\n        const dir = path.substring(rootPath.length);\n        const dirParts = dir.split(this.splitSep);\n        const result = rootPath ?\n            this.getRoot(rootPath).#resolveParts(dirParts)\n            : this.#resolveParts(dirParts);\n        return result;\n    }\n    #resolveParts(dirParts) {\n        let p = this;\n        for (const part of dirParts) {\n            p = p.child(part);\n        }\n        return p;\n    }\n    /**\n     * Returns the cached children Path objects, if still available.  If they\n     * have fallen out of the cache, then returns an empty array, and resets the\n     * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n     * lookup.\n     *\n     * @internal\n     */\n    children() {\n        const cached = this.#children.get(this);\n        if (cached) {\n            return cached;\n        }\n        const children = Object.assign([], { provisional: 0 });\n        this.#children.set(this, children);\n        this.#type &= ~READDIR_CALLED;\n        return children;\n    }\n    /**\n     * Resolves a path portion and returns or creates the child Path.\n     *\n     * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n     * `'..'`.\n     *\n     * This should not be called directly.  If `pathPart` contains any path\n     * separators, it will lead to unsafe undefined behavior.\n     *\n     * Use `Path.resolve()` instead.\n     *\n     * @internal\n     */\n    child(pathPart, opts) {\n        if (pathPart === '' || pathPart === '.') {\n            return this;\n        }\n        if (pathPart === '..') {\n            return this.parent || this;\n        }\n        // find the child\n        const children = this.children();\n        const name = this.nocase ? normalizeNocase(pathPart) : normalize(pathPart);\n        for (const p of children) {\n            if (p.#matchName === name) {\n                return p;\n            }\n        }\n        // didn't find it, create provisional child, since it might not\n        // actually exist.  If we know the parent isn't a dir, then\n        // in fact it CAN'T exist.\n        const s = this.parent ? this.sep : '';\n        const fullpath = this.#fullpath ? this.#fullpath + s + pathPart : undefined;\n        const pchild = this.newChild(pathPart, UNKNOWN, {\n            ...opts,\n            parent: this,\n            fullpath,\n        });\n        if (!this.canReaddir()) {\n            pchild.#type |= ENOENT;\n        }\n        // don't have to update provisional, because if we have real children,\n        // then provisional is set to children.length, otherwise a lower number\n        children.push(pchild);\n        return pchild;\n    }\n    /**\n     * The relative path from the cwd. If it does not share an ancestor with\n     * the cwd, then this ends up being equivalent to the fullpath()\n     */\n    relative() {\n        if (this.isCWD)\n            return '';\n        if (this.#relative !== undefined) {\n            return this.#relative;\n        }\n        const name = this.name;\n        const p = this.parent;\n        if (!p) {\n            return (this.#relative = this.name);\n        }\n        const pv = p.relative();\n        return pv + (!pv || !p.parent ? '' : this.sep) + name;\n    }\n    /**\n     * The relative path from the cwd, using / as the path separator.\n     * If it does not share an ancestor with\n     * the cwd, then this ends up being equivalent to the fullpathPosix()\n     * On posix systems, this is identical to relative().\n     */\n    relativePosix() {\n        if (this.sep === '/')\n            return this.relative();\n        if (this.isCWD)\n            return '';\n        if (this.#relativePosix !== undefined)\n            return this.#relativePosix;\n        const name = this.name;\n        const p = this.parent;\n        if (!p) {\n            return (this.#relativePosix = this.fullpathPosix());\n        }\n        const pv = p.relativePosix();\n        return pv + (!pv || !p.parent ? '' : '/') + name;\n    }\n    /**\n     * The fully resolved path string for this Path entry\n     */\n    fullpath() {\n        if (this.#fullpath !== undefined) {\n            return this.#fullpath;\n        }\n        const name = this.name;\n        const p = this.parent;\n        if (!p) {\n            return (this.#fullpath = this.name);\n        }\n        const pv = p.fullpath();\n        const fp = pv + (!p.parent ? '' : this.sep) + name;\n        return (this.#fullpath = fp);\n    }\n    /**\n     * On platforms other than windows, this is identical to fullpath.\n     *\n     * On windows, this is overridden to return the forward-slash form of the\n     * full UNC path.\n     */\n    fullpathPosix() {\n        if (this.#fullpathPosix !== undefined)\n            return this.#fullpathPosix;\n        if (this.sep === '/')\n            return (this.#fullpathPosix = this.fullpath());\n        if (!this.parent) {\n            const p = this.fullpath().replace(/\\\\/g, '/');\n            if (/^[a-z]:\\//i.test(p)) {\n                return (this.#fullpathPosix = `//?/${p}`);\n            }\n            else {\n                return (this.#fullpathPosix = p);\n            }\n        }\n        const p = this.parent;\n        const pfpp = p.fullpathPosix();\n        const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name;\n        return (this.#fullpathPosix = fpp);\n    }\n    /**\n     * Is the Path of an unknown type?\n     *\n     * Note that we might know *something* about it if there has been a previous\n     * filesystem operation, for example that it does not exist, or is not a\n     * link, or whether it has child entries.\n     */\n    isUnknown() {\n        return (this.#type & IFMT) === UNKNOWN;\n    }\n    isType(type) {\n        return this[`is${type}`]();\n    }\n    getType() {\n        return (this.isUnknown() ? 'Unknown'\n            : this.isDirectory() ? 'Directory'\n                : this.isFile() ? 'File'\n                    : this.isSymbolicLink() ? 'SymbolicLink'\n                        : this.isFIFO() ? 'FIFO'\n                            : this.isCharacterDevice() ? 'CharacterDevice'\n                                : this.isBlockDevice() ? 'BlockDevice'\n                                    : /* c8 ignore start */ this.isSocket() ? 'Socket'\n                                        : 'Unknown');\n        /* c8 ignore stop */\n    }\n    /**\n     * Is the Path a regular file?\n     */\n    isFile() {\n        return (this.#type & IFMT) === IFREG;\n    }\n    /**\n     * Is the Path a directory?\n     */\n    isDirectory() {\n        return (this.#type & IFMT) === IFDIR;\n    }\n    /**\n     * Is the path a character device?\n     */\n    isCharacterDevice() {\n        return (this.#type & IFMT) === IFCHR;\n    }\n    /**\n     * Is the path a block device?\n     */\n    isBlockDevice() {\n        return (this.#type & IFMT) === IFBLK;\n    }\n    /**\n     * Is the path a FIFO pipe?\n     */\n    isFIFO() {\n        return (this.#type & IFMT) === IFIFO;\n    }\n    /**\n     * Is the path a socket?\n     */\n    isSocket() {\n        return (this.#type & IFMT) === IFSOCK;\n    }\n    /**\n     * Is the path a symbolic link?\n     */\n    isSymbolicLink() {\n        return (this.#type & IFLNK) === IFLNK;\n    }\n    /**\n     * Return the entry if it has been subject of a successful lstat, or\n     * undefined otherwise.\n     *\n     * Does not read the filesystem, so an undefined result *could* simply\n     * mean that we haven't called lstat on it.\n     */\n    lstatCached() {\n        return this.#type & LSTAT_CALLED ? this : undefined;\n    }\n    /**\n     * Return the cached link target if the entry has been the subject of a\n     * successful readlink, or undefined otherwise.\n     *\n     * Does not read the filesystem, so an undefined result *could* just mean we\n     * don't have any cached data. Only use it if you are very sure that a\n     * readlink() has been called at some point.\n     */\n    readlinkCached() {\n        return this.#linkTarget;\n    }\n    /**\n     * Returns the cached realpath target if the entry has been the subject\n     * of a successful realpath, or undefined otherwise.\n     *\n     * Does not read the filesystem, so an undefined result *could* just mean we\n     * don't have any cached data. Only use it if you are very sure that a\n     * realpath() has been called at some point.\n     */\n    realpathCached() {\n        return this.#realpath;\n    }\n    /**\n     * Returns the cached child Path entries array if the entry has been the\n     * subject of a successful readdir(), or [] otherwise.\n     *\n     * Does not read the filesystem, so an empty array *could* just mean we\n     * don't have any cached data. Only use it if you are very sure that a\n     * readdir() has been called recently enough to still be valid.\n     */\n    readdirCached() {\n        const children = this.children();\n        return children.slice(0, children.provisional);\n    }\n    /**\n     * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n     * any indication that readlink will definitely fail.\n     *\n     * Returns false if the path is known to not be a symlink, if a previous\n     * readlink failed, or if the entry does not exist.\n     */\n    canReadlink() {\n        if (this.#linkTarget)\n            return true;\n        if (!this.parent)\n            return false;\n        // cases where it cannot possibly succeed\n        const ifmt = this.#type & IFMT;\n        return !((ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n            this.#type & ENOREADLINK ||\n            this.#type & ENOENT);\n    }\n    /**\n     * Return true if readdir has previously been successfully called on this\n     * path, indicating that cachedReaddir() is likely valid.\n     */\n    calledReaddir() {\n        return !!(this.#type & READDIR_CALLED);\n    }\n    /**\n     * Returns true if the path is known to not exist. That is, a previous lstat\n     * or readdir failed to verify its existence when that would have been\n     * expected, or a parent entry was marked either enoent or enotdir.\n     */\n    isENOENT() {\n        return !!(this.#type & ENOENT);\n    }\n    /**\n     * Return true if the path is a match for the given path name.  This handles\n     * case sensitivity and unicode normalization.\n     *\n     * Note: even on case-sensitive systems, it is **not** safe to test the\n     * equality of the `.name` property to determine whether a given pathname\n     * matches, due to unicode normalization mismatches.\n     *\n     * Always use this method instead of testing the `path.name` property\n     * directly.\n     */\n    isNamed(n) {\n        return !this.nocase ?\n            this.#matchName === normalize(n)\n            : this.#matchName === normalizeNocase(n);\n    }\n    /**\n     * Return the Path object corresponding to the target of a symbolic link.\n     *\n     * If the Path is not a symbolic link, or if the readlink call fails for any\n     * reason, `undefined` is returned.\n     *\n     * Result is cached, and thus may be outdated if the filesystem is mutated.\n     */\n    async readlink() {\n        const target = this.#linkTarget;\n        if (target) {\n            return target;\n        }\n        if (!this.canReadlink()) {\n            return undefined;\n        }\n        /* c8 ignore start */\n        // already covered by the canReadlink test, here for ts grumples\n        if (!this.parent) {\n            return undefined;\n        }\n        /* c8 ignore stop */\n        try {\n            const read = await this.#fs.promises.readlink(this.fullpath());\n            const linkTarget = (await this.parent.realpath())?.resolve(read);\n            if (linkTarget) {\n                return (this.#linkTarget = linkTarget);\n            }\n        }\n        catch (er) {\n            this.#readlinkFail(er.code);\n            return undefined;\n        }\n    }\n    /**\n     * Synchronous {@link PathBase.readlink}\n     */\n    readlinkSync() {\n        const target = this.#linkTarget;\n        if (target) {\n            return target;\n        }\n        if (!this.canReadlink()) {\n            return undefined;\n        }\n        /* c8 ignore start */\n        // already covered by the canReadlink test, here for ts grumples\n        if (!this.parent) {\n            return undefined;\n        }\n        /* c8 ignore stop */\n        try {\n            const read = this.#fs.readlinkSync(this.fullpath());\n            const linkTarget = this.parent.realpathSync()?.resolve(read);\n            if (linkTarget) {\n                return (this.#linkTarget = linkTarget);\n            }\n        }\n        catch (er) {\n            this.#readlinkFail(er.code);\n            return undefined;\n        }\n    }\n    #readdirSuccess(children) {\n        // succeeded, mark readdir called bit\n        this.#type |= READDIR_CALLED;\n        // mark all remaining provisional children as ENOENT\n        for (let p = children.provisional; p < children.length; p++) {\n            const c = children[p];\n            if (c)\n                c.#markENOENT();\n        }\n    }\n    #markENOENT() {\n        // mark as UNKNOWN and ENOENT\n        if (this.#type & ENOENT)\n            return;\n        this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN;\n        this.#markChildrenENOENT();\n    }\n    #markChildrenENOENT() {\n        // all children are provisional and do not exist\n        const children = this.children();\n        children.provisional = 0;\n        for (const p of children) {\n            p.#markENOENT();\n        }\n    }\n    #markENOREALPATH() {\n        this.#type |= ENOREALPATH;\n        this.#markENOTDIR();\n    }\n    // save the information when we know the entry is not a dir\n    #markENOTDIR() {\n        // entry is not a directory, so any children can't exist.\n        // this *should* be impossible, since any children created\n        // after it's been marked ENOTDIR should be marked ENOENT,\n        // so it won't even get to this point.\n        /* c8 ignore start */\n        if (this.#type & ENOTDIR)\n            return;\n        /* c8 ignore stop */\n        let t = this.#type;\n        // this could happen if we stat a dir, then delete it,\n        // then try to read it or one of its children.\n        if ((t & IFMT) === IFDIR)\n            t &= IFMT_UNKNOWN;\n        this.#type = t | ENOTDIR;\n        this.#markChildrenENOENT();\n    }\n    #readdirFail(code = '') {\n        // markENOTDIR and markENOENT also set provisional=0\n        if (code === 'ENOTDIR' || code === 'EPERM') {\n            this.#markENOTDIR();\n        }\n        else if (code === 'ENOENT') {\n            this.#markENOENT();\n        }\n        else {\n            this.children().provisional = 0;\n        }\n    }\n    #lstatFail(code = '') {\n        // Windows just raises ENOENT in this case, disable for win CI\n        /* c8 ignore start */\n        if (code === 'ENOTDIR') {\n            // already know it has a parent by this point\n            const p = this.parent;\n            p.#markENOTDIR();\n        }\n        else if (code === 'ENOENT') {\n            /* c8 ignore stop */\n            this.#markENOENT();\n        }\n    }\n    #readlinkFail(code = '') {\n        let ter = this.#type;\n        ter |= ENOREADLINK;\n        if (code === 'ENOENT')\n            ter |= ENOENT;\n        // windows gets a weird error when you try to readlink a file\n        if (code === 'EINVAL' || code === 'UNKNOWN') {\n            // exists, but not a symlink, we don't know WHAT it is, so remove\n            // all IFMT bits.\n            ter &= IFMT_UNKNOWN;\n        }\n        this.#type = ter;\n        // windows just gets ENOENT in this case.  We do cover the case,\n        // just disabled because it's impossible on Windows CI\n        /* c8 ignore start */\n        if (code === 'ENOTDIR' && this.parent) {\n            this.parent.#markENOTDIR();\n        }\n        /* c8 ignore stop */\n    }\n    #readdirAddChild(e, c) {\n        return (this.#readdirMaybePromoteChild(e, c) ||\n            this.#readdirAddNewChild(e, c));\n    }\n    #readdirAddNewChild(e, c) {\n        // alloc new entry at head, so it's never provisional\n        const type = entToType(e);\n        const child = this.newChild(e.name, type, { parent: this });\n        const ifmt = child.#type & IFMT;\n        if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n            child.#type |= ENOTDIR;\n        }\n        c.unshift(child);\n        c.provisional++;\n        return child;\n    }\n    #readdirMaybePromoteChild(e, c) {\n        for (let p = c.provisional; p < c.length; p++) {\n            const pchild = c[p];\n            const name = this.nocase ? normalizeNocase(e.name) : normalize(e.name);\n            if (name !== pchild.#matchName) {\n                continue;\n            }\n            return this.#readdirPromoteChild(e, pchild, p, c);\n        }\n    }\n    #readdirPromoteChild(e, p, index, c) {\n        const v = p.name;\n        // retain any other flags, but set ifmt from dirent\n        p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e);\n        // case sensitivity fixing when we learn the true name.\n        if (v !== e.name)\n            p.name = e.name;\n        // just advance provisional index (potentially off the list),\n        // otherwise we have to splice/pop it out and re-insert at head\n        if (index !== c.provisional) {\n            if (index === c.length - 1)\n                c.pop();\n            else\n                c.splice(index, 1);\n            c.unshift(p);\n        }\n        c.provisional++;\n        return p;\n    }\n    /**\n     * Call lstat() on this Path, and update all known information that can be\n     * determined.\n     *\n     * Note that unlike `fs.lstat()`, the returned value does not contain some\n     * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n     * information is required, you will need to call `fs.lstat` yourself.\n     *\n     * If the Path refers to a nonexistent file, or if the lstat call fails for\n     * any reason, `undefined` is returned.  Otherwise the updated Path object is\n     * returned.\n     *\n     * Results are cached, and thus may be out of date if the filesystem is\n     * mutated.\n     */\n    async lstat() {\n        if ((this.#type & ENOENT) === 0) {\n            try {\n                this.#applyStat(await this.#fs.promises.lstat(this.fullpath()));\n                return this;\n            }\n            catch (er) {\n                this.#lstatFail(er.code);\n            }\n        }\n    }\n    /**\n     * synchronous {@link PathBase.lstat}\n     */\n    lstatSync() {\n        if ((this.#type & ENOENT) === 0) {\n            try {\n                this.#applyStat(this.#fs.lstatSync(this.fullpath()));\n                return this;\n            }\n            catch (er) {\n                this.#lstatFail(er.code);\n            }\n        }\n    }\n    #applyStat(st) {\n        const { atime, atimeMs, birthtime, birthtimeMs, blksize, blocks, ctime, ctimeMs, dev, gid, ino, mode, mtime, mtimeMs, nlink, rdev, size, uid, } = st;\n        this.#atime = atime;\n        this.#atimeMs = atimeMs;\n        this.#birthtime = birthtime;\n        this.#birthtimeMs = birthtimeMs;\n        this.#blksize = blksize;\n        this.#blocks = blocks;\n        this.#ctime = ctime;\n        this.#ctimeMs = ctimeMs;\n        this.#dev = dev;\n        this.#gid = gid;\n        this.#ino = ino;\n        this.#mode = mode;\n        this.#mtime = mtime;\n        this.#mtimeMs = mtimeMs;\n        this.#nlink = nlink;\n        this.#rdev = rdev;\n        this.#size = size;\n        this.#uid = uid;\n        const ifmt = entToType(st);\n        // retain any other flags, but set the ifmt\n        this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED;\n        if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n            this.#type |= ENOTDIR;\n        }\n    }\n    #onReaddirCB = [];\n    #readdirCBInFlight = false;\n    #callOnReaddirCB(children) {\n        this.#readdirCBInFlight = false;\n        const cbs = this.#onReaddirCB.slice();\n        this.#onReaddirCB.length = 0;\n        cbs.forEach(cb => cb(null, children));\n    }\n    /**\n     * Standard node-style callback interface to get list of directory entries.\n     *\n     * If the Path cannot or does not contain any children, then an empty array\n     * is returned.\n     *\n     * Results are cached, and thus may be out of date if the filesystem is\n     * mutated.\n     *\n     * @param cb The callback called with (er, entries).  Note that the `er`\n     * param is somewhat extraneous, as all readdir() errors are handled and\n     * simply result in an empty set of entries being returned.\n     * @param allowZalgo Boolean indicating that immediately known results should\n     * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n     * zalgo at your peril, the dark pony lord is devious and unforgiving.\n     */\n    readdirCB(cb, allowZalgo = false) {\n        if (!this.canReaddir()) {\n            if (allowZalgo)\n                cb(null, []);\n            else\n                queueMicrotask(() => cb(null, []));\n            return;\n        }\n        const children = this.children();\n        if (this.calledReaddir()) {\n            const c = children.slice(0, children.provisional);\n            if (allowZalgo)\n                cb(null, c);\n            else\n                queueMicrotask(() => cb(null, c));\n            return;\n        }\n        // don't have to worry about zalgo at this point.\n        this.#onReaddirCB.push(cb);\n        if (this.#readdirCBInFlight) {\n            return;\n        }\n        this.#readdirCBInFlight = true;\n        // else read the directory, fill up children\n        // de-provisionalize any provisional children.\n        const fullpath = this.fullpath();\n        this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n            if (er) {\n                this.#readdirFail(er.code);\n                children.provisional = 0;\n            }\n            else {\n                // if we didn't get an error, we always get entries.\n                //@ts-ignore\n                for (const e of entries) {\n                    this.#readdirAddChild(e, children);\n                }\n                this.#readdirSuccess(children);\n            }\n            this.#callOnReaddirCB(children.slice(0, children.provisional));\n            return;\n        });\n    }\n    #asyncReaddirInFlight;\n    /**\n     * Return an array of known child entries.\n     *\n     * If the Path cannot or does not contain any children, then an empty array\n     * is returned.\n     *\n     * Results are cached, and thus may be out of date if the filesystem is\n     * mutated.\n     */\n    async readdir() {\n        if (!this.canReaddir()) {\n            return [];\n        }\n        const children = this.children();\n        if (this.calledReaddir()) {\n            return children.slice(0, children.provisional);\n        }\n        // else read the directory, fill up children\n        // de-provisionalize any provisional children.\n        const fullpath = this.fullpath();\n        if (this.#asyncReaddirInFlight) {\n            await this.#asyncReaddirInFlight;\n        }\n        else {\n            /* c8 ignore start */\n            let resolve = () => { };\n            /* c8 ignore stop */\n            this.#asyncReaddirInFlight = new Promise(res => (resolve = res));\n            try {\n                for (const e of await this.#fs.promises.readdir(fullpath, {\n                    withFileTypes: true,\n                })) {\n                    this.#readdirAddChild(e, children);\n                }\n                this.#readdirSuccess(children);\n            }\n            catch (er) {\n                this.#readdirFail(er.code);\n                children.provisional = 0;\n            }\n            this.#asyncReaddirInFlight = undefined;\n            resolve();\n        }\n        return children.slice(0, children.provisional);\n    }\n    /**\n     * synchronous {@link PathBase.readdir}\n     */\n    readdirSync() {\n        if (!this.canReaddir()) {\n            return [];\n        }\n        const children = this.children();\n        if (this.calledReaddir()) {\n            return children.slice(0, children.provisional);\n        }\n        // else read the directory, fill up children\n        // de-provisionalize any provisional children.\n        const fullpath = this.fullpath();\n        try {\n            for (const e of this.#fs.readdirSync(fullpath, {\n                withFileTypes: true,\n            })) {\n                this.#readdirAddChild(e, children);\n            }\n            this.#readdirSuccess(children);\n        }\n        catch (er) {\n            this.#readdirFail(er.code);\n            children.provisional = 0;\n        }\n        return children.slice(0, children.provisional);\n    }\n    canReaddir() {\n        if (this.#type & ENOCHILD)\n            return false;\n        const ifmt = IFMT & this.#type;\n        // we always set ENOTDIR when setting IFMT, so should be impossible\n        /* c8 ignore start */\n        if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n            return false;\n        }\n        /* c8 ignore stop */\n        return true;\n    }\n    shouldWalk(dirs, walkFilter) {\n        return ((this.#type & IFDIR) === IFDIR &&\n            !(this.#type & ENOCHILD) &&\n            !dirs.has(this) &&\n            (!walkFilter || walkFilter(this)));\n    }\n    /**\n     * Return the Path object corresponding to path as resolved\n     * by realpath(3).\n     *\n     * If the realpath call fails for any reason, `undefined` is returned.\n     *\n     * Result is cached, and thus may be outdated if the filesystem is mutated.\n     * On success, returns a Path object.\n     */\n    async realpath() {\n        if (this.#realpath)\n            return this.#realpath;\n        if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type)\n            return undefined;\n        try {\n            const rp = await this.#fs.promises.realpath(this.fullpath());\n            return (this.#realpath = this.resolve(rp));\n        }\n        catch (_) {\n            this.#markENOREALPATH();\n        }\n    }\n    /**\n     * Synchronous {@link realpath}\n     */\n    realpathSync() {\n        if (this.#realpath)\n            return this.#realpath;\n        if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type)\n            return undefined;\n        try {\n            const rp = this.#fs.realpathSync(this.fullpath());\n            return (this.#realpath = this.resolve(rp));\n        }\n        catch (_) {\n            this.#markENOREALPATH();\n        }\n    }\n    /**\n     * Internal method to mark this Path object as the scurry cwd,\n     * called by {@link PathScurry#chdir}\n     *\n     * @internal\n     */\n    [setAsCwd](oldCwd) {\n        if (oldCwd === this)\n            return;\n        oldCwd.isCWD = false;\n        this.isCWD = true;\n        const changed = new Set([]);\n        let rp = [];\n        let p = this;\n        while (p && p.parent) {\n            changed.add(p);\n            p.#relative = rp.join(this.sep);\n            p.#relativePosix = rp.join('/');\n            p = p.parent;\n            rp.push('..');\n        }\n        // now un-memoize parents of old cwd\n        p = oldCwd;\n        while (p && p.parent && !changed.has(p)) {\n            p.#relative = undefined;\n            p.#relativePosix = undefined;\n            p = p.parent;\n        }\n    }\n}\nexports.PathBase = PathBase;\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nclass PathWin32 extends PathBase {\n    /**\n     * Separator for generating path strings.\n     */\n    sep = '\\\\';\n    /**\n     * Separator for parsing path strings.\n     */\n    splitSep = eitherSep;\n    /**\n     * Do not create new Path objects directly.  They should always be accessed\n     * via the PathScurry class or other methods on the Path class.\n     *\n     * @internal\n     */\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n        super(name, type, root, roots, nocase, children, opts);\n    }\n    /**\n     * @internal\n     */\n    newChild(name, type = UNKNOWN, opts = {}) {\n        return new PathWin32(name, type, this.root, this.roots, this.nocase, this.childrenCache(), opts);\n    }\n    /**\n     * @internal\n     */\n    getRootString(path) {\n        return node_path_1.win32.parse(path).root;\n    }\n    /**\n     * @internal\n     */\n    getRoot(rootPath) {\n        rootPath = uncToDrive(rootPath.toUpperCase());\n        if (rootPath === this.root.name) {\n            return this.root;\n        }\n        // ok, not that one, check if it matches another we know about\n        for (const [compare, root] of Object.entries(this.roots)) {\n            if (this.sameRoot(rootPath, compare)) {\n                return (this.roots[rootPath] = root);\n            }\n        }\n        // otherwise, have to create a new one.\n        return (this.roots[rootPath] = new PathScurryWin32(rootPath, this).root);\n    }\n    /**\n     * @internal\n     */\n    sameRoot(rootPath, compare = this.root.name) {\n        // windows can (rarely) have case-sensitive filesystem, but\n        // UNC and drive letters are always case-insensitive, and canonically\n        // represented uppercase.\n        rootPath = rootPath\n            .toUpperCase()\n            .replace(/\\//g, '\\\\')\n            .replace(uncDriveRegexp, '$1\\\\');\n        return rootPath === compare;\n    }\n}\nexports.PathWin32 = PathWin32;\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nclass PathPosix extends PathBase {\n    /**\n     * separator for parsing path strings\n     */\n    splitSep = '/';\n    /**\n     * separator for generating path strings\n     */\n    sep = '/';\n    /**\n     * Do not create new Path objects directly.  They should always be accessed\n     * via the PathScurry class or other methods on the Path class.\n     *\n     * @internal\n     */\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n        super(name, type, root, roots, nocase, children, opts);\n    }\n    /**\n     * @internal\n     */\n    getRootString(path) {\n        return path.startsWith('/') ? '/' : '';\n    }\n    /**\n     * @internal\n     */\n    getRoot(_rootPath) {\n        return this.root;\n    }\n    /**\n     * @internal\n     */\n    newChild(name, type = UNKNOWN, opts = {}) {\n        return new PathPosix(name, type, this.root, this.roots, this.nocase, this.childrenCache(), opts);\n    }\n}\nexports.PathPosix = PathPosix;\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nclass PathScurryBase {\n    /**\n     * The root Path entry for the current working directory of this Scurry\n     */\n    root;\n    /**\n     * The string path for the root of this Scurry's current working directory\n     */\n    rootPath;\n    /**\n     * A collection of all roots encountered, referenced by rootPath\n     */\n    roots;\n    /**\n     * The Path entry corresponding to this PathScurry's current working directory.\n     */\n    cwd;\n    #resolveCache;\n    #resolvePosixCache;\n    #children;\n    /**\n     * Perform path comparisons case-insensitively.\n     *\n     * Defaults true on Darwin and Windows systems, false elsewhere.\n     */\n    nocase;\n    #fs;\n    /**\n     * This class should not be instantiated directly.\n     *\n     * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n     *\n     * @internal\n     */\n    constructor(cwd = process.cwd(), pathImpl, sep, { nocase, childrenCacheSize = 16 * 1024, fs = defaultFS, } = {}) {\n        this.#fs = fsFromOption(fs);\n        if (cwd instanceof URL || cwd.startsWith('file://')) {\n            cwd = (0, node_url_1.fileURLToPath)(cwd);\n        }\n        // resolve and split root, and then add to the store.\n        // this is the only time we call path.resolve()\n        const cwdPath = pathImpl.resolve(cwd);\n        this.roots = Object.create(null);\n        this.rootPath = this.parseRootPath(cwdPath);\n        this.#resolveCache = new ResolveCache();\n        this.#resolvePosixCache = new ResolveCache();\n        this.#children = new ChildrenCache(childrenCacheSize);\n        const split = cwdPath.substring(this.rootPath.length).split(sep);\n        // resolve('/') leaves '', splits to [''], we don't want that.\n        if (split.length === 1 && !split[0]) {\n            split.pop();\n        }\n        /* c8 ignore start */\n        if (nocase === undefined) {\n            throw new TypeError('must provide nocase setting to PathScurryBase ctor');\n        }\n        /* c8 ignore stop */\n        this.nocase = nocase;\n        this.root = this.newRoot(this.#fs);\n        this.roots[this.rootPath] = this.root;\n        let prev = this.root;\n        let len = split.length - 1;\n        const joinSep = pathImpl.sep;\n        let abs = this.rootPath;\n        let sawFirst = false;\n        for (const part of split) {\n            const l = len--;\n            prev = prev.child(part, {\n                relative: new Array(l).fill('..').join(joinSep),\n                relativePosix: new Array(l).fill('..').join('/'),\n                fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n            });\n            sawFirst = true;\n        }\n        this.cwd = prev;\n    }\n    /**\n     * Get the depth of a provided path, string, or the cwd\n     */\n    depth(path = this.cwd) {\n        if (typeof path === 'string') {\n            path = this.cwd.resolve(path);\n        }\n        return path.depth();\n    }\n    /**\n     * Return the cache of child entries.  Exposed so subclasses can create\n     * child Path objects in a platform-specific way.\n     *\n     * @internal\n     */\n    childrenCache() {\n        return this.#children;\n    }\n    /**\n     * Resolve one or more path strings to a resolved string\n     *\n     * Same interface as require('path').resolve.\n     *\n     * Much faster than path.resolve() when called multiple times for the same\n     * path, because the resolved Path objects are cached.  Much slower\n     * otherwise.\n     */\n    resolve(...paths) {\n        // first figure out the minimum number of paths we have to test\n        // we always start at cwd, but any absolutes will bump the start\n        let r = '';\n        for (let i = paths.length - 1; i >= 0; i--) {\n            const p = paths[i];\n            if (!p || p === '.')\n                continue;\n            r = r ? `${p}/${r}` : p;\n            if (this.isAbsolute(p)) {\n                break;\n            }\n        }\n        const cached = this.#resolveCache.get(r);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const result = this.cwd.resolve(r).fullpath();\n        this.#resolveCache.set(r, result);\n        return result;\n    }\n    /**\n     * Resolve one or more path strings to a resolved string, returning\n     * the posix path.  Identical to .resolve() on posix systems, but on\n     * windows will return a forward-slash separated UNC path.\n     *\n     * Same interface as require('path').resolve.\n     *\n     * Much faster than path.resolve() when called multiple times for the same\n     * path, because the resolved Path objects are cached.  Much slower\n     * otherwise.\n     */\n    resolvePosix(...paths) {\n        // first figure out the minimum number of paths we have to test\n        // we always start at cwd, but any absolutes will bump the start\n        let r = '';\n        for (let i = paths.length - 1; i >= 0; i--) {\n            const p = paths[i];\n            if (!p || p === '.')\n                continue;\n            r = r ? `${p}/${r}` : p;\n            if (this.isAbsolute(p)) {\n                break;\n            }\n        }\n        const cached = this.#resolvePosixCache.get(r);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const result = this.cwd.resolve(r).fullpathPosix();\n        this.#resolvePosixCache.set(r, result);\n        return result;\n    }\n    /**\n     * find the relative path from the cwd to the supplied path string or entry\n     */\n    relative(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.relative();\n    }\n    /**\n     * find the relative path from the cwd to the supplied path string or\n     * entry, using / as the path delimiter, even on Windows.\n     */\n    relativePosix(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.relativePosix();\n    }\n    /**\n     * Return the basename for the provided string or Path object\n     */\n    basename(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.name;\n    }\n    /**\n     * Return the dirname for the provided string or Path object\n     */\n    dirname(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return (entry.parent || entry).fullpath();\n    }\n    async readdir(entry = this.cwd, opts = {\n        withFileTypes: true,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes } = opts;\n        if (!entry.canReaddir()) {\n            return [];\n        }\n        else {\n            const p = await entry.readdir();\n            return withFileTypes ? p : p.map(e => e.name);\n        }\n    }\n    readdirSync(entry = this.cwd, opts = {\n        withFileTypes: true,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true } = opts;\n        if (!entry.canReaddir()) {\n            return [];\n        }\n        else if (withFileTypes) {\n            return entry.readdirSync();\n        }\n        else {\n            return entry.readdirSync().map(e => e.name);\n        }\n    }\n    /**\n     * Call lstat() on the string or Path object, and update all known\n     * information that can be determined.\n     *\n     * Note that unlike `fs.lstat()`, the returned value does not contain some\n     * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n     * information is required, you will need to call `fs.lstat` yourself.\n     *\n     * If the Path refers to a nonexistent file, or if the lstat call fails for\n     * any reason, `undefined` is returned.  Otherwise the updated Path object is\n     * returned.\n     *\n     * Results are cached, and thus may be out of date if the filesystem is\n     * mutated.\n     */\n    async lstat(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.lstat();\n    }\n    /**\n     * synchronous {@link PathScurryBase.lstat}\n     */\n    lstatSync(entry = this.cwd) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        return entry.lstatSync();\n    }\n    async readlink(entry = this.cwd, { withFileTypes } = {\n        withFileTypes: false,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            withFileTypes = entry.withFileTypes;\n            entry = this.cwd;\n        }\n        const e = await entry.readlink();\n        return withFileTypes ? e : e?.fullpath();\n    }\n    readlinkSync(entry = this.cwd, { withFileTypes } = {\n        withFileTypes: false,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            withFileTypes = entry.withFileTypes;\n            entry = this.cwd;\n        }\n        const e = entry.readlinkSync();\n        return withFileTypes ? e : e?.fullpath();\n    }\n    async realpath(entry = this.cwd, { withFileTypes } = {\n        withFileTypes: false,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            withFileTypes = entry.withFileTypes;\n            entry = this.cwd;\n        }\n        const e = await entry.realpath();\n        return withFileTypes ? e : e?.fullpath();\n    }\n    realpathSync(entry = this.cwd, { withFileTypes } = {\n        withFileTypes: false,\n    }) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            withFileTypes = entry.withFileTypes;\n            entry = this.cwd;\n        }\n        const e = entry.realpathSync();\n        return withFileTypes ? e : e?.fullpath();\n    }\n    async walk(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        const results = [];\n        if (!filter || filter(entry)) {\n            results.push(withFileTypes ? entry : entry.fullpath());\n        }\n        const dirs = new Set();\n        const walk = (dir, cb) => {\n            dirs.add(dir);\n            dir.readdirCB((er, entries) => {\n                /* c8 ignore start */\n                if (er) {\n                    return cb(er);\n                }\n                /* c8 ignore stop */\n                let len = entries.length;\n                if (!len)\n                    return cb();\n                const next = () => {\n                    if (--len === 0) {\n                        cb();\n                    }\n                };\n                for (const e of entries) {\n                    if (!filter || filter(e)) {\n                        results.push(withFileTypes ? e : e.fullpath());\n                    }\n                    if (follow && e.isSymbolicLink()) {\n                        e.realpath()\n                            .then(r => (r?.isUnknown() ? r.lstat() : r))\n                            .then(r => r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next());\n                    }\n                    else {\n                        if (e.shouldWalk(dirs, walkFilter)) {\n                            walk(e, next);\n                        }\n                        else {\n                            next();\n                        }\n                    }\n                }\n            }, true); // zalgooooooo\n        };\n        const start = entry;\n        return new Promise((res, rej) => {\n            walk(start, er => {\n                /* c8 ignore start */\n                if (er)\n                    return rej(er);\n                /* c8 ignore stop */\n                res(results);\n            });\n        });\n    }\n    walkSync(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        const results = [];\n        if (!filter || filter(entry)) {\n            results.push(withFileTypes ? entry : entry.fullpath());\n        }\n        const dirs = new Set([entry]);\n        for (const dir of dirs) {\n            const entries = dir.readdirSync();\n            for (const e of entries) {\n                if (!filter || filter(e)) {\n                    results.push(withFileTypes ? e : e.fullpath());\n                }\n                let r = e;\n                if (e.isSymbolicLink()) {\n                    if (!(follow && (r = e.realpathSync())))\n                        continue;\n                    if (r.isUnknown())\n                        r.lstatSync();\n                }\n                if (r.shouldWalk(dirs, walkFilter)) {\n                    dirs.add(r);\n                }\n            }\n        }\n        return results;\n    }\n    /**\n     * Support for `for await`\n     *\n     * Alias for {@link PathScurryBase.iterate}\n     *\n     * Note: As of Node 19, this is very slow, compared to other methods of\n     * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n     * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n     */\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n    iterate(entry = this.cwd, options = {}) {\n        // iterating async over the stream is significantly more performant,\n        // especially in the warm-cache scenario, because it buffers up directory\n        // entries in the background instead of waiting for a yield for each one.\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            options = entry;\n            entry = this.cwd;\n        }\n        return this.stream(entry, options)[Symbol.asyncIterator]();\n    }\n    /**\n     * Iterating over a PathScurry performs a synchronous walk.\n     *\n     * Alias for {@link PathScurryBase.iterateSync}\n     */\n    [Symbol.iterator]() {\n        return this.iterateSync();\n    }\n    *iterateSync(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        if (!filter || filter(entry)) {\n            yield withFileTypes ? entry : entry.fullpath();\n        }\n        const dirs = new Set([entry]);\n        for (const dir of dirs) {\n            const entries = dir.readdirSync();\n            for (const e of entries) {\n                if (!filter || filter(e)) {\n                    yield withFileTypes ? e : e.fullpath();\n                }\n                let r = e;\n                if (e.isSymbolicLink()) {\n                    if (!(follow && (r = e.realpathSync())))\n                        continue;\n                    if (r.isUnknown())\n                        r.lstatSync();\n                }\n                if (r.shouldWalk(dirs, walkFilter)) {\n                    dirs.add(r);\n                }\n            }\n        }\n    }\n    stream(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        const results = new minipass_1.Minipass({ objectMode: true });\n        if (!filter || filter(entry)) {\n            results.write(withFileTypes ? entry : entry.fullpath());\n        }\n        const dirs = new Set();\n        const queue = [entry];\n        let processing = 0;\n        const process = () => {\n            let paused = false;\n            while (!paused) {\n                const dir = queue.shift();\n                if (!dir) {\n                    if (processing === 0)\n                        results.end();\n                    return;\n                }\n                processing++;\n                dirs.add(dir);\n                const onReaddir = (er, entries, didRealpaths = false) => {\n                    /* c8 ignore start */\n                    if (er)\n                        return results.emit('error', er);\n                    /* c8 ignore stop */\n                    if (follow && !didRealpaths) {\n                        const promises = [];\n                        for (const e of entries) {\n                            if (e.isSymbolicLink()) {\n                                promises.push(e\n                                    .realpath()\n                                    .then((r) => r?.isUnknown() ? r.lstat() : r));\n                            }\n                        }\n                        if (promises.length) {\n                            Promise.all(promises).then(() => onReaddir(null, entries, true));\n                            return;\n                        }\n                    }\n                    for (const e of entries) {\n                        if (e && (!filter || filter(e))) {\n                            if (!results.write(withFileTypes ? e : e.fullpath())) {\n                                paused = true;\n                            }\n                        }\n                    }\n                    processing--;\n                    for (const e of entries) {\n                        const r = e.realpathCached() || e;\n                        if (r.shouldWalk(dirs, walkFilter)) {\n                            queue.push(r);\n                        }\n                    }\n                    if (paused && !results.flowing) {\n                        results.once('drain', process);\n                    }\n                    else if (!sync) {\n                        process();\n                    }\n                };\n                // zalgo containment\n                let sync = true;\n                dir.readdirCB(onReaddir, true);\n                sync = false;\n            }\n        };\n        process();\n        return results;\n    }\n    streamSync(entry = this.cwd, opts = {}) {\n        if (typeof entry === 'string') {\n            entry = this.cwd.resolve(entry);\n        }\n        else if (!(entry instanceof PathBase)) {\n            opts = entry;\n            entry = this.cwd;\n        }\n        const { withFileTypes = true, follow = false, filter, walkFilter, } = opts;\n        const results = new minipass_1.Minipass({ objectMode: true });\n        const dirs = new Set();\n        if (!filter || filter(entry)) {\n            results.write(withFileTypes ? entry : entry.fullpath());\n        }\n        const queue = [entry];\n        let processing = 0;\n        const process = () => {\n            let paused = false;\n            while (!paused) {\n                const dir = queue.shift();\n                if (!dir) {\n                    if (processing === 0)\n                        results.end();\n                    return;\n                }\n                processing++;\n                dirs.add(dir);\n                const entries = dir.readdirSync();\n                for (const e of entries) {\n                    if (!filter || filter(e)) {\n                        if (!results.write(withFileTypes ? e : e.fullpath())) {\n                            paused = true;\n                        }\n                    }\n                }\n                processing--;\n                for (const e of entries) {\n                    let r = e;\n                    if (e.isSymbolicLink()) {\n                        if (!(follow && (r = e.realpathSync())))\n                            continue;\n                        if (r.isUnknown())\n                            r.lstatSync();\n                    }\n                    if (r.shouldWalk(dirs, walkFilter)) {\n                        queue.push(r);\n                    }\n                }\n            }\n            if (paused && !results.flowing)\n                results.once('drain', process);\n        };\n        process();\n        return results;\n    }\n    chdir(path = this.cwd) {\n        const oldCwd = this.cwd;\n        this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path;\n        this.cwd[setAsCwd](oldCwd);\n    }\n}\nexports.PathScurryBase = PathScurryBase;\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nclass PathScurryWin32 extends PathScurryBase {\n    /**\n     * separator for generating path strings\n     */\n    sep = '\\\\';\n    constructor(cwd = process.cwd(), opts = {}) {\n        const { nocase = true } = opts;\n        super(cwd, node_path_1.win32, '\\\\', { ...opts, nocase });\n        this.nocase = nocase;\n        for (let p = this.cwd; p; p = p.parent) {\n            p.nocase = this.nocase;\n        }\n    }\n    /**\n     * @internal\n     */\n    parseRootPath(dir) {\n        // if the path starts with a single separator, it's not a UNC, and we'll\n        // just get separator as the root, and driveFromUNC will return \\\n        // In that case, mount \\ on the root from the cwd.\n        return node_path_1.win32.parse(dir).root.toUpperCase();\n    }\n    /**\n     * @internal\n     */\n    newRoot(fs) {\n        return new PathWin32(this.rootPath, IFDIR, undefined, this.roots, this.nocase, this.childrenCache(), { fs });\n    }\n    /**\n     * Return true if the provided path string is an absolute path\n     */\n    isAbsolute(p) {\n        return (p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p));\n    }\n}\nexports.PathScurryWin32 = PathScurryWin32;\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nclass PathScurryPosix extends PathScurryBase {\n    /**\n     * separator for generating path strings\n     */\n    sep = '/';\n    constructor(cwd = process.cwd(), opts = {}) {\n        const { nocase = false } = opts;\n        super(cwd, node_path_1.posix, '/', { ...opts, nocase });\n        this.nocase = nocase;\n    }\n    /**\n     * @internal\n     */\n    parseRootPath(_dir) {\n        return '/';\n    }\n    /**\n     * @internal\n     */\n    newRoot(fs) {\n        return new PathPosix(this.rootPath, IFDIR, undefined, this.roots, this.nocase, this.childrenCache(), { fs });\n    }\n    /**\n     * Return true if the provided path string is an absolute path\n     */\n    isAbsolute(p) {\n        return p.startsWith('/');\n    }\n}\nexports.PathScurryPosix = PathScurryPosix;\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nclass PathScurryDarwin extends PathScurryPosix {\n    constructor(cwd = process.cwd(), opts = {}) {\n        const { nocase = true } = opts;\n        super(cwd, { ...opts, nocase });\n    }\n}\nexports.PathScurryDarwin = PathScurryDarwin;\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexports.Path = process.platform === 'win32' ? PathWin32 : PathPosix;\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexports.PathScurry = process.platform === 'win32' ? PathScurryWin32\n    : process.platform === 'darwin' ? PathScurryDarwin\n        : PathScurryPosix;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Minipass = exports.isWritable = exports.isReadable = exports.isStream = void 0;\nconst proc = typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n    };\nconst node_events_1 = require(\"node:events\");\nconst node_stream_1 = __importDefault(require(\"node:stream\"));\nconst node_string_decoder_1 = require(\"node:string_decoder\");\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nconst isStream = (s) => !!s &&\n    typeof s === 'object' &&\n    (s instanceof Minipass ||\n        s instanceof node_stream_1.default ||\n        (0, exports.isReadable)(s) ||\n        (0, exports.isWritable)(s));\nexports.isStream = isStream;\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nconst isReadable = (s) => !!s &&\n    typeof s === 'object' &&\n    s instanceof node_events_1.EventEmitter &&\n    typeof s.pipe === 'function' &&\n    // node core Writable streams have a pipe() method, but it throws\n    s.pipe !== node_stream_1.default.Writable.prototype.pipe;\nexports.isReadable = isReadable;\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nconst isWritable = (s) => !!s &&\n    typeof s === 'object' &&\n    s instanceof node_events_1.EventEmitter &&\n    typeof s.write === 'function' &&\n    typeof s.end === 'function';\nexports.isWritable = isWritable;\nconst EOF = Symbol('EOF');\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd');\nconst EMITTED_END = Symbol('emittedEnd');\nconst EMITTING_END = Symbol('emittingEnd');\nconst EMITTED_ERROR = Symbol('emittedError');\nconst CLOSED = Symbol('closed');\nconst READ = Symbol('read');\nconst FLUSH = Symbol('flush');\nconst FLUSHCHUNK = Symbol('flushChunk');\nconst ENCODING = Symbol('encoding');\nconst DECODER = Symbol('decoder');\nconst FLOWING = Symbol('flowing');\nconst PAUSED = Symbol('paused');\nconst RESUME = Symbol('resume');\nconst BUFFER = Symbol('buffer');\nconst PIPES = Symbol('pipes');\nconst BUFFERLENGTH = Symbol('bufferLength');\nconst BUFFERPUSH = Symbol('bufferPush');\nconst BUFFERSHIFT = Symbol('bufferShift');\nconst OBJECTMODE = Symbol('objectMode');\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed');\n// internal event when stream has an error\nconst ERROR = Symbol('error');\nconst EMITDATA = Symbol('emitData');\nconst EMITEND = Symbol('emitEnd');\nconst EMITEND2 = Symbol('emitEnd2');\nconst ASYNC = Symbol('async');\nconst ABORT = Symbol('abort');\nconst ABORTED = Symbol('aborted');\nconst SIGNAL = Symbol('signal');\nconst DATALISTENERS = Symbol('dataListeners');\nconst DISCARDED = Symbol('discarded');\nconst defer = (fn) => Promise.resolve().then(fn);\nconst nodefer = (fn) => fn();\nconst isEndish = (ev) => ev === 'end' || ev === 'finish' || ev === 'prefinish';\nconst isArrayBufferLike = (b) => b instanceof ArrayBuffer ||\n    (!!b &&\n        typeof b === 'object' &&\n        b.constructor &&\n        b.constructor.name === 'ArrayBuffer' &&\n        b.byteLength >= 0);\nconst isArrayBufferView = (b) => !Buffer.isBuffer(b) && ArrayBuffer.isView(b);\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe {\n    src;\n    dest;\n    opts;\n    ondrain;\n    constructor(src, dest, opts) {\n        this.src = src;\n        this.dest = dest;\n        this.opts = opts;\n        this.ondrain = () => src[RESUME]();\n        this.dest.on('drain', this.ondrain);\n    }\n    unpipe() {\n        this.dest.removeListener('drain', this.ondrain);\n    }\n    // only here for the prototype\n    /* c8 ignore start */\n    proxyErrors(_er) { }\n    /* c8 ignore stop */\n    end() {\n        this.unpipe();\n        if (this.opts.end)\n            this.dest.end();\n    }\n}\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors extends Pipe {\n    unpipe() {\n        this.src.removeListener('error', this.proxyErrors);\n        super.unpipe();\n    }\n    constructor(src, dest, opts) {\n        super(src, dest, opts);\n        this.proxyErrors = er => dest.emit('error', er);\n        src.on('error', this.proxyErrors);\n    }\n}\nconst isObjectModeOptions = (o) => !!o.objectMode;\nconst isEncodingOptions = (o) => !o.objectMode && !!o.encoding && o.encoding !== 'buffer';\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nclass Minipass extends node_events_1.EventEmitter {\n    [FLOWING] = false;\n    [PAUSED] = false;\n    [PIPES] = [];\n    [BUFFER] = [];\n    [OBJECTMODE];\n    [ENCODING];\n    [ASYNC];\n    [DECODER];\n    [EOF] = false;\n    [EMITTED_END] = false;\n    [EMITTING_END] = false;\n    [CLOSED] = false;\n    [EMITTED_ERROR] = null;\n    [BUFFERLENGTH] = 0;\n    [DESTROYED] = false;\n    [SIGNAL];\n    [ABORTED] = false;\n    [DATALISTENERS] = 0;\n    [DISCARDED] = false;\n    /**\n     * true if the stream can be written\n     */\n    writable = true;\n    /**\n     * true if the stream can be read\n     */\n    readable = true;\n    /**\n     * If `RType` is Buffer, then options do not need to be provided.\n     * Otherwise, an options object must be provided to specify either\n     * {@link Minipass.SharedOptions.objectMode} or\n     * {@link Minipass.SharedOptions.encoding}, as appropriate.\n     */\n    constructor(...args) {\n        const options = (args[0] ||\n            {});\n        super();\n        if (options.objectMode && typeof options.encoding === 'string') {\n            throw new TypeError('Encoding and objectMode may not be used together');\n        }\n        if (isObjectModeOptions(options)) {\n            this[OBJECTMODE] = true;\n            this[ENCODING] = null;\n        }\n        else if (isEncodingOptions(options)) {\n            this[ENCODING] = options.encoding;\n            this[OBJECTMODE] = false;\n        }\n        else {\n            this[OBJECTMODE] = false;\n            this[ENCODING] = null;\n        }\n        this[ASYNC] = !!options.async;\n        this[DECODER] = this[ENCODING]\n            ? new node_string_decoder_1.StringDecoder(this[ENCODING])\n            : null;\n        //@ts-ignore - private option for debugging and testing\n        if (options && options.debugExposeBuffer === true) {\n            Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] });\n        }\n        //@ts-ignore - private option for debugging and testing\n        if (options && options.debugExposePipes === true) {\n            Object.defineProperty(this, 'pipes', { get: () => this[PIPES] });\n        }\n        const { signal } = options;\n        if (signal) {\n            this[SIGNAL] = signal;\n            if (signal.aborted) {\n                this[ABORT]();\n            }\n            else {\n                signal.addEventListener('abort', () => this[ABORT]());\n            }\n        }\n    }\n    /**\n     * The amount of data stored in the buffer waiting to be read.\n     *\n     * For Buffer strings, this will be the total byte length.\n     * For string encoding streams, this will be the string character length,\n     * according to JavaScript's `string.length` logic.\n     * For objectMode streams, this is a count of the items waiting to be\n     * emitted.\n     */\n    get bufferLength() {\n        return this[BUFFERLENGTH];\n    }\n    /**\n     * The `BufferEncoding` currently in use, or `null`\n     */\n    get encoding() {\n        return this[ENCODING];\n    }\n    /**\n     * @deprecated - This is a read only property\n     */\n    set encoding(_enc) {\n        throw new Error('Encoding must be set at instantiation time');\n    }\n    /**\n     * @deprecated - Encoding may only be set at instantiation time\n     */\n    setEncoding(_enc) {\n        throw new Error('Encoding must be set at instantiation time');\n    }\n    /**\n     * True if this is an objectMode stream\n     */\n    get objectMode() {\n        return this[OBJECTMODE];\n    }\n    /**\n     * @deprecated - This is a read-only property\n     */\n    set objectMode(_om) {\n        throw new Error('objectMode must be set at instantiation time');\n    }\n    /**\n     * true if this is an async stream\n     */\n    get ['async']() {\n        return this[ASYNC];\n    }\n    /**\n     * Set to true to make this stream async.\n     *\n     * Once set, it cannot be unset, as this would potentially cause incorrect\n     * behavior.  Ie, a sync stream can be made async, but an async stream\n     * cannot be safely made sync.\n     */\n    set ['async'](a) {\n        this[ASYNC] = this[ASYNC] || !!a;\n    }\n    // drop everything and get out of the flow completely\n    [ABORT]() {\n        this[ABORTED] = true;\n        this.emit('abort', this[SIGNAL]?.reason);\n        this.destroy(this[SIGNAL]?.reason);\n    }\n    /**\n     * True if the stream has been aborted.\n     */\n    get aborted() {\n        return this[ABORTED];\n    }\n    /**\n     * No-op setter. Stream aborted status is set via the AbortSignal provided\n     * in the constructor options.\n     */\n    set aborted(_) { }\n    write(chunk, encoding, cb) {\n        if (this[ABORTED])\n            return false;\n        if (this[EOF])\n            throw new Error('write after end');\n        if (this[DESTROYED]) {\n            this.emit('error', Object.assign(new Error('Cannot call write after a stream was destroyed'), { code: 'ERR_STREAM_DESTROYED' }));\n            return true;\n        }\n        if (typeof encoding === 'function') {\n            cb = encoding;\n            encoding = 'utf8';\n        }\n        if (!encoding)\n            encoding = 'utf8';\n        const fn = this[ASYNC] ? defer : nodefer;\n        // convert array buffers and typed array views into buffers\n        // at some point in the future, we may want to do the opposite!\n        // leave strings and buffers as-is\n        // anything is only allowed if in object mode, so throw\n        if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n            if (isArrayBufferView(chunk)) {\n                //@ts-ignore - sinful unsafe type changing\n                chunk = Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n            }\n            else if (isArrayBufferLike(chunk)) {\n                //@ts-ignore - sinful unsafe type changing\n                chunk = Buffer.from(chunk);\n            }\n            else if (typeof chunk !== 'string') {\n                throw new Error('Non-contiguous data written to non-objectMode stream');\n            }\n        }\n        // handle object mode up front, since it's simpler\n        // this yields better performance, fewer checks later.\n        if (this[OBJECTMODE]) {\n            // maybe impossible?\n            /* c8 ignore start */\n            if (this[FLOWING] && this[BUFFERLENGTH] !== 0)\n                this[FLUSH](true);\n            /* c8 ignore stop */\n            if (this[FLOWING])\n                this.emit('data', chunk);\n            else\n                this[BUFFERPUSH](chunk);\n            if (this[BUFFERLENGTH] !== 0)\n                this.emit('readable');\n            if (cb)\n                fn(cb);\n            return this[FLOWING];\n        }\n        // at this point the chunk is a buffer or string\n        // don't buffer it up or send it to the decoder\n        if (!chunk.length) {\n            if (this[BUFFERLENGTH] !== 0)\n                this.emit('readable');\n            if (cb)\n                fn(cb);\n            return this[FLOWING];\n        }\n        // fast-path writing strings of same encoding to a stream with\n        // an empty buffer, skipping the buffer/decoder dance\n        if (typeof chunk === 'string' &&\n            // unless it is a string already ready for us to use\n            !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)) {\n            //@ts-ignore - sinful unsafe type change\n            chunk = Buffer.from(chunk, encoding);\n        }\n        if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n            //@ts-ignore - sinful unsafe type change\n            chunk = this[DECODER].write(chunk);\n        }\n        // Note: flushing CAN potentially switch us into not-flowing mode\n        if (this[FLOWING] && this[BUFFERLENGTH] !== 0)\n            this[FLUSH](true);\n        if (this[FLOWING])\n            this.emit('data', chunk);\n        else\n            this[BUFFERPUSH](chunk);\n        if (this[BUFFERLENGTH] !== 0)\n            this.emit('readable');\n        if (cb)\n            fn(cb);\n        return this[FLOWING];\n    }\n    /**\n     * Low-level explicit read method.\n     *\n     * In objectMode, the argument is ignored, and one item is returned if\n     * available.\n     *\n     * `n` is the number of bytes (or in the case of encoding streams,\n     * characters) to consume. If `n` is not provided, then the entire buffer\n     * is returned, or `null` is returned if no data is available.\n     *\n     * If `n` is greater that the amount of data in the internal buffer,\n     * then `null` is returned.\n     */\n    read(n) {\n        if (this[DESTROYED])\n            return null;\n        this[DISCARDED] = false;\n        if (this[BUFFERLENGTH] === 0 ||\n            n === 0 ||\n            (n && n > this[BUFFERLENGTH])) {\n            this[MAYBE_EMIT_END]();\n            return null;\n        }\n        if (this[OBJECTMODE])\n            n = null;\n        if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n            // not object mode, so if we have an encoding, then RType is string\n            // otherwise, must be Buffer\n            this[BUFFER] = [\n                (this[ENCODING]\n                    ? this[BUFFER].join('')\n                    : Buffer.concat(this[BUFFER], this[BUFFERLENGTH])),\n            ];\n        }\n        const ret = this[READ](n || null, this[BUFFER][0]);\n        this[MAYBE_EMIT_END]();\n        return ret;\n    }\n    [READ](n, chunk) {\n        if (this[OBJECTMODE])\n            this[BUFFERSHIFT]();\n        else {\n            const c = chunk;\n            if (n === c.length || n === null)\n                this[BUFFERSHIFT]();\n            else if (typeof c === 'string') {\n                this[BUFFER][0] = c.slice(n);\n                chunk = c.slice(0, n);\n                this[BUFFERLENGTH] -= n;\n            }\n            else {\n                this[BUFFER][0] = c.subarray(n);\n                chunk = c.subarray(0, n);\n                this[BUFFERLENGTH] -= n;\n            }\n        }\n        this.emit('data', chunk);\n        if (!this[BUFFER].length && !this[EOF])\n            this.emit('drain');\n        return chunk;\n    }\n    end(chunk, encoding, cb) {\n        if (typeof chunk === 'function') {\n            cb = chunk;\n            chunk = undefined;\n        }\n        if (typeof encoding === 'function') {\n            cb = encoding;\n            encoding = 'utf8';\n        }\n        if (chunk !== undefined)\n            this.write(chunk, encoding);\n        if (cb)\n            this.once('end', cb);\n        this[EOF] = true;\n        this.writable = false;\n        // if we haven't written anything, then go ahead and emit,\n        // even if we're not reading.\n        // we'll re-emit if a new 'end' listener is added anyway.\n        // This makes MP more suitable to write-only use cases.\n        if (this[FLOWING] || !this[PAUSED])\n            this[MAYBE_EMIT_END]();\n        return this;\n    }\n    // don't let the internal resume be overwritten\n    [RESUME]() {\n        if (this[DESTROYED])\n            return;\n        if (!this[DATALISTENERS] && !this[PIPES].length) {\n            this[DISCARDED] = true;\n        }\n        this[PAUSED] = false;\n        this[FLOWING] = true;\n        this.emit('resume');\n        if (this[BUFFER].length)\n            this[FLUSH]();\n        else if (this[EOF])\n            this[MAYBE_EMIT_END]();\n        else\n            this.emit('drain');\n    }\n    /**\n     * Resume the stream if it is currently in a paused state\n     *\n     * If called when there are no pipe destinations or `data` event listeners,\n     * this will place the stream in a \"discarded\" state, where all data will\n     * be thrown away. The discarded state is removed if a pipe destination or\n     * data handler is added, if pause() is called, or if any synchronous or\n     * asynchronous iteration is started.\n     */\n    resume() {\n        return this[RESUME]();\n    }\n    /**\n     * Pause the stream\n     */\n    pause() {\n        this[FLOWING] = false;\n        this[PAUSED] = true;\n        this[DISCARDED] = false;\n    }\n    /**\n     * true if the stream has been forcibly destroyed\n     */\n    get destroyed() {\n        return this[DESTROYED];\n    }\n    /**\n     * true if the stream is currently in a flowing state, meaning that\n     * any writes will be immediately emitted.\n     */\n    get flowing() {\n        return this[FLOWING];\n    }\n    /**\n     * true if the stream is currently in a paused state\n     */\n    get paused() {\n        return this[PAUSED];\n    }\n    [BUFFERPUSH](chunk) {\n        if (this[OBJECTMODE])\n            this[BUFFERLENGTH] += 1;\n        else\n            this[BUFFERLENGTH] += chunk.length;\n        this[BUFFER].push(chunk);\n    }\n    [BUFFERSHIFT]() {\n        if (this[OBJECTMODE])\n            this[BUFFERLENGTH] -= 1;\n        else\n            this[BUFFERLENGTH] -= this[BUFFER][0].length;\n        return this[BUFFER].shift();\n    }\n    [FLUSH](noDrain = false) {\n        do { } while (this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n            this[BUFFER].length);\n        if (!noDrain && !this[BUFFER].length && !this[EOF])\n            this.emit('drain');\n    }\n    [FLUSHCHUNK](chunk) {\n        this.emit('data', chunk);\n        return this[FLOWING];\n    }\n    /**\n     * Pipe all data emitted by this stream into the destination provided.\n     *\n     * Triggers the flow of data.\n     */\n    pipe(dest, opts) {\n        if (this[DESTROYED])\n            return dest;\n        this[DISCARDED] = false;\n        const ended = this[EMITTED_END];\n        opts = opts || {};\n        if (dest === proc.stdout || dest === proc.stderr)\n            opts.end = false;\n        else\n            opts.end = opts.end !== false;\n        opts.proxyErrors = !!opts.proxyErrors;\n        // piping an ended stream ends immediately\n        if (ended) {\n            if (opts.end)\n                dest.end();\n        }\n        else {\n            // \"as\" here just ignores the WType, which pipes don't care about,\n            // since they're only consuming from us, and writing to the dest\n            this[PIPES].push(!opts.proxyErrors\n                ? new Pipe(this, dest, opts)\n                : new PipeProxyErrors(this, dest, opts));\n            if (this[ASYNC])\n                defer(() => this[RESUME]());\n            else\n                this[RESUME]();\n        }\n        return dest;\n    }\n    /**\n     * Fully unhook a piped destination stream.\n     *\n     * If the destination stream was the only consumer of this stream (ie,\n     * there are no other piped destinations or `'data'` event listeners)\n     * then the flow of data will stop until there is another consumer or\n     * {@link Minipass#resume} is explicitly called.\n     */\n    unpipe(dest) {\n        const p = this[PIPES].find(p => p.dest === dest);\n        if (p) {\n            if (this[PIPES].length === 1) {\n                if (this[FLOWING] && this[DATALISTENERS] === 0) {\n                    this[FLOWING] = false;\n                }\n                this[PIPES] = [];\n            }\n            else\n                this[PIPES].splice(this[PIPES].indexOf(p), 1);\n            p.unpipe();\n        }\n    }\n    /**\n     * Alias for {@link Minipass#on}\n     */\n    addListener(ev, handler) {\n        return this.on(ev, handler);\n    }\n    /**\n     * Mostly identical to `EventEmitter.on`, with the following\n     * behavior differences to prevent data loss and unnecessary hangs:\n     *\n     * - Adding a 'data' event handler will trigger the flow of data\n     *\n     * - Adding a 'readable' event handler when there is data waiting to be read\n     *   will cause 'readable' to be emitted immediately.\n     *\n     * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n     *   already passed will cause the event to be emitted immediately and all\n     *   handlers removed.\n     *\n     * - Adding an 'error' event handler after an error has been emitted will\n     *   cause the event to be re-emitted immediately with the error previously\n     *   raised.\n     */\n    on(ev, handler) {\n        const ret = super.on(ev, handler);\n        if (ev === 'data') {\n            this[DISCARDED] = false;\n            this[DATALISTENERS]++;\n            if (!this[PIPES].length && !this[FLOWING]) {\n                this[RESUME]();\n            }\n        }\n        else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n            super.emit('readable');\n        }\n        else if (isEndish(ev) && this[EMITTED_END]) {\n            super.emit(ev);\n            this.removeAllListeners(ev);\n        }\n        else if (ev === 'error' && this[EMITTED_ERROR]) {\n            const h = handler;\n            if (this[ASYNC])\n                defer(() => h.call(this, this[EMITTED_ERROR]));\n            else\n                h.call(this, this[EMITTED_ERROR]);\n        }\n        return ret;\n    }\n    /**\n     * Alias for {@link Minipass#off}\n     */\n    removeListener(ev, handler) {\n        return this.off(ev, handler);\n    }\n    /**\n     * Mostly identical to `EventEmitter.off`\n     *\n     * If a 'data' event handler is removed, and it was the last consumer\n     * (ie, there are no pipe destinations or other 'data' event listeners),\n     * then the flow of data will stop until there is another consumer or\n     * {@link Minipass#resume} is explicitly called.\n     */\n    off(ev, handler) {\n        const ret = super.off(ev, handler);\n        // if we previously had listeners, and now we don't, and we don't\n        // have any pipes, then stop the flow, unless it's been explicitly\n        // put in a discarded flowing state via stream.resume().\n        if (ev === 'data') {\n            this[DATALISTENERS] = this.listeners('data').length;\n            if (this[DATALISTENERS] === 0 &&\n                !this[DISCARDED] &&\n                !this[PIPES].length) {\n                this[FLOWING] = false;\n            }\n        }\n        return ret;\n    }\n    /**\n     * Mostly identical to `EventEmitter.removeAllListeners`\n     *\n     * If all 'data' event handlers are removed, and they were the last consumer\n     * (ie, there are no pipe destinations), then the flow of data will stop\n     * until there is another consumer or {@link Minipass#resume} is explicitly\n     * called.\n     */\n    removeAllListeners(ev) {\n        const ret = super.removeAllListeners(ev);\n        if (ev === 'data' || ev === undefined) {\n            this[DATALISTENERS] = 0;\n            if (!this[DISCARDED] && !this[PIPES].length) {\n                this[FLOWING] = false;\n            }\n        }\n        return ret;\n    }\n    /**\n     * true if the 'end' event has been emitted\n     */\n    get emittedEnd() {\n        return this[EMITTED_END];\n    }\n    [MAYBE_EMIT_END]() {\n        if (!this[EMITTING_END] &&\n            !this[EMITTED_END] &&\n            !this[DESTROYED] &&\n            this[BUFFER].length === 0 &&\n            this[EOF]) {\n            this[EMITTING_END] = true;\n            this.emit('end');\n            this.emit('prefinish');\n            this.emit('finish');\n            if (this[CLOSED])\n                this.emit('close');\n            this[EMITTING_END] = false;\n        }\n    }\n    /**\n     * Mostly identical to `EventEmitter.emit`, with the following\n     * behavior differences to prevent data loss and unnecessary hangs:\n     *\n     * If the stream has been destroyed, and the event is something other\n     * than 'close' or 'error', then `false` is returned and no handlers\n     * are called.\n     *\n     * If the event is 'end', and has already been emitted, then the event\n     * is ignored. If the stream is in a paused or non-flowing state, then\n     * the event will be deferred until data flow resumes. If the stream is\n     * async, then handlers will be called on the next tick rather than\n     * immediately.\n     *\n     * If the event is 'close', and 'end' has not yet been emitted, then\n     * the event will be deferred until after 'end' is emitted.\n     *\n     * If the event is 'error', and an AbortSignal was provided for the stream,\n     * and there are no listeners, then the event is ignored, matching the\n     * behavior of node core streams in the presense of an AbortSignal.\n     *\n     * If the event is 'finish' or 'prefinish', then all listeners will be\n     * removed after emitting the event, to prevent double-firing.\n     */\n    emit(ev, ...args) {\n        const data = args[0];\n        // error and close are only events allowed after calling destroy()\n        if (ev !== 'error' &&\n            ev !== 'close' &&\n            ev !== DESTROYED &&\n            this[DESTROYED]) {\n            return false;\n        }\n        else if (ev === 'data') {\n            return !this[OBJECTMODE] && !data\n                ? false\n                : this[ASYNC]\n                    ? (defer(() => this[EMITDATA](data)), true)\n                    : this[EMITDATA](data);\n        }\n        else if (ev === 'end') {\n            return this[EMITEND]();\n        }\n        else if (ev === 'close') {\n            this[CLOSED] = true;\n            // don't emit close before 'end' and 'finish'\n            if (!this[EMITTED_END] && !this[DESTROYED])\n                return false;\n            const ret = super.emit('close');\n            this.removeAllListeners('close');\n            return ret;\n        }\n        else if (ev === 'error') {\n            this[EMITTED_ERROR] = data;\n            super.emit(ERROR, data);\n            const ret = !this[SIGNAL] || this.listeners('error').length\n                ? super.emit('error', data)\n                : false;\n            this[MAYBE_EMIT_END]();\n            return ret;\n        }\n        else if (ev === 'resume') {\n            const ret = super.emit('resume');\n            this[MAYBE_EMIT_END]();\n            return ret;\n        }\n        else if (ev === 'finish' || ev === 'prefinish') {\n            const ret = super.emit(ev);\n            this.removeAllListeners(ev);\n            return ret;\n        }\n        // Some other unknown event\n        const ret = super.emit(ev, ...args);\n        this[MAYBE_EMIT_END]();\n        return ret;\n    }\n    [EMITDATA](data) {\n        for (const p of this[PIPES]) {\n            if (p.dest.write(data) === false)\n                this.pause();\n        }\n        const ret = this[DISCARDED] ? false : super.emit('data', data);\n        this[MAYBE_EMIT_END]();\n        return ret;\n    }\n    [EMITEND]() {\n        if (this[EMITTED_END])\n            return false;\n        this[EMITTED_END] = true;\n        this.readable = false;\n        return this[ASYNC]\n            ? (defer(() => this[EMITEND2]()), true)\n            : this[EMITEND2]();\n    }\n    [EMITEND2]() {\n        if (this[DECODER]) {\n            const data = this[DECODER].end();\n            if (data) {\n                for (const p of this[PIPES]) {\n                    p.dest.write(data);\n                }\n                if (!this[DISCARDED])\n                    super.emit('data', data);\n            }\n        }\n        for (const p of this[PIPES]) {\n            p.end();\n        }\n        const ret = super.emit('end');\n        this.removeAllListeners('end');\n        return ret;\n    }\n    /**\n     * Return a Promise that resolves to an array of all emitted data once\n     * the stream ends.\n     */\n    async collect() {\n        const buf = Object.assign([], {\n            dataLength: 0,\n        });\n        if (!this[OBJECTMODE])\n            buf.dataLength = 0;\n        // set the promise first, in case an error is raised\n        // by triggering the flow here.\n        const p = this.promise();\n        this.on('data', c => {\n            buf.push(c);\n            if (!this[OBJECTMODE])\n                buf.dataLength += c.length;\n        });\n        await p;\n        return buf;\n    }\n    /**\n     * Return a Promise that resolves to the concatenation of all emitted data\n     * once the stream ends.\n     *\n     * Not allowed on objectMode streams.\n     */\n    async concat() {\n        if (this[OBJECTMODE]) {\n            throw new Error('cannot concat in objectMode');\n        }\n        const buf = await this.collect();\n        return (this[ENCODING]\n            ? buf.join('')\n            : Buffer.concat(buf, buf.dataLength));\n    }\n    /**\n     * Return a void Promise that resolves once the stream ends.\n     */\n    async promise() {\n        return new Promise((resolve, reject) => {\n            this.on(DESTROYED, () => reject(new Error('stream destroyed')));\n            this.on('error', er => reject(er));\n            this.on('end', () => resolve());\n        });\n    }\n    /**\n     * Asynchronous `for await of` iteration.\n     *\n     * This will continue emitting all chunks until the stream terminates.\n     */\n    [Symbol.asyncIterator]() {\n        // set this up front, in case the consumer doesn't call next()\n        // right away.\n        this[DISCARDED] = false;\n        let stopped = false;\n        const stop = async () => {\n            this.pause();\n            stopped = true;\n            return { value: undefined, done: true };\n        };\n        const next = () => {\n            if (stopped)\n                return stop();\n            const res = this.read();\n            if (res !== null)\n                return Promise.resolve({ done: false, value: res });\n            if (this[EOF])\n                return stop();\n            let resolve;\n            let reject;\n            const onerr = (er) => {\n                this.off('data', ondata);\n                this.off('end', onend);\n                this.off(DESTROYED, ondestroy);\n                stop();\n                reject(er);\n            };\n            const ondata = (value) => {\n                this.off('error', onerr);\n                this.off('end', onend);\n                this.off(DESTROYED, ondestroy);\n                this.pause();\n                resolve({ value, done: !!this[EOF] });\n            };\n            const onend = () => {\n                this.off('error', onerr);\n                this.off('data', ondata);\n                this.off(DESTROYED, ondestroy);\n                stop();\n                resolve({ done: true, value: undefined });\n            };\n            const ondestroy = () => onerr(new Error('stream destroyed'));\n            return new Promise((res, rej) => {\n                reject = rej;\n                resolve = res;\n                this.once(DESTROYED, ondestroy);\n                this.once('error', onerr);\n                this.once('end', onend);\n                this.once('data', ondata);\n            });\n        };\n        return {\n            next,\n            throw: stop,\n            return: stop,\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n        };\n    }\n    /**\n     * Synchronous `for of` iteration.\n     *\n     * The iteration will terminate when the internal buffer runs out, even\n     * if the stream has not yet terminated.\n     */\n    [Symbol.iterator]() {\n        // set this up front, in case the consumer doesn't call next()\n        // right away.\n        this[DISCARDED] = false;\n        let stopped = false;\n        const stop = () => {\n            this.pause();\n            this.off(ERROR, stop);\n            this.off(DESTROYED, stop);\n            this.off('end', stop);\n            stopped = true;\n            return { done: true, value: undefined };\n        };\n        const next = () => {\n            if (stopped)\n                return stop();\n            const value = this.read();\n            return value === null ? stop() : { done: false, value };\n        };\n        this.once('end', stop);\n        this.once(ERROR, stop);\n        this.once(DESTROYED, stop);\n        return {\n            next,\n            throw: stop,\n            return: stop,\n            [Symbol.iterator]() {\n                return this;\n            },\n        };\n    }\n    /**\n     * Destroy a stream, preventing it from being used for any further purpose.\n     *\n     * If the stream has a `close()` method, then it will be called on\n     * destruction.\n     *\n     * After destruction, any attempt to write data, read data, or emit most\n     * events will be ignored.\n     *\n     * If an error argument is provided, then it will be emitted in an\n     * 'error' event.\n     */\n    destroy(er) {\n        if (this[DESTROYED]) {\n            if (er)\n                this.emit('error', er);\n            else\n                this.emit(DESTROYED);\n            return this;\n        }\n        this[DESTROYED] = true;\n        this[DISCARDED] = true;\n        // throw away all buffered data, it's never coming out\n        this[BUFFER].length = 0;\n        this[BUFFERLENGTH] = 0;\n        const wc = this;\n        if (typeof wc.close === 'function' && !this[CLOSED])\n            wc.close();\n        if (er)\n            this.emit('error', er);\n        // if no error to emit, still reject pending promises\n        else\n            this.emit(DESTROYED);\n        return this;\n    }\n    /**\n     * Alias for {@link isStream}\n     *\n     * Former export location, maintained for backwards compatibility.\n     *\n     * @deprecated\n     */\n    static get isStream() {\n        return exports.isStream;\n    }\n}\nexports.Minipass = Minipass;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name2 in all)\n    __defProp(target, name2, { get: all[name2], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// lib/tree-sitter.cjs\nvar require_tree_sitter = __commonJS({\n  \"lib/tree-sitter.cjs\"(exports, module) {\n    \"use strict\";\n    var Module = (() => {\n      var _scriptName = typeof document != \"undefined\" ? document.currentScript?.src : void 0;\n      if (typeof __filename != \"undefined\") _scriptName = _scriptName || __filename;\n      return async function(moduleArg = {}) {\n        var moduleRtn;\n        var Module = moduleArg;\n        var readyPromiseResolve, readyPromiseReject;\n        var readyPromise = new Promise((resolve, reject) => {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var ENVIRONMENT_IS_WEB = typeof window == \"object\";\n        var ENVIRONMENT_IS_WORKER = typeof WorkerGlobalScope != \"undefined\";\n        var ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\" && process.type != \"renderer\";\n        var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        if (ENVIRONMENT_IS_NODE) {\n        }\n        Module.currentQueryProgressCallback = null;\n        Module.currentProgressCallback = null;\n        Module.currentLogCallback = null;\n        Module.currentParseCallback = null;\n        var moduleOverrides = Object.assign({}, Module);\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = /* @__PURE__ */ __name((status, toThrow) => {\n          throw toThrow;\n        }, \"quit_\");\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        __name(locateFile, \"locateFile\");\n        var readAsync, readBinary;\n        if (ENVIRONMENT_IS_NODE) {\n          var fs = require(\"fs\");\n          var nodePath = require(\"path\");\n          scriptDirectory = __dirname + \"/\";\n          readBinary = /* @__PURE__ */ __name((filename) => {\n            filename = isFileURI(filename) ? new URL(filename) : filename;\n            var ret = fs.readFileSync(filename);\n            return ret;\n          }, \"readBinary\");\n          readAsync = /* @__PURE__ */ __name(async (filename, binary2 = true) => {\n            filename = isFileURI(filename) ? new URL(filename) : filename;\n            var ret = fs.readFileSync(filename, binary2 ? void 0 : \"utf8\");\n            return ret;\n          }, \"readAsync\");\n          if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n            thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process.argv.slice(2);\n          quit_ = /* @__PURE__ */ __name((status, toThrow) => {\n            process.exitCode = status;\n            throw toThrow;\n          }, \"quit_\");\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document != \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptName) {\n            scriptDirectory = _scriptName;\n          }\n          if (scriptDirectory.startsWith(\"blob:\")) {\n            scriptDirectory = \"\";\n          } else {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n          }\n          {\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = /* @__PURE__ */ __name((url) => {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(\n                  /** @type{!ArrayBuffer} */\n                  xhr.response\n                );\n              }, \"readBinary\");\n            }\n            readAsync = /* @__PURE__ */ __name(async (url) => {\n              if (isFileURI(url)) {\n                return new Promise((resolve, reject) => {\n                  var xhr = new XMLHttpRequest();\n                  xhr.open(\"GET\", url, true);\n                  xhr.responseType = \"arraybuffer\";\n                  xhr.onload = () => {\n                    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                      resolve(xhr.response);\n                      return;\n                    }\n                    reject(xhr.status);\n                  };\n                  xhr.onerror = reject;\n                  xhr.send(null);\n                });\n              }\n              var response = await fetch(url, {\n                credentials: \"same-origin\"\n              });\n              if (response.ok) {\n                return response.arrayBuffer();\n              }\n              throw new Error(response.status + \" : \" + response.url);\n            }, \"readAsync\");\n          }\n        } else {\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.error.bind(console);\n        Object.assign(Module, moduleOverrides);\n        moduleOverrides = null;\n        if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n        var dynamicLibraries = Module[\"dynamicLibraries\"] || [];\n        var wasmBinary = Module[\"wasmBinary\"];\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(text);\n          }\n        }\n        __name(assert, \"assert\");\n        var HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAP64, HEAPU64, HEAPF64;\n        var HEAP_DATA_VIEW;\n        var runtimeInitialized = false;\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        var isDataURI = /* @__PURE__ */ __name((filename) => filename.startsWith(dataURIPrefix), \"isDataURI\");\n        var isFileURI = /* @__PURE__ */ __name((filename) => filename.startsWith(\"file://\"), \"isFileURI\");\n        function updateMemoryViews() {\n          var b = wasmMemory.buffer;\n          Module[\"HEAP_DATA_VIEW\"] = HEAP_DATA_VIEW = new DataView(b);\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n          Module[\"HEAP64\"] = HEAP64 = new BigInt64Array(b);\n          Module[\"HEAPU64\"] = HEAPU64 = new BigUint64Array(b);\n        }\n        __name(updateMemoryViews, \"updateMemoryViews\");\n        if (Module[\"wasmMemory\"]) {\n          wasmMemory = Module[\"wasmMemory\"];\n        } else {\n          var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 33554432;\n          wasmMemory = new WebAssembly.Memory({\n            \"initial\": INITIAL_MEMORY / 65536,\n            // In theory we should not need to emit the maximum if we want \"unlimited\"\n            // or 4GB of memory, but VMs error on that atm, see\n            // https://github.com/emscripten-core/emscripten/issues/14130\n            // And in the pthreads case we definitely need to emit a maximum. So\n            // always emit one.\n            \"maximum\": 32768\n          });\n        }\n        updateMemoryViews();\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATEXIT__ = [];\n        var __ATPOSTRUN__ = [];\n        var __RELOC_FUNCS__ = [];\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        __name(preRun, \"preRun\");\n        function initRuntime() {\n          runtimeInitialized = true;\n          callRuntimeCallbacks(__RELOC_FUNCS__);\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        __name(initRuntime, \"initRuntime\");\n        function preMain() {\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        __name(preMain, \"preMain\");\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        __name(postRun, \"postRun\");\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        __name(addOnPreRun, \"addOnPreRun\");\n        function addOnInit(cb) {\n          __ATINIT__.unshift(cb);\n        }\n        __name(addOnInit, \"addOnInit\");\n        function addOnPreMain(cb) {\n          __ATMAIN__.unshift(cb);\n        }\n        __name(addOnPreMain, \"addOnPreMain\");\n        function addOnExit(cb) {\n        }\n        __name(addOnExit, \"addOnExit\");\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        __name(addOnPostRun, \"addOnPostRun\");\n        var runDependencies = 0;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        __name(getUniqueRunDependency, \"getUniqueRunDependency\");\n        function addRunDependency(id) {\n          runDependencies++;\n          Module[\"monitorRunDependencies\"]?.(runDependencies);\n        }\n        __name(addRunDependency, \"addRunDependency\");\n        function removeRunDependency(id) {\n          runDependencies--;\n          Module[\"monitorRunDependencies\"]?.(runDependencies);\n          if (runDependencies == 0) {\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        __name(removeRunDependency, \"removeRunDependency\");\n        function abort(what) {\n          Module[\"onAbort\"]?.(what);\n          what = \"Aborted(\" + what + \")\";\n          err(what);\n          ABORT = true;\n          what += \". Build with -sASSERTIONS for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        __name(abort, \"abort\");\n        var wasmBinaryFile;\n        function findWasmBinary() {\n          var f = \"tree-sitter.wasm\";\n          if (!isDataURI(f)) {\n            return locateFile(f);\n          }\n          return f;\n        }\n        __name(findWasmBinary, \"findWasmBinary\");\n        function getBinarySync(file) {\n          if (file == wasmBinaryFile && wasmBinary) {\n            return new Uint8Array(wasmBinary);\n          }\n          if (readBinary) {\n            return readBinary(file);\n          }\n          throw \"both async and sync fetching of the wasm failed\";\n        }\n        __name(getBinarySync, \"getBinarySync\");\n        async function getWasmBinary(binaryFile) {\n          if (!wasmBinary) {\n            try {\n              var response = await readAsync(binaryFile);\n              return new Uint8Array(response);\n            } catch {\n            }\n          }\n          return getBinarySync(binaryFile);\n        }\n        __name(getWasmBinary, \"getWasmBinary\");\n        async function instantiateArrayBuffer(binaryFile, imports) {\n          try {\n            var binary2 = await getWasmBinary(binaryFile);\n            var instance2 = await WebAssembly.instantiate(binary2, imports);\n            return instance2;\n          } catch (reason) {\n            err(`failed to asynchronously prepare wasm: ${reason}`);\n            abort(reason);\n          }\n        }\n        __name(instantiateArrayBuffer, \"instantiateArrayBuffer\");\n        async function instantiateAsync(binary2, binaryFile, imports) {\n          if (!binary2 && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && !isFileURI(binaryFile) && !ENVIRONMENT_IS_NODE) {\n            try {\n              var response = fetch(binaryFile, {\n                credentials: \"same-origin\"\n              });\n              var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\n              return instantiationResult;\n            } catch (reason) {\n              err(`wasm streaming compile failed: ${reason}`);\n              err(\"falling back to ArrayBuffer instantiation\");\n            }\n          }\n          return instantiateArrayBuffer(binaryFile, imports);\n        }\n        __name(instantiateAsync, \"instantiateAsync\");\n        function getWasmImports() {\n          return {\n            \"env\": wasmImports,\n            \"wasi_snapshot_preview1\": wasmImports,\n            \"GOT.mem\": new Proxy(wasmImports, GOTHandler),\n            \"GOT.func\": new Proxy(wasmImports, GOTHandler)\n          };\n        }\n        __name(getWasmImports, \"getWasmImports\");\n        async function createWasm() {\n          function receiveInstance(instance2, module2) {\n            wasmExports = instance2.exports;\n            wasmExports = relocateExports(wasmExports, 1024);\n            var metadata2 = getDylinkMetadata(module2);\n            if (metadata2.neededDynlibs) {\n              dynamicLibraries = metadata2.neededDynlibs.concat(dynamicLibraries);\n            }\n            mergeLibSymbols(wasmExports, \"main\");\n            LDSO.init();\n            loadDylibs();\n            addOnInit(wasmExports[\"__wasm_call_ctors\"]);\n            __RELOC_FUNCS__.push(wasmExports[\"__wasm_apply_data_relocs\"]);\n            removeRunDependency(\"wasm-instantiate\");\n            return wasmExports;\n          }\n          __name(receiveInstance, \"receiveInstance\");\n          addRunDependency(\"wasm-instantiate\");\n          function receiveInstantiationResult(result2) {\n            return receiveInstance(result2[\"instance\"], result2[\"module\"]);\n          }\n          __name(receiveInstantiationResult, \"receiveInstantiationResult\");\n          var info2 = getWasmImports();\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              return Module[\"instantiateWasm\"](info2, receiveInstance);\n            } catch (e) {\n              err(`Module.instantiateWasm callback failed with error: ${e}`);\n              readyPromiseReject(e);\n            }\n          }\n          wasmBinaryFile ??= findWasmBinary();\n          try {\n            var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info2);\n            var exports2 = receiveInstantiationResult(result);\n            return exports2;\n          } catch (e) {\n            readyPromiseReject(e);\n            return Promise.reject(e);\n          }\n        }\n        __name(createWasm, \"createWasm\");\n        var ASM_CONSTS = {};\n        class ExitStatus {\n          static {\n            __name(this, \"ExitStatus\");\n          }\n          name = \"ExitStatus\";\n          constructor(status) {\n            this.message = `Program terminated with exit(${status})`;\n            this.status = status;\n          }\n        }\n        var GOT = {};\n        var currentModuleWeakSymbols = /* @__PURE__ */ new Set([]);\n        var GOTHandler = {\n          get(obj, symName) {\n            var rtn = GOT[symName];\n            if (!rtn) {\n              rtn = GOT[symName] = new WebAssembly.Global({\n                \"value\": \"i32\",\n                \"mutable\": true\n              });\n            }\n            if (!currentModuleWeakSymbols.has(symName)) {\n              rtn.required = true;\n            }\n            return rtn;\n          }\n        };\n        var LE_HEAP_LOAD_F32 = /* @__PURE__ */ __name((byteOffset) => HEAP_DATA_VIEW.getFloat32(byteOffset, true), \"LE_HEAP_LOAD_F32\");\n        var LE_HEAP_LOAD_F64 = /* @__PURE__ */ __name((byteOffset) => HEAP_DATA_VIEW.getFloat64(byteOffset, true), \"LE_HEAP_LOAD_F64\");\n        var LE_HEAP_LOAD_I16 = /* @__PURE__ */ __name((byteOffset) => HEAP_DATA_VIEW.getInt16(byteOffset, true), \"LE_HEAP_LOAD_I16\");\n        var LE_HEAP_LOAD_I32 = /* @__PURE__ */ __name((byteOffset) => HEAP_DATA_VIEW.getInt32(byteOffset, true), \"LE_HEAP_LOAD_I32\");\n        var LE_HEAP_LOAD_U16 = /* @__PURE__ */ __name((byteOffset) => HEAP_DATA_VIEW.getUint16(byteOffset, true), \"LE_HEAP_LOAD_U16\");\n        var LE_HEAP_LOAD_U32 = /* @__PURE__ */ __name((byteOffset) => HEAP_DATA_VIEW.getUint32(byteOffset, true), \"LE_HEAP_LOAD_U32\");\n        var LE_HEAP_STORE_F32 = /* @__PURE__ */ __name((byteOffset, value) => HEAP_DATA_VIEW.setFloat32(byteOffset, value, true), \"LE_HEAP_STORE_F32\");\n        var LE_HEAP_STORE_F64 = /* @__PURE__ */ __name((byteOffset, value) => HEAP_DATA_VIEW.setFloat64(byteOffset, value, true), \"LE_HEAP_STORE_F64\");\n        var LE_HEAP_STORE_I16 = /* @__PURE__ */ __name((byteOffset, value) => HEAP_DATA_VIEW.setInt16(byteOffset, value, true), \"LE_HEAP_STORE_I16\");\n        var LE_HEAP_STORE_I32 = /* @__PURE__ */ __name((byteOffset, value) => HEAP_DATA_VIEW.setInt32(byteOffset, value, true), \"LE_HEAP_STORE_I32\");\n        var LE_HEAP_STORE_U16 = /* @__PURE__ */ __name((byteOffset, value) => HEAP_DATA_VIEW.setUint16(byteOffset, value, true), \"LE_HEAP_STORE_U16\");\n        var LE_HEAP_STORE_U32 = /* @__PURE__ */ __name((byteOffset, value) => HEAP_DATA_VIEW.setUint32(byteOffset, value, true), \"LE_HEAP_STORE_U32\");\n        var callRuntimeCallbacks = /* @__PURE__ */ __name((callbacks) => {\n          while (callbacks.length > 0) {\n            callbacks.shift()(Module);\n          }\n        }, \"callRuntimeCallbacks\");\n        var UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder() : void 0;\n        var UTF8ArrayToString = /* @__PURE__ */ __name((heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n          if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n            return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n          }\n          var str = \"\";\n          while (idx < endPtr) {\n            var u0 = heapOrArray[idx++];\n            if (!(u0 & 128)) {\n              str += String.fromCharCode(u0);\n              continue;\n            }\n            var u1 = heapOrArray[idx++] & 63;\n            if ((u0 & 224) == 192) {\n              str += String.fromCharCode((u0 & 31) << 6 | u1);\n              continue;\n            }\n            var u2 = heapOrArray[idx++] & 63;\n            if ((u0 & 240) == 224) {\n              u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n            } else {\n              u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n            }\n            if (u0 < 65536) {\n              str += String.fromCharCode(u0);\n            } else {\n              var ch = u0 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            }\n          }\n          return str;\n        }, \"UTF8ArrayToString\");\n        var getDylinkMetadata = /* @__PURE__ */ __name((binary2) => {\n          var offset = 0;\n          var end = 0;\n          function getU8() {\n            return binary2[offset++];\n          }\n          __name(getU8, \"getU8\");\n          function getLEB() {\n            var ret = 0;\n            var mul = 1;\n            while (1) {\n              var byte = binary2[offset++];\n              ret += (byte & 127) * mul;\n              mul *= 128;\n              if (!(byte & 128)) break;\n            }\n            return ret;\n          }\n          __name(getLEB, \"getLEB\");\n          function getString() {\n            var len = getLEB();\n            offset += len;\n            return UTF8ArrayToString(binary2, offset - len, len);\n          }\n          __name(getString, \"getString\");\n          function failIf(condition, message) {\n            if (condition) throw new Error(message);\n          }\n          __name(failIf, \"failIf\");\n          var name2 = \"dylink.0\";\n          if (binary2 instanceof WebAssembly.Module) {\n            var dylinkSection = WebAssembly.Module.customSections(binary2, name2);\n            if (dylinkSection.length === 0) {\n              name2 = \"dylink\";\n              dylinkSection = WebAssembly.Module.customSections(binary2, name2);\n            }\n            failIf(dylinkSection.length === 0, \"need dylink section\");\n            binary2 = new Uint8Array(dylinkSection[0]);\n            end = binary2.length;\n          } else {\n            var int32View = new Uint32Array(new Uint8Array(binary2.subarray(0, 24)).buffer);\n            var magicNumberFound = int32View[0] == 1836278016 || int32View[0] == 6386541;\n            failIf(!magicNumberFound, \"need to see wasm magic number\");\n            failIf(binary2[8] !== 0, \"need the dylink section to be first\");\n            offset = 9;\n            var section_size = getLEB();\n            end = offset + section_size;\n            name2 = getString();\n          }\n          var customSection = {\n            neededDynlibs: [],\n            tlsExports: /* @__PURE__ */ new Set(),\n            weakImports: /* @__PURE__ */ new Set()\n          };\n          if (name2 == \"dylink\") {\n            customSection.memorySize = getLEB();\n            customSection.memoryAlign = getLEB();\n            customSection.tableSize = getLEB();\n            customSection.tableAlign = getLEB();\n            var neededDynlibsCount = getLEB();\n            for (var i2 = 0; i2 < neededDynlibsCount; ++i2) {\n              var libname = getString();\n              customSection.neededDynlibs.push(libname);\n            }\n          } else {\n            failIf(name2 !== \"dylink.0\");\n            var WASM_DYLINK_MEM_INFO = 1;\n            var WASM_DYLINK_NEEDED = 2;\n            var WASM_DYLINK_EXPORT_INFO = 3;\n            var WASM_DYLINK_IMPORT_INFO = 4;\n            var WASM_SYMBOL_TLS = 256;\n            var WASM_SYMBOL_BINDING_MASK = 3;\n            var WASM_SYMBOL_BINDING_WEAK = 1;\n            while (offset < end) {\n              var subsectionType = getU8();\n              var subsectionSize = getLEB();\n              if (subsectionType === WASM_DYLINK_MEM_INFO) {\n                customSection.memorySize = getLEB();\n                customSection.memoryAlign = getLEB();\n                customSection.tableSize = getLEB();\n                customSection.tableAlign = getLEB();\n              } else if (subsectionType === WASM_DYLINK_NEEDED) {\n                var neededDynlibsCount = getLEB();\n                for (var i2 = 0; i2 < neededDynlibsCount; ++i2) {\n                  libname = getString();\n                  customSection.neededDynlibs.push(libname);\n                }\n              } else if (subsectionType === WASM_DYLINK_EXPORT_INFO) {\n                var count = getLEB();\n                while (count--) {\n                  var symname = getString();\n                  var flags2 = getLEB();\n                  if (flags2 & WASM_SYMBOL_TLS) {\n                    customSection.tlsExports.add(symname);\n                  }\n                }\n              } else if (subsectionType === WASM_DYLINK_IMPORT_INFO) {\n                var count = getLEB();\n                while (count--) {\n                  var modname = getString();\n                  var symname = getString();\n                  var flags2 = getLEB();\n                  if ((flags2 & WASM_SYMBOL_BINDING_MASK) == WASM_SYMBOL_BINDING_WEAK) {\n                    customSection.weakImports.add(symname);\n                  }\n                }\n              } else {\n                offset += subsectionSize;\n              }\n            }\n          }\n          return customSection;\n        }, \"getDylinkMetadata\");\n        function getValue(ptr, type = \"i8\") {\n          if (type.endsWith(\"*\")) type = \"*\";\n          switch (type) {\n            case \"i1\":\n              return HEAP8[ptr];\n            case \"i8\":\n              return HEAP8[ptr];\n            case \"i16\":\n              return LE_HEAP_LOAD_I16((ptr >> 1) * 2);\n            case \"i32\":\n              return LE_HEAP_LOAD_I32((ptr >> 2) * 4);\n            case \"i64\":\n              return HEAP64[ptr >> 3];\n            case \"float\":\n              return LE_HEAP_LOAD_F32((ptr >> 2) * 4);\n            case \"double\":\n              return LE_HEAP_LOAD_F64((ptr >> 3) * 8);\n            case \"*\":\n              return LE_HEAP_LOAD_U32((ptr >> 2) * 4);\n            default:\n              abort(`invalid type for getValue: ${type}`);\n          }\n        }\n        __name(getValue, \"getValue\");\n        var newDSO = /* @__PURE__ */ __name((name2, handle2, syms) => {\n          var dso = {\n            refcount: Infinity,\n            name: name2,\n            exports: syms,\n            global: true\n          };\n          LDSO.loadedLibsByName[name2] = dso;\n          if (handle2 != void 0) {\n            LDSO.loadedLibsByHandle[handle2] = dso;\n          }\n          return dso;\n        }, \"newDSO\");\n        var LDSO = {\n          loadedLibsByName: {},\n          loadedLibsByHandle: {},\n          init() {\n            newDSO(\"__main__\", 0, wasmImports);\n          }\n        };\n        var ___heap_base = 78144;\n        var alignMemory = /* @__PURE__ */ __name((size, alignment) => Math.ceil(size / alignment) * alignment, \"alignMemory\");\n        var getMemory = /* @__PURE__ */ __name((size) => {\n          if (runtimeInitialized) {\n            return _calloc(size, 1);\n          }\n          var ret = ___heap_base;\n          var end = ret + alignMemory(size, 16);\n          ___heap_base = end;\n          GOT[\"__heap_base\"].value = end;\n          return ret;\n        }, \"getMemory\");\n        var isInternalSym = /* @__PURE__ */ __name((symName) => [\"__cpp_exception\", \"__c_longjmp\", \"__wasm_apply_data_relocs\", \"__dso_handle\", \"__tls_size\", \"__tls_align\", \"__set_stack_limits\", \"_emscripten_tls_init\", \"__wasm_init_tls\", \"__wasm_call_ctors\", \"__start_em_asm\", \"__stop_em_asm\", \"__start_em_js\", \"__stop_em_js\"].includes(symName) || symName.startsWith(\"__em_js__\"), \"isInternalSym\");\n        var uleb128Encode = /* @__PURE__ */ __name((n, target) => {\n          if (n < 128) {\n            target.push(n);\n          } else {\n            target.push(n % 128 | 128, n >> 7);\n          }\n        }, \"uleb128Encode\");\n        var sigToWasmTypes = /* @__PURE__ */ __name((sig) => {\n          var typeNames = {\n            \"i\": \"i32\",\n            \"j\": \"i64\",\n            \"f\": \"f32\",\n            \"d\": \"f64\",\n            \"e\": \"externref\",\n            \"p\": \"i32\"\n          };\n          var type = {\n            parameters: [],\n            results: sig[0] == \"v\" ? [] : [typeNames[sig[0]]]\n          };\n          for (var i2 = 1; i2 < sig.length; ++i2) {\n            type.parameters.push(typeNames[sig[i2]]);\n          }\n          return type;\n        }, \"sigToWasmTypes\");\n        var generateFuncType = /* @__PURE__ */ __name((sig, target) => {\n          var sigRet = sig.slice(0, 1);\n          var sigParam = sig.slice(1);\n          var typeCodes = {\n            \"i\": 127,\n            // i32\n            \"p\": 127,\n            // i32\n            \"j\": 126,\n            // i64\n            \"f\": 125,\n            // f32\n            \"d\": 124,\n            // f64\n            \"e\": 111\n          };\n          target.push(96);\n          uleb128Encode(sigParam.length, target);\n          for (var i2 = 0; i2 < sigParam.length; ++i2) {\n            target.push(typeCodes[sigParam[i2]]);\n          }\n          if (sigRet == \"v\") {\n            target.push(0);\n          } else {\n            target.push(1, typeCodes[sigRet]);\n          }\n        }, \"generateFuncType\");\n        var convertJsFunctionToWasm = /* @__PURE__ */ __name((func2, sig) => {\n          if (typeof WebAssembly.Function == \"function\") {\n            return new WebAssembly.Function(sigToWasmTypes(sig), func2);\n          }\n          var typeSectionBody = [1];\n          generateFuncType(sig, typeSectionBody);\n          var bytes = [\n            0,\n            97,\n            115,\n            109,\n            // magic (\"\\0asm\")\n            1,\n            0,\n            0,\n            0,\n            // version: 1\n            1\n          ];\n          uleb128Encode(typeSectionBody.length, bytes);\n          bytes.push(...typeSectionBody);\n          bytes.push(\n            2,\n            7,\n            // import section\n            // (import \"e\" \"f\" (func 0 (type 0)))\n            1,\n            1,\n            101,\n            1,\n            102,\n            0,\n            0,\n            7,\n            5,\n            // export section\n            // (export \"f\" (func 0 (type 0)))\n            1,\n            1,\n            102,\n            0,\n            0\n          );\n          var module2 = new WebAssembly.Module(new Uint8Array(bytes));\n          var instance2 = new WebAssembly.Instance(module2, {\n            \"e\": {\n              \"f\": func2\n            }\n          });\n          var wrappedFunc = instance2.exports[\"f\"];\n          return wrappedFunc;\n        }, \"convertJsFunctionToWasm\");\n        var wasmTableMirror = [];\n        var wasmTable = new WebAssembly.Table({\n          \"initial\": 31,\n          \"element\": \"anyfunc\"\n        });\n        var getWasmTableEntry = /* @__PURE__ */ __name((funcPtr) => {\n          var func2 = wasmTableMirror[funcPtr];\n          if (!func2) {\n            if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n            wasmTableMirror[funcPtr] = func2 = wasmTable.get(funcPtr);\n          }\n          return func2;\n        }, \"getWasmTableEntry\");\n        var updateTableMap = /* @__PURE__ */ __name((offset, count) => {\n          if (functionsInTableMap) {\n            for (var i2 = offset; i2 < offset + count; i2++) {\n              var item = getWasmTableEntry(i2);\n              if (item) {\n                functionsInTableMap.set(item, i2);\n              }\n            }\n          }\n        }, \"updateTableMap\");\n        var functionsInTableMap;\n        var getFunctionAddress = /* @__PURE__ */ __name((func2) => {\n          if (!functionsInTableMap) {\n            functionsInTableMap = /* @__PURE__ */ new WeakMap();\n            updateTableMap(0, wasmTable.length);\n          }\n          return functionsInTableMap.get(func2) || 0;\n        }, \"getFunctionAddress\");\n        var freeTableIndexes = [];\n        var getEmptyTableSlot = /* @__PURE__ */ __name(() => {\n          if (freeTableIndexes.length) {\n            return freeTableIndexes.pop();\n          }\n          try {\n            wasmTable.grow(1);\n          } catch (err2) {\n            if (!(err2 instanceof RangeError)) {\n              throw err2;\n            }\n            throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";\n          }\n          return wasmTable.length - 1;\n        }, \"getEmptyTableSlot\");\n        var setWasmTableEntry = /* @__PURE__ */ __name((idx, func2) => {\n          wasmTable.set(idx, func2);\n          wasmTableMirror[idx] = wasmTable.get(idx);\n        }, \"setWasmTableEntry\");\n        var addFunction = /* @__PURE__ */ __name((func2, sig) => {\n          var rtn = getFunctionAddress(func2);\n          if (rtn) {\n            return rtn;\n          }\n          var ret = getEmptyTableSlot();\n          try {\n            setWasmTableEntry(ret, func2);\n          } catch (err2) {\n            if (!(err2 instanceof TypeError)) {\n              throw err2;\n            }\n            var wrapped = convertJsFunctionToWasm(func2, sig);\n            setWasmTableEntry(ret, wrapped);\n          }\n          functionsInTableMap.set(func2, ret);\n          return ret;\n        }, \"addFunction\");\n        var updateGOT = /* @__PURE__ */ __name((exports2, replace) => {\n          for (var symName in exports2) {\n            if (isInternalSym(symName)) {\n              continue;\n            }\n            var value = exports2[symName];\n            GOT[symName] ||= new WebAssembly.Global({\n              \"value\": \"i32\",\n              \"mutable\": true\n            });\n            if (replace || GOT[symName].value == 0) {\n              if (typeof value == \"function\") {\n                GOT[symName].value = addFunction(value);\n              } else if (typeof value == \"number\") {\n                GOT[symName].value = value;\n              } else {\n                err(`unhandled export type for '${symName}': ${typeof value}`);\n              }\n            }\n          }\n        }, \"updateGOT\");\n        var relocateExports = /* @__PURE__ */ __name((exports2, memoryBase2, replace) => {\n          var relocated = {};\n          for (var e in exports2) {\n            var value = exports2[e];\n            if (typeof value == \"object\") {\n              value = value.value;\n            }\n            if (typeof value == \"number\") {\n              value += memoryBase2;\n            }\n            relocated[e] = value;\n          }\n          updateGOT(relocated, replace);\n          return relocated;\n        }, \"relocateExports\");\n        var isSymbolDefined = /* @__PURE__ */ __name((symName) => {\n          var existing = wasmImports[symName];\n          if (!existing || existing.stub) {\n            return false;\n          }\n          return true;\n        }, \"isSymbolDefined\");\n        var dynCall = /* @__PURE__ */ __name((sig, ptr, args2 = []) => {\n          var rtn = getWasmTableEntry(ptr)(...args2);\n          return rtn;\n        }, \"dynCall\");\n        var stackSave = /* @__PURE__ */ __name(() => _emscripten_stack_get_current(), \"stackSave\");\n        var stackRestore = /* @__PURE__ */ __name((val) => __emscripten_stack_restore(val), \"stackRestore\");\n        var createInvokeFunction = /* @__PURE__ */ __name((sig) => (ptr, ...args2) => {\n          var sp = stackSave();\n          try {\n            return dynCall(sig, ptr, args2);\n          } catch (e) {\n            stackRestore(sp);\n            if (e !== e + 0) throw e;\n            _setThrew(1, 0);\n            if (sig[0] == \"j\") return 0n;\n          }\n        }, \"createInvokeFunction\");\n        var resolveGlobalSymbol = /* @__PURE__ */ __name((symName, direct = false) => {\n          var sym;\n          if (isSymbolDefined(symName)) {\n            sym = wasmImports[symName];\n          } else if (symName.startsWith(\"invoke_\")) {\n            sym = wasmImports[symName] = createInvokeFunction(symName.split(\"_\")[1]);\n          }\n          return {\n            sym,\n            name: symName\n          };\n        }, \"resolveGlobalSymbol\");\n        var UTF8ToString = /* @__PURE__ */ __name((ptr, maxBytesToRead) => ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\", \"UTF8ToString\");\n        var loadWebAssemblyModule = /* @__PURE__ */ __name((binary, flags, libName, localScope, handle) => {\n          var metadata = getDylinkMetadata(binary);\n          currentModuleWeakSymbols = metadata.weakImports;\n          function loadModule() {\n            var firstLoad = !handle || !HEAP8[handle + 8];\n            if (firstLoad) {\n              var memAlign = Math.pow(2, metadata.memoryAlign);\n              var memoryBase = metadata.memorySize ? alignMemory(getMemory(metadata.memorySize + memAlign), memAlign) : 0;\n              var tableBase = metadata.tableSize ? wasmTable.length : 0;\n              if (handle) {\n                HEAP8[handle + 8] = 1;\n                LE_HEAP_STORE_U32((handle + 12 >> 2) * 4, memoryBase);\n                LE_HEAP_STORE_I32((handle + 16 >> 2) * 4, metadata.memorySize);\n                LE_HEAP_STORE_U32((handle + 20 >> 2) * 4, tableBase);\n                LE_HEAP_STORE_I32((handle + 24 >> 2) * 4, metadata.tableSize);\n              }\n            } else {\n              memoryBase = LE_HEAP_LOAD_U32((handle + 12 >> 2) * 4);\n              tableBase = LE_HEAP_LOAD_U32((handle + 20 >> 2) * 4);\n            }\n            var tableGrowthNeeded = tableBase + metadata.tableSize - wasmTable.length;\n            if (tableGrowthNeeded > 0) {\n              wasmTable.grow(tableGrowthNeeded);\n            }\n            var moduleExports;\n            function resolveSymbol(sym) {\n              var resolved = resolveGlobalSymbol(sym).sym;\n              if (!resolved && localScope) {\n                resolved = localScope[sym];\n              }\n              if (!resolved) {\n                resolved = moduleExports[sym];\n              }\n              return resolved;\n            }\n            __name(resolveSymbol, \"resolveSymbol\");\n            var proxyHandler = {\n              get(stubs, prop) {\n                switch (prop) {\n                  case \"__memory_base\":\n                    return memoryBase;\n                  case \"__table_base\":\n                    return tableBase;\n                }\n                if (prop in wasmImports && !wasmImports[prop].stub) {\n                  return wasmImports[prop];\n                }\n                if (!(prop in stubs)) {\n                  var resolved;\n                  stubs[prop] = (...args2) => {\n                    resolved ||= resolveSymbol(prop);\n                    return resolved(...args2);\n                  };\n                }\n                return stubs[prop];\n              }\n            };\n            var proxy = new Proxy({}, proxyHandler);\n            var info = {\n              \"GOT.mem\": new Proxy({}, GOTHandler),\n              \"GOT.func\": new Proxy({}, GOTHandler),\n              \"env\": proxy,\n              \"wasi_snapshot_preview1\": proxy\n            };\n            function postInstantiation(module, instance) {\n              updateTableMap(tableBase, metadata.tableSize);\n              moduleExports = relocateExports(instance.exports, memoryBase);\n              if (!flags.allowUndefined) {\n                reportUndefinedSymbols();\n              }\n              function addEmAsm(addr, body) {\n                var args = [];\n                var arity = 0;\n                for (; arity < 16; arity++) {\n                  if (body.indexOf(\"$\" + arity) != -1) {\n                    args.push(\"$\" + arity);\n                  } else {\n                    break;\n                  }\n                }\n                args = args.join(\",\");\n                var func = `(${args}) => { ${body} };`;\n                ASM_CONSTS[start] = eval(func);\n              }\n              __name(addEmAsm, \"addEmAsm\");\n              if (\"__start_em_asm\" in moduleExports) {\n                var start = moduleExports[\"__start_em_asm\"];\n                var stop = moduleExports[\"__stop_em_asm\"];\n                while (start < stop) {\n                  var jsString = UTF8ToString(start);\n                  addEmAsm(start, jsString);\n                  start = HEAPU8.indexOf(0, start) + 1;\n                }\n              }\n              function addEmJs(name, cSig, body) {\n                var jsArgs = [];\n                cSig = cSig.slice(1, -1);\n                if (cSig != \"void\") {\n                  cSig = cSig.split(\",\");\n                  for (var i in cSig) {\n                    var jsArg = cSig[i].split(\" \").pop();\n                    jsArgs.push(jsArg.replace(\"*\", \"\"));\n                  }\n                }\n                var func = `(${jsArgs}) => ${body};`;\n                moduleExports[name] = eval(func);\n              }\n              __name(addEmJs, \"addEmJs\");\n              for (var name in moduleExports) {\n                if (name.startsWith(\"__em_js__\")) {\n                  var start = moduleExports[name];\n                  var jsString = UTF8ToString(start);\n                  var parts = jsString.split(\"<::>\");\n                  addEmJs(name.replace(\"__em_js__\", \"\"), parts[0], parts[1]);\n                  delete moduleExports[name];\n                }\n              }\n              var applyRelocs = moduleExports[\"__wasm_apply_data_relocs\"];\n              if (applyRelocs) {\n                if (runtimeInitialized) {\n                  applyRelocs();\n                } else {\n                  __RELOC_FUNCS__.push(applyRelocs);\n                }\n              }\n              var init = moduleExports[\"__wasm_call_ctors\"];\n              if (init) {\n                if (runtimeInitialized) {\n                  init();\n                } else {\n                  __ATINIT__.push(init);\n                }\n              }\n              return moduleExports;\n            }\n            __name(postInstantiation, \"postInstantiation\");\n            if (flags.loadAsync) {\n              if (binary instanceof WebAssembly.Module) {\n                var instance = new WebAssembly.Instance(binary, info);\n                return Promise.resolve(postInstantiation(binary, instance));\n              }\n              return WebAssembly.instantiate(binary, info).then((result) => postInstantiation(result.module, result.instance));\n            }\n            var module = binary instanceof WebAssembly.Module ? binary : new WebAssembly.Module(binary);\n            var instance = new WebAssembly.Instance(module, info);\n            return postInstantiation(module, instance);\n          }\n          __name(loadModule, \"loadModule\");\n          if (flags.loadAsync) {\n            return metadata.neededDynlibs.reduce((chain, dynNeeded) => chain.then(() => loadDynamicLibrary(dynNeeded, flags, localScope)), Promise.resolve()).then(loadModule);\n          }\n          metadata.neededDynlibs.forEach((needed) => loadDynamicLibrary(needed, flags, localScope));\n          return loadModule();\n        }, \"loadWebAssemblyModule\");\n        var mergeLibSymbols = /* @__PURE__ */ __name((exports2, libName2) => {\n          for (var [sym, exp] of Object.entries(exports2)) {\n            const setImport = /* @__PURE__ */ __name((target) => {\n              if (!isSymbolDefined(target)) {\n                wasmImports[target] = exp;\n              }\n            }, \"setImport\");\n            setImport(sym);\n            const main_alias = \"__main_argc_argv\";\n            if (sym == \"main\") {\n              setImport(main_alias);\n            }\n            if (sym == main_alias) {\n              setImport(\"main\");\n            }\n          }\n        }, \"mergeLibSymbols\");\n        var asyncLoad = /* @__PURE__ */ __name(async (url) => {\n          var arrayBuffer = await readAsync(url);\n          return new Uint8Array(arrayBuffer);\n        }, \"asyncLoad\");\n        function loadDynamicLibrary(libName2, flags2 = {\n          global: true,\n          nodelete: true\n        }, localScope2, handle2) {\n          var dso = LDSO.loadedLibsByName[libName2];\n          if (dso) {\n            if (!flags2.global) {\n              if (localScope2) {\n                Object.assign(localScope2, dso.exports);\n              }\n            } else if (!dso.global) {\n              dso.global = true;\n              mergeLibSymbols(dso.exports, libName2);\n            }\n            if (flags2.nodelete && dso.refcount !== Infinity) {\n              dso.refcount = Infinity;\n            }\n            dso.refcount++;\n            if (handle2) {\n              LDSO.loadedLibsByHandle[handle2] = dso;\n            }\n            return flags2.loadAsync ? Promise.resolve(true) : true;\n          }\n          dso = newDSO(libName2, handle2, \"loading\");\n          dso.refcount = flags2.nodelete ? Infinity : 1;\n          dso.global = flags2.global;\n          function loadLibData() {\n            if (handle2) {\n              var data = LE_HEAP_LOAD_U32((handle2 + 28 >> 2) * 4);\n              var dataSize = LE_HEAP_LOAD_U32((handle2 + 32 >> 2) * 4);\n              if (data && dataSize) {\n                var libData = HEAP8.slice(data, data + dataSize);\n                return flags2.loadAsync ? Promise.resolve(libData) : libData;\n              }\n            }\n            var libFile = locateFile(libName2);\n            if (flags2.loadAsync) {\n              return asyncLoad(libFile);\n            }\n            if (!readBinary) {\n              throw new Error(`${libFile}: file not found, and synchronous loading of external files is not available`);\n            }\n            return readBinary(libFile);\n          }\n          __name(loadLibData, \"loadLibData\");\n          function getExports() {\n            if (flags2.loadAsync) {\n              return loadLibData().then((libData) => loadWebAssemblyModule(libData, flags2, libName2, localScope2, handle2));\n            }\n            return loadWebAssemblyModule(loadLibData(), flags2, libName2, localScope2, handle2);\n          }\n          __name(getExports, \"getExports\");\n          function moduleLoaded(exports2) {\n            if (dso.global) {\n              mergeLibSymbols(exports2, libName2);\n            } else if (localScope2) {\n              Object.assign(localScope2, exports2);\n            }\n            dso.exports = exports2;\n          }\n          __name(moduleLoaded, \"moduleLoaded\");\n          if (flags2.loadAsync) {\n            return getExports().then((exports2) => {\n              moduleLoaded(exports2);\n              return true;\n            });\n          }\n          moduleLoaded(getExports());\n          return true;\n        }\n        __name(loadDynamicLibrary, \"loadDynamicLibrary\");\n        var reportUndefinedSymbols = /* @__PURE__ */ __name(() => {\n          for (var [symName, entry] of Object.entries(GOT)) {\n            if (entry.value == 0) {\n              var value = resolveGlobalSymbol(symName, true).sym;\n              if (!value && !entry.required) {\n                continue;\n              }\n              if (typeof value == \"function\") {\n                entry.value = addFunction(value, value.sig);\n              } else if (typeof value == \"number\") {\n                entry.value = value;\n              } else {\n                throw new Error(`bad export type for '${symName}': ${typeof value}`);\n              }\n            }\n          }\n        }, \"reportUndefinedSymbols\");\n        var loadDylibs = /* @__PURE__ */ __name(() => {\n          if (!dynamicLibraries.length) {\n            reportUndefinedSymbols();\n            return;\n          }\n          addRunDependency(\"loadDylibs\");\n          dynamicLibraries.reduce((chain, lib) => chain.then(() => loadDynamicLibrary(lib, {\n            loadAsync: true,\n            global: true,\n            nodelete: true,\n            allowUndefined: true\n          })), Promise.resolve()).then(() => {\n            reportUndefinedSymbols();\n            removeRunDependency(\"loadDylibs\");\n          });\n        }, \"loadDylibs\");\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n        function setValue(ptr, value, type = \"i8\") {\n          if (type.endsWith(\"*\")) type = \"*\";\n          switch (type) {\n            case \"i1\":\n              HEAP8[ptr] = value;\n              break;\n            case \"i8\":\n              HEAP8[ptr] = value;\n              break;\n            case \"i16\":\n              LE_HEAP_STORE_I16((ptr >> 1) * 2, value);\n              break;\n            case \"i32\":\n              LE_HEAP_STORE_I32((ptr >> 2) * 4, value);\n              break;\n            case \"i64\":\n              HEAP64[ptr >> 3] = BigInt(value);\n              break;\n            case \"float\":\n              LE_HEAP_STORE_F32((ptr >> 2) * 4, value);\n              break;\n            case \"double\":\n              LE_HEAP_STORE_F64((ptr >> 3) * 8, value);\n              break;\n            case \"*\":\n              LE_HEAP_STORE_U32((ptr >> 2) * 4, value);\n              break;\n            default:\n              abort(`invalid type for setValue: ${type}`);\n          }\n        }\n        __name(setValue, \"setValue\");\n        var ___memory_base = new WebAssembly.Global({\n          \"value\": \"i32\",\n          \"mutable\": false\n        }, 1024);\n        var ___stack_pointer = new WebAssembly.Global({\n          \"value\": \"i32\",\n          \"mutable\": true\n        }, 78144);\n        var ___table_base = new WebAssembly.Global({\n          \"value\": \"i32\",\n          \"mutable\": false\n        }, 1);\n        var __abort_js = /* @__PURE__ */ __name(() => abort(\"\"), \"__abort_js\");\n        __abort_js.sig = \"v\";\n        var _emscripten_get_now = /* @__PURE__ */ __name(() => performance.now(), \"_emscripten_get_now\");\n        _emscripten_get_now.sig = \"d\";\n        var _emscripten_date_now = /* @__PURE__ */ __name(() => Date.now(), \"_emscripten_date_now\");\n        _emscripten_date_now.sig = \"d\";\n        var nowIsMonotonic = 1;\n        var checkWasiClock = /* @__PURE__ */ __name((clock_id) => clock_id >= 0 && clock_id <= 3, \"checkWasiClock\");\n        var INT53_MAX = 9007199254740992;\n        var INT53_MIN = -9007199254740992;\n        var bigintToI53Checked = /* @__PURE__ */ __name((num) => num < INT53_MIN || num > INT53_MAX ? NaN : Number(num), \"bigintToI53Checked\");\n        function _clock_time_get(clk_id, ignored_precision, ptime) {\n          ignored_precision = bigintToI53Checked(ignored_precision);\n          if (!checkWasiClock(clk_id)) {\n            return 28;\n          }\n          var now;\n          if (clk_id === 0) {\n            now = _emscripten_date_now();\n          } else if (nowIsMonotonic) {\n            now = _emscripten_get_now();\n          } else {\n            return 52;\n          }\n          var nsec = Math.round(now * 1e3 * 1e3);\n          HEAP64[ptime >> 3] = BigInt(nsec);\n          return 0;\n        }\n        __name(_clock_time_get, \"_clock_time_get\");\n        _clock_time_get.sig = \"iijp\";\n        var getHeapMax = /* @__PURE__ */ __name(() => (\n          // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n          // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n          // for any code that deals with heap sizes, which would require special\n          // casing all heap size related code to treat 0 specially.\n          2147483648\n        ), \"getHeapMax\");\n        var growMemory = /* @__PURE__ */ __name((size) => {\n          var b = wasmMemory.buffer;\n          var pages = (size - b.byteLength + 65535) / 65536 | 0;\n          try {\n            wasmMemory.grow(pages);\n            updateMemoryViews();\n            return 1;\n          } catch (e) {\n          }\n        }, \"growMemory\");\n        var _emscripten_resize_heap = /* @__PURE__ */ __name((requestedSize) => {\n          var oldSize = HEAPU8.length;\n          requestedSize >>>= 0;\n          var maxHeapSize = getHeapMax();\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536));\n            var replacement = growMemory(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }, \"_emscripten_resize_heap\");\n        _emscripten_resize_heap.sig = \"ip\";\n        var _fd_close = /* @__PURE__ */ __name((fd) => 52, \"_fd_close\");\n        _fd_close.sig = \"ii\";\n        function _fd_seek(fd, offset, whence, newOffset) {\n          offset = bigintToI53Checked(offset);\n          return 70;\n        }\n        __name(_fd_seek, \"_fd_seek\");\n        _fd_seek.sig = \"iijip\";\n        var printCharBuffers = [null, [], []];\n        var printChar = /* @__PURE__ */ __name((stream, curr) => {\n          var buffer = printCharBuffers[stream];\n          if (curr === 0 || curr === 10) {\n            (stream === 1 ? out : err)(UTF8ArrayToString(buffer));\n            buffer.length = 0;\n          } else {\n            buffer.push(curr);\n          }\n        }, \"printChar\");\n        var flush_NO_FILESYSTEM = /* @__PURE__ */ __name(() => {\n          if (printCharBuffers[1].length) printChar(1, 10);\n          if (printCharBuffers[2].length) printChar(2, 10);\n        }, \"flush_NO_FILESYSTEM\");\n        var SYSCALLS = {\n          varargs: void 0,\n          getStr(ptr) {\n            var ret = UTF8ToString(ptr);\n            return ret;\n          }\n        };\n        var _fd_write = /* @__PURE__ */ __name((fd, iov, iovcnt, pnum) => {\n          var num = 0;\n          for (var i2 = 0; i2 < iovcnt; i2++) {\n            var ptr = LE_HEAP_LOAD_U32((iov >> 2) * 4);\n            var len = LE_HEAP_LOAD_U32((iov + 4 >> 2) * 4);\n            iov += 8;\n            for (var j = 0; j < len; j++) {\n              printChar(fd, HEAPU8[ptr + j]);\n            }\n            num += len;\n          }\n          LE_HEAP_STORE_U32((pnum >> 2) * 4, num);\n          return 0;\n        }, \"_fd_write\");\n        _fd_write.sig = \"iippp\";\n        function _tree_sitter_log_callback(isLexMessage, messageAddress) {\n          if (Module.currentLogCallback) {\n            const message = UTF8ToString(messageAddress);\n            Module.currentLogCallback(message, isLexMessage !== 0);\n          }\n        }\n        __name(_tree_sitter_log_callback, \"_tree_sitter_log_callback\");\n        function _tree_sitter_parse_callback(inputBufferAddress, index, row, column, lengthAddress) {\n          const INPUT_BUFFER_SIZE = 10 * 1024;\n          const string = Module.currentParseCallback(index, {\n            row,\n            column\n          });\n          if (typeof string === \"string\") {\n            setValue(lengthAddress, string.length, \"i32\");\n            stringToUTF16(string, inputBufferAddress, INPUT_BUFFER_SIZE);\n          } else {\n            setValue(lengthAddress, 0, \"i32\");\n          }\n        }\n        __name(_tree_sitter_parse_callback, \"_tree_sitter_parse_callback\");\n        function _tree_sitter_progress_callback(currentOffset, hasError) {\n          if (Module.currentProgressCallback) {\n            return Module.currentProgressCallback({\n              currentOffset,\n              hasError\n            });\n          }\n          return false;\n        }\n        __name(_tree_sitter_progress_callback, \"_tree_sitter_progress_callback\");\n        function _tree_sitter_query_progress_callback(currentOffset) {\n          if (Module.currentQueryProgressCallback) {\n            return Module.currentQueryProgressCallback({\n              currentOffset\n            });\n          }\n          return false;\n        }\n        __name(_tree_sitter_query_progress_callback, \"_tree_sitter_query_progress_callback\");\n        var runtimeKeepaliveCounter = 0;\n        var keepRuntimeAlive = /* @__PURE__ */ __name(() => noExitRuntime || runtimeKeepaliveCounter > 0, \"keepRuntimeAlive\");\n        var _proc_exit = /* @__PURE__ */ __name((code) => {\n          EXITSTATUS = code;\n          if (!keepRuntimeAlive()) {\n            Module[\"onExit\"]?.(code);\n            ABORT = true;\n          }\n          quit_(code, new ExitStatus(code));\n        }, \"_proc_exit\");\n        _proc_exit.sig = \"vi\";\n        var exitJS = /* @__PURE__ */ __name((status, implicit) => {\n          EXITSTATUS = status;\n          _proc_exit(status);\n        }, \"exitJS\");\n        var handleException = /* @__PURE__ */ __name((e) => {\n          if (e instanceof ExitStatus || e == \"unwind\") {\n            return EXITSTATUS;\n          }\n          quit_(1, e);\n        }, \"handleException\");\n        var lengthBytesUTF8 = /* @__PURE__ */ __name((str) => {\n          var len = 0;\n          for (var i2 = 0; i2 < str.length; ++i2) {\n            var c = str.charCodeAt(i2);\n            if (c <= 127) {\n              len++;\n            } else if (c <= 2047) {\n              len += 2;\n            } else if (c >= 55296 && c <= 57343) {\n              len += 4;\n              ++i2;\n            } else {\n              len += 3;\n            }\n          }\n          return len;\n        }, \"lengthBytesUTF8\");\n        var stringToUTF8Array = /* @__PURE__ */ __name((str, heap, outIdx, maxBytesToWrite) => {\n          if (!(maxBytesToWrite > 0)) return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i2 = 0; i2 < str.length; ++i2) {\n            var u = str.charCodeAt(i2);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i2);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx) break;\n              heap[outIdx++] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx) break;\n              heap[outIdx++] = 192 | u >> 6;\n              heap[outIdx++] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx) break;\n              heap[outIdx++] = 224 | u >> 12;\n              heap[outIdx++] = 128 | u >> 6 & 63;\n              heap[outIdx++] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx) break;\n              heap[outIdx++] = 240 | u >> 18;\n              heap[outIdx++] = 128 | u >> 12 & 63;\n              heap[outIdx++] = 128 | u >> 6 & 63;\n              heap[outIdx++] = 128 | u & 63;\n            }\n          }\n          heap[outIdx] = 0;\n          return outIdx - startIdx;\n        }, \"stringToUTF8Array\");\n        var stringToUTF8 = /* @__PURE__ */ __name((str, outPtr, maxBytesToWrite) => stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite), \"stringToUTF8\");\n        var stackAlloc = /* @__PURE__ */ __name((sz) => __emscripten_stack_alloc(sz), \"stackAlloc\");\n        var stringToUTF8OnStack = /* @__PURE__ */ __name((str) => {\n          var size = lengthBytesUTF8(str) + 1;\n          var ret = stackAlloc(size);\n          stringToUTF8(str, ret, size);\n          return ret;\n        }, \"stringToUTF8OnStack\");\n        var AsciiToString = /* @__PURE__ */ __name((ptr) => {\n          var str = \"\";\n          while (1) {\n            var ch = HEAPU8[ptr++];\n            if (!ch) return str;\n            str += String.fromCharCode(ch);\n          }\n        }, \"AsciiToString\");\n        var stringToUTF16 = /* @__PURE__ */ __name((str, outPtr, maxBytesToWrite) => {\n          maxBytesToWrite ??= 2147483647;\n          if (maxBytesToWrite < 2) return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i2 = 0; i2 < numCharsToWrite; ++i2) {\n            var codeUnit = str.charCodeAt(i2);\n            LE_HEAP_STORE_I16((outPtr >> 1) * 2, codeUnit);\n            outPtr += 2;\n          }\n          LE_HEAP_STORE_I16((outPtr >> 1) * 2, 0);\n          return outPtr - startPtr;\n        }, \"stringToUTF16\");\n        var wasmImports = {\n          /** @export */\n          __heap_base: ___heap_base,\n          /** @export */\n          __indirect_function_table: wasmTable,\n          /** @export */\n          __memory_base: ___memory_base,\n          /** @export */\n          __stack_pointer: ___stack_pointer,\n          /** @export */\n          __table_base: ___table_base,\n          /** @export */\n          _abort_js: __abort_js,\n          /** @export */\n          clock_time_get: _clock_time_get,\n          /** @export */\n          emscripten_resize_heap: _emscripten_resize_heap,\n          /** @export */\n          fd_close: _fd_close,\n          /** @export */\n          fd_seek: _fd_seek,\n          /** @export */\n          fd_write: _fd_write,\n          /** @export */\n          memory: wasmMemory,\n          /** @export */\n          tree_sitter_log_callback: _tree_sitter_log_callback,\n          /** @export */\n          tree_sitter_parse_callback: _tree_sitter_parse_callback,\n          /** @export */\n          tree_sitter_progress_callback: _tree_sitter_progress_callback,\n          /** @export */\n          tree_sitter_query_progress_callback: _tree_sitter_query_progress_callback\n        };\n        var wasmExports = await createWasm();\n        var ___wasm_call_ctors = wasmExports[\"__wasm_call_ctors\"];\n        var _malloc = Module[\"_malloc\"] = wasmExports[\"malloc\"];\n        var _calloc = Module[\"_calloc\"] = wasmExports[\"calloc\"];\n        var _realloc = Module[\"_realloc\"] = wasmExports[\"realloc\"];\n        var _free = Module[\"_free\"] = wasmExports[\"free\"];\n        var _ts_language_symbol_count = Module[\"_ts_language_symbol_count\"] = wasmExports[\"ts_language_symbol_count\"];\n        var _ts_language_state_count = Module[\"_ts_language_state_count\"] = wasmExports[\"ts_language_state_count\"];\n        var _ts_language_version = Module[\"_ts_language_version\"] = wasmExports[\"ts_language_version\"];\n        var _ts_language_abi_version = Module[\"_ts_language_abi_version\"] = wasmExports[\"ts_language_abi_version\"];\n        var _ts_language_metadata = Module[\"_ts_language_metadata\"] = wasmExports[\"ts_language_metadata\"];\n        var _ts_language_name = Module[\"_ts_language_name\"] = wasmExports[\"ts_language_name\"];\n        var _ts_language_field_count = Module[\"_ts_language_field_count\"] = wasmExports[\"ts_language_field_count\"];\n        var _ts_language_next_state = Module[\"_ts_language_next_state\"] = wasmExports[\"ts_language_next_state\"];\n        var _ts_language_symbol_name = Module[\"_ts_language_symbol_name\"] = wasmExports[\"ts_language_symbol_name\"];\n        var _ts_language_symbol_for_name = Module[\"_ts_language_symbol_for_name\"] = wasmExports[\"ts_language_symbol_for_name\"];\n        var _strncmp = Module[\"_strncmp\"] = wasmExports[\"strncmp\"];\n        var _ts_language_symbol_type = Module[\"_ts_language_symbol_type\"] = wasmExports[\"ts_language_symbol_type\"];\n        var _ts_language_field_name_for_id = Module[\"_ts_language_field_name_for_id\"] = wasmExports[\"ts_language_field_name_for_id\"];\n        var _ts_lookahead_iterator_new = Module[\"_ts_lookahead_iterator_new\"] = wasmExports[\"ts_lookahead_iterator_new\"];\n        var _ts_lookahead_iterator_delete = Module[\"_ts_lookahead_iterator_delete\"] = wasmExports[\"ts_lookahead_iterator_delete\"];\n        var _ts_lookahead_iterator_reset_state = Module[\"_ts_lookahead_iterator_reset_state\"] = wasmExports[\"ts_lookahead_iterator_reset_state\"];\n        var _ts_lookahead_iterator_reset = Module[\"_ts_lookahead_iterator_reset\"] = wasmExports[\"ts_lookahead_iterator_reset\"];\n        var _ts_lookahead_iterator_next = Module[\"_ts_lookahead_iterator_next\"] = wasmExports[\"ts_lookahead_iterator_next\"];\n        var _ts_lookahead_iterator_current_symbol = Module[\"_ts_lookahead_iterator_current_symbol\"] = wasmExports[\"ts_lookahead_iterator_current_symbol\"];\n        var _ts_parser_delete = Module[\"_ts_parser_delete\"] = wasmExports[\"ts_parser_delete\"];\n        var _ts_parser_reset = Module[\"_ts_parser_reset\"] = wasmExports[\"ts_parser_reset\"];\n        var _ts_parser_set_language = Module[\"_ts_parser_set_language\"] = wasmExports[\"ts_parser_set_language\"];\n        var _ts_parser_timeout_micros = Module[\"_ts_parser_timeout_micros\"] = wasmExports[\"ts_parser_timeout_micros\"];\n        var _ts_parser_set_timeout_micros = Module[\"_ts_parser_set_timeout_micros\"] = wasmExports[\"ts_parser_set_timeout_micros\"];\n        var _ts_parser_set_included_ranges = Module[\"_ts_parser_set_included_ranges\"] = wasmExports[\"ts_parser_set_included_ranges\"];\n        var _memcmp = Module[\"_memcmp\"] = wasmExports[\"memcmp\"];\n        var _ts_query_new = Module[\"_ts_query_new\"] = wasmExports[\"ts_query_new\"];\n        var _ts_query_delete = Module[\"_ts_query_delete\"] = wasmExports[\"ts_query_delete\"];\n        var _iswspace = Module[\"_iswspace\"] = wasmExports[\"iswspace\"];\n        var _iswalnum = Module[\"_iswalnum\"] = wasmExports[\"iswalnum\"];\n        var _ts_query_pattern_count = Module[\"_ts_query_pattern_count\"] = wasmExports[\"ts_query_pattern_count\"];\n        var _ts_query_capture_count = Module[\"_ts_query_capture_count\"] = wasmExports[\"ts_query_capture_count\"];\n        var _ts_query_string_count = Module[\"_ts_query_string_count\"] = wasmExports[\"ts_query_string_count\"];\n        var _ts_query_capture_name_for_id = Module[\"_ts_query_capture_name_for_id\"] = wasmExports[\"ts_query_capture_name_for_id\"];\n        var _ts_query_capture_quantifier_for_id = Module[\"_ts_query_capture_quantifier_for_id\"] = wasmExports[\"ts_query_capture_quantifier_for_id\"];\n        var _ts_query_string_value_for_id = Module[\"_ts_query_string_value_for_id\"] = wasmExports[\"ts_query_string_value_for_id\"];\n        var _ts_query_predicates_for_pattern = Module[\"_ts_query_predicates_for_pattern\"] = wasmExports[\"ts_query_predicates_for_pattern\"];\n        var _ts_query_start_byte_for_pattern = Module[\"_ts_query_start_byte_for_pattern\"] = wasmExports[\"ts_query_start_byte_for_pattern\"];\n        var _ts_query_end_byte_for_pattern = Module[\"_ts_query_end_byte_for_pattern\"] = wasmExports[\"ts_query_end_byte_for_pattern\"];\n        var _ts_query_is_pattern_rooted = Module[\"_ts_query_is_pattern_rooted\"] = wasmExports[\"ts_query_is_pattern_rooted\"];\n        var _ts_query_is_pattern_non_local = Module[\"_ts_query_is_pattern_non_local\"] = wasmExports[\"ts_query_is_pattern_non_local\"];\n        var _ts_query_is_pattern_guaranteed_at_step = Module[\"_ts_query_is_pattern_guaranteed_at_step\"] = wasmExports[\"ts_query_is_pattern_guaranteed_at_step\"];\n        var _ts_query_disable_capture = Module[\"_ts_query_disable_capture\"] = wasmExports[\"ts_query_disable_capture\"];\n        var _ts_query_disable_pattern = Module[\"_ts_query_disable_pattern\"] = wasmExports[\"ts_query_disable_pattern\"];\n        var _ts_tree_copy = Module[\"_ts_tree_copy\"] = wasmExports[\"ts_tree_copy\"];\n        var _ts_tree_delete = Module[\"_ts_tree_delete\"] = wasmExports[\"ts_tree_delete\"];\n        var _ts_init = Module[\"_ts_init\"] = wasmExports[\"ts_init\"];\n        var _ts_parser_new_wasm = Module[\"_ts_parser_new_wasm\"] = wasmExports[\"ts_parser_new_wasm\"];\n        var _ts_parser_enable_logger_wasm = Module[\"_ts_parser_enable_logger_wasm\"] = wasmExports[\"ts_parser_enable_logger_wasm\"];\n        var _ts_parser_parse_wasm = Module[\"_ts_parser_parse_wasm\"] = wasmExports[\"ts_parser_parse_wasm\"];\n        var _ts_parser_included_ranges_wasm = Module[\"_ts_parser_included_ranges_wasm\"] = wasmExports[\"ts_parser_included_ranges_wasm\"];\n        var _ts_language_type_is_named_wasm = Module[\"_ts_language_type_is_named_wasm\"] = wasmExports[\"ts_language_type_is_named_wasm\"];\n        var _ts_language_type_is_visible_wasm = Module[\"_ts_language_type_is_visible_wasm\"] = wasmExports[\"ts_language_type_is_visible_wasm\"];\n        var _ts_language_supertypes_wasm = Module[\"_ts_language_supertypes_wasm\"] = wasmExports[\"ts_language_supertypes_wasm\"];\n        var _ts_language_subtypes_wasm = Module[\"_ts_language_subtypes_wasm\"] = wasmExports[\"ts_language_subtypes_wasm\"];\n        var _ts_tree_root_node_wasm = Module[\"_ts_tree_root_node_wasm\"] = wasmExports[\"ts_tree_root_node_wasm\"];\n        var _ts_tree_root_node_with_offset_wasm = Module[\"_ts_tree_root_node_with_offset_wasm\"] = wasmExports[\"ts_tree_root_node_with_offset_wasm\"];\n        var _ts_tree_edit_wasm = Module[\"_ts_tree_edit_wasm\"] = wasmExports[\"ts_tree_edit_wasm\"];\n        var _ts_tree_included_ranges_wasm = Module[\"_ts_tree_included_ranges_wasm\"] = wasmExports[\"ts_tree_included_ranges_wasm\"];\n        var _ts_tree_get_changed_ranges_wasm = Module[\"_ts_tree_get_changed_ranges_wasm\"] = wasmExports[\"ts_tree_get_changed_ranges_wasm\"];\n        var _ts_tree_cursor_new_wasm = Module[\"_ts_tree_cursor_new_wasm\"] = wasmExports[\"ts_tree_cursor_new_wasm\"];\n        var _ts_tree_cursor_copy_wasm = Module[\"_ts_tree_cursor_copy_wasm\"] = wasmExports[\"ts_tree_cursor_copy_wasm\"];\n        var _ts_tree_cursor_delete_wasm = Module[\"_ts_tree_cursor_delete_wasm\"] = wasmExports[\"ts_tree_cursor_delete_wasm\"];\n        var _ts_tree_cursor_reset_wasm = Module[\"_ts_tree_cursor_reset_wasm\"] = wasmExports[\"ts_tree_cursor_reset_wasm\"];\n        var _ts_tree_cursor_reset_to_wasm = Module[\"_ts_tree_cursor_reset_to_wasm\"] = wasmExports[\"ts_tree_cursor_reset_to_wasm\"];\n        var _ts_tree_cursor_goto_first_child_wasm = Module[\"_ts_tree_cursor_goto_first_child_wasm\"] = wasmExports[\"ts_tree_cursor_goto_first_child_wasm\"];\n        var _ts_tree_cursor_goto_last_child_wasm = Module[\"_ts_tree_cursor_goto_last_child_wasm\"] = wasmExports[\"ts_tree_cursor_goto_last_child_wasm\"];\n        var _ts_tree_cursor_goto_first_child_for_index_wasm = Module[\"_ts_tree_cursor_goto_first_child_for_index_wasm\"] = wasmExports[\"ts_tree_cursor_goto_first_child_for_index_wasm\"];\n        var _ts_tree_cursor_goto_first_child_for_position_wasm = Module[\"_ts_tree_cursor_goto_first_child_for_position_wasm\"] = wasmExports[\"ts_tree_cursor_goto_first_child_for_position_wasm\"];\n        var _ts_tree_cursor_goto_next_sibling_wasm = Module[\"_ts_tree_cursor_goto_next_sibling_wasm\"] = wasmExports[\"ts_tree_cursor_goto_next_sibling_wasm\"];\n        var _ts_tree_cursor_goto_previous_sibling_wasm = Module[\"_ts_tree_cursor_goto_previous_sibling_wasm\"] = wasmExports[\"ts_tree_cursor_goto_previous_sibling_wasm\"];\n        var _ts_tree_cursor_goto_descendant_wasm = Module[\"_ts_tree_cursor_goto_descendant_wasm\"] = wasmExports[\"ts_tree_cursor_goto_descendant_wasm\"];\n        var _ts_tree_cursor_goto_parent_wasm = Module[\"_ts_tree_cursor_goto_parent_wasm\"] = wasmExports[\"ts_tree_cursor_goto_parent_wasm\"];\n        var _ts_tree_cursor_current_node_type_id_wasm = Module[\"_ts_tree_cursor_current_node_type_id_wasm\"] = wasmExports[\"ts_tree_cursor_current_node_type_id_wasm\"];\n        var _ts_tree_cursor_current_node_state_id_wasm = Module[\"_ts_tree_cursor_current_node_state_id_wasm\"] = wasmExports[\"ts_tree_cursor_current_node_state_id_wasm\"];\n        var _ts_tree_cursor_current_node_is_named_wasm = Module[\"_ts_tree_cursor_current_node_is_named_wasm\"] = wasmExports[\"ts_tree_cursor_current_node_is_named_wasm\"];\n        var _ts_tree_cursor_current_node_is_missing_wasm = Module[\"_ts_tree_cursor_current_node_is_missing_wasm\"] = wasmExports[\"ts_tree_cursor_current_node_is_missing_wasm\"];\n        var _ts_tree_cursor_current_node_id_wasm = Module[\"_ts_tree_cursor_current_node_id_wasm\"] = wasmExports[\"ts_tree_cursor_current_node_id_wasm\"];\n        var _ts_tree_cursor_start_position_wasm = Module[\"_ts_tree_cursor_start_position_wasm\"] = wasmExports[\"ts_tree_cursor_start_position_wasm\"];\n        var _ts_tree_cursor_end_position_wasm = Module[\"_ts_tree_cursor_end_position_wasm\"] = wasmExports[\"ts_tree_cursor_end_position_wasm\"];\n        var _ts_tree_cursor_start_index_wasm = Module[\"_ts_tree_cursor_start_index_wasm\"] = wasmExports[\"ts_tree_cursor_start_index_wasm\"];\n        var _ts_tree_cursor_end_index_wasm = Module[\"_ts_tree_cursor_end_index_wasm\"] = wasmExports[\"ts_tree_cursor_end_index_wasm\"];\n        var _ts_tree_cursor_current_field_id_wasm = Module[\"_ts_tree_cursor_current_field_id_wasm\"] = wasmExports[\"ts_tree_cursor_current_field_id_wasm\"];\n        var _ts_tree_cursor_current_depth_wasm = Module[\"_ts_tree_cursor_current_depth_wasm\"] = wasmExports[\"ts_tree_cursor_current_depth_wasm\"];\n        var _ts_tree_cursor_current_descendant_index_wasm = Module[\"_ts_tree_cursor_current_descendant_index_wasm\"] = wasmExports[\"ts_tree_cursor_current_descendant_index_wasm\"];\n        var _ts_tree_cursor_current_node_wasm = Module[\"_ts_tree_cursor_current_node_wasm\"] = wasmExports[\"ts_tree_cursor_current_node_wasm\"];\n        var _ts_node_symbol_wasm = Module[\"_ts_node_symbol_wasm\"] = wasmExports[\"ts_node_symbol_wasm\"];\n        var _ts_node_field_name_for_child_wasm = Module[\"_ts_node_field_name_for_child_wasm\"] = wasmExports[\"ts_node_field_name_for_child_wasm\"];\n        var _ts_node_field_name_for_named_child_wasm = Module[\"_ts_node_field_name_for_named_child_wasm\"] = wasmExports[\"ts_node_field_name_for_named_child_wasm\"];\n        var _ts_node_children_by_field_id_wasm = Module[\"_ts_node_children_by_field_id_wasm\"] = wasmExports[\"ts_node_children_by_field_id_wasm\"];\n        var _ts_node_first_child_for_byte_wasm = Module[\"_ts_node_first_child_for_byte_wasm\"] = wasmExports[\"ts_node_first_child_for_byte_wasm\"];\n        var _ts_node_first_named_child_for_byte_wasm = Module[\"_ts_node_first_named_child_for_byte_wasm\"] = wasmExports[\"ts_node_first_named_child_for_byte_wasm\"];\n        var _ts_node_grammar_symbol_wasm = Module[\"_ts_node_grammar_symbol_wasm\"] = wasmExports[\"ts_node_grammar_symbol_wasm\"];\n        var _ts_node_child_count_wasm = Module[\"_ts_node_child_count_wasm\"] = wasmExports[\"ts_node_child_count_wasm\"];\n        var _ts_node_named_child_count_wasm = Module[\"_ts_node_named_child_count_wasm\"] = wasmExports[\"ts_node_named_child_count_wasm\"];\n        var _ts_node_child_wasm = Module[\"_ts_node_child_wasm\"] = wasmExports[\"ts_node_child_wasm\"];\n        var _ts_node_named_child_wasm = Module[\"_ts_node_named_child_wasm\"] = wasmExports[\"ts_node_named_child_wasm\"];\n        var _ts_node_child_by_field_id_wasm = Module[\"_ts_node_child_by_field_id_wasm\"] = wasmExports[\"ts_node_child_by_field_id_wasm\"];\n        var _ts_node_next_sibling_wasm = Module[\"_ts_node_next_sibling_wasm\"] = wasmExports[\"ts_node_next_sibling_wasm\"];\n        var _ts_node_prev_sibling_wasm = Module[\"_ts_node_prev_sibling_wasm\"] = wasmExports[\"ts_node_prev_sibling_wasm\"];\n        var _ts_node_next_named_sibling_wasm = Module[\"_ts_node_next_named_sibling_wasm\"] = wasmExports[\"ts_node_next_named_sibling_wasm\"];\n        var _ts_node_prev_named_sibling_wasm = Module[\"_ts_node_prev_named_sibling_wasm\"] = wasmExports[\"ts_node_prev_named_sibling_wasm\"];\n        var _ts_node_descendant_count_wasm = Module[\"_ts_node_descendant_count_wasm\"] = wasmExports[\"ts_node_descendant_count_wasm\"];\n        var _ts_node_parent_wasm = Module[\"_ts_node_parent_wasm\"] = wasmExports[\"ts_node_parent_wasm\"];\n        var _ts_node_child_with_descendant_wasm = Module[\"_ts_node_child_with_descendant_wasm\"] = wasmExports[\"ts_node_child_with_descendant_wasm\"];\n        var _ts_node_descendant_for_index_wasm = Module[\"_ts_node_descendant_for_index_wasm\"] = wasmExports[\"ts_node_descendant_for_index_wasm\"];\n        var _ts_node_named_descendant_for_index_wasm = Module[\"_ts_node_named_descendant_for_index_wasm\"] = wasmExports[\"ts_node_named_descendant_for_index_wasm\"];\n        var _ts_node_descendant_for_position_wasm = Module[\"_ts_node_descendant_for_position_wasm\"] = wasmExports[\"ts_node_descendant_for_position_wasm\"];\n        var _ts_node_named_descendant_for_position_wasm = Module[\"_ts_node_named_descendant_for_position_wasm\"] = wasmExports[\"ts_node_named_descendant_for_position_wasm\"];\n        var _ts_node_start_point_wasm = Module[\"_ts_node_start_point_wasm\"] = wasmExports[\"ts_node_start_point_wasm\"];\n        var _ts_node_end_point_wasm = Module[\"_ts_node_end_point_wasm\"] = wasmExports[\"ts_node_end_point_wasm\"];\n        var _ts_node_start_index_wasm = Module[\"_ts_node_start_index_wasm\"] = wasmExports[\"ts_node_start_index_wasm\"];\n        var _ts_node_end_index_wasm = Module[\"_ts_node_end_index_wasm\"] = wasmExports[\"ts_node_end_index_wasm\"];\n        var _ts_node_to_string_wasm = Module[\"_ts_node_to_string_wasm\"] = wasmExports[\"ts_node_to_string_wasm\"];\n        var _ts_node_children_wasm = Module[\"_ts_node_children_wasm\"] = wasmExports[\"ts_node_children_wasm\"];\n        var _ts_node_named_children_wasm = Module[\"_ts_node_named_children_wasm\"] = wasmExports[\"ts_node_named_children_wasm\"];\n        var _ts_node_descendants_of_type_wasm = Module[\"_ts_node_descendants_of_type_wasm\"] = wasmExports[\"ts_node_descendants_of_type_wasm\"];\n        var _ts_node_is_named_wasm = Module[\"_ts_node_is_named_wasm\"] = wasmExports[\"ts_node_is_named_wasm\"];\n        var _ts_node_has_changes_wasm = Module[\"_ts_node_has_changes_wasm\"] = wasmExports[\"ts_node_has_changes_wasm\"];\n        var _ts_node_has_error_wasm = Module[\"_ts_node_has_error_wasm\"] = wasmExports[\"ts_node_has_error_wasm\"];\n        var _ts_node_is_error_wasm = Module[\"_ts_node_is_error_wasm\"] = wasmExports[\"ts_node_is_error_wasm\"];\n        var _ts_node_is_missing_wasm = Module[\"_ts_node_is_missing_wasm\"] = wasmExports[\"ts_node_is_missing_wasm\"];\n        var _ts_node_is_extra_wasm = Module[\"_ts_node_is_extra_wasm\"] = wasmExports[\"ts_node_is_extra_wasm\"];\n        var _ts_node_parse_state_wasm = Module[\"_ts_node_parse_state_wasm\"] = wasmExports[\"ts_node_parse_state_wasm\"];\n        var _ts_node_next_parse_state_wasm = Module[\"_ts_node_next_parse_state_wasm\"] = wasmExports[\"ts_node_next_parse_state_wasm\"];\n        var _ts_query_matches_wasm = Module[\"_ts_query_matches_wasm\"] = wasmExports[\"ts_query_matches_wasm\"];\n        var _ts_query_captures_wasm = Module[\"_ts_query_captures_wasm\"] = wasmExports[\"ts_query_captures_wasm\"];\n        var _memset = Module[\"_memset\"] = wasmExports[\"memset\"];\n        var _memcpy = Module[\"_memcpy\"] = wasmExports[\"memcpy\"];\n        var _memmove = Module[\"_memmove\"] = wasmExports[\"memmove\"];\n        var _iswalpha = Module[\"_iswalpha\"] = wasmExports[\"iswalpha\"];\n        var _iswblank = Module[\"_iswblank\"] = wasmExports[\"iswblank\"];\n        var _iswdigit = Module[\"_iswdigit\"] = wasmExports[\"iswdigit\"];\n        var _iswlower = Module[\"_iswlower\"] = wasmExports[\"iswlower\"];\n        var _iswupper = Module[\"_iswupper\"] = wasmExports[\"iswupper\"];\n        var _iswxdigit = Module[\"_iswxdigit\"] = wasmExports[\"iswxdigit\"];\n        var _memchr = Module[\"_memchr\"] = wasmExports[\"memchr\"];\n        var _strlen = Module[\"_strlen\"] = wasmExports[\"strlen\"];\n        var _strcmp = Module[\"_strcmp\"] = wasmExports[\"strcmp\"];\n        var _strncat = Module[\"_strncat\"] = wasmExports[\"strncat\"];\n        var _strncpy = Module[\"_strncpy\"] = wasmExports[\"strncpy\"];\n        var _towlower = Module[\"_towlower\"] = wasmExports[\"towlower\"];\n        var _towupper = Module[\"_towupper\"] = wasmExports[\"towupper\"];\n        var _setThrew = wasmExports[\"setThrew\"];\n        var __emscripten_stack_restore = wasmExports[\"_emscripten_stack_restore\"];\n        var __emscripten_stack_alloc = wasmExports[\"_emscripten_stack_alloc\"];\n        var _emscripten_stack_get_current = wasmExports[\"emscripten_stack_get_current\"];\n        var ___wasm_apply_data_relocs = wasmExports[\"__wasm_apply_data_relocs\"];\n        Module[\"setValue\"] = setValue;\n        Module[\"getValue\"] = getValue;\n        Module[\"UTF8ToString\"] = UTF8ToString;\n        Module[\"stringToUTF8\"] = stringToUTF8;\n        Module[\"lengthBytesUTF8\"] = lengthBytesUTF8;\n        Module[\"AsciiToString\"] = AsciiToString;\n        Module[\"stringToUTF16\"] = stringToUTF16;\n        Module[\"loadWebAssemblyModule\"] = loadWebAssemblyModule;\n        function callMain(args2 = []) {\n          var entryFunction = resolveGlobalSymbol(\"main\").sym;\n          if (!entryFunction) return;\n          args2.unshift(thisProgram);\n          var argc = args2.length;\n          var argv = stackAlloc((argc + 1) * 4);\n          var argv_ptr = argv;\n          args2.forEach((arg) => {\n            LE_HEAP_STORE_U32((argv_ptr >> 2) * 4, stringToUTF8OnStack(arg));\n            argv_ptr += 4;\n          });\n          LE_HEAP_STORE_U32((argv_ptr >> 2) * 4, 0);\n          try {\n            var ret = entryFunction(argc, argv);\n            exitJS(\n              ret,\n              /* implicit = */\n              true\n            );\n            return ret;\n          } catch (e) {\n            return handleException(e);\n          }\n        }\n        __name(callMain, \"callMain\");\n        function run(args2 = arguments_) {\n          if (runDependencies > 0) {\n            dependenciesFulfilled = run;\n            return;\n          }\n          preRun();\n          if (runDependencies > 0) {\n            dependenciesFulfilled = run;\n            return;\n          }\n          function doRun() {\n            Module[\"calledRun\"] = true;\n            if (ABORT) return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            Module[\"onRuntimeInitialized\"]?.();\n            var noInitialRun = Module[\"noInitialRun\"];\n            if (!noInitialRun) callMain(args2);\n            postRun();\n          }\n          __name(doRun, \"doRun\");\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(() => {\n              setTimeout(() => Module[\"setStatus\"](\"\"), 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        __name(run, \"run\");\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        run();\n        moduleRtn = readyPromise;\n        return moduleRtn;\n      };\n    })();\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      module.exports = Module;\n      module.exports.default = Module;\n    } else if (typeof define === \"function\" && define[\"amd\"])\n      define([], () => Module);\n  }\n});\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  CaptureQuantifier: () => CaptureQuantifier,\n  LANGUAGE_VERSION: () => LANGUAGE_VERSION,\n  Language: () => Language,\n  LookaheadIterator: () => LookaheadIterator,\n  MIN_COMPATIBLE_VERSION: () => MIN_COMPATIBLE_VERSION,\n  Node: () => Node,\n  Parser: () => Parser,\n  Query: () => Query,\n  Tree: () => Tree,\n  TreeCursor: () => TreeCursor\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/constants.ts\nvar SIZE_OF_SHORT = 2;\nvar SIZE_OF_INT = 4;\nvar SIZE_OF_CURSOR = 4 * SIZE_OF_INT;\nvar SIZE_OF_NODE = 5 * SIZE_OF_INT;\nvar SIZE_OF_POINT = 2 * SIZE_OF_INT;\nvar SIZE_OF_RANGE = 2 * SIZE_OF_INT + 2 * SIZE_OF_POINT;\nvar ZERO_POINT = { row: 0, column: 0 };\nvar INTERNAL = Symbol(\"INTERNAL\");\nfunction assertInternal(x) {\n  if (x !== INTERNAL) throw new Error(\"Illegal constructor\");\n}\n__name(assertInternal, \"assertInternal\");\nfunction isPoint(point) {\n  return !!point && typeof point.row === \"number\" && typeof point.column === \"number\";\n}\n__name(isPoint, \"isPoint\");\nfunction setModule(module2) {\n  C = module2;\n}\n__name(setModule, \"setModule\");\nvar C;\n\n// src/lookahead_iterator.ts\nvar LookaheadIterator = class {\n  static {\n    __name(this, \"LookaheadIterator\");\n  }\n  /** @internal */\n  [0] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  language;\n  /** @internal */\n  constructor(internal, address, language) {\n    assertInternal(internal);\n    this[0] = address;\n    this.language = language;\n  }\n  /** Get the current symbol of the lookahead iterator. */\n  get currentTypeId() {\n    return C._ts_lookahead_iterator_current_symbol(this[0]);\n  }\n  /** Get the current symbol name of the lookahead iterator. */\n  get currentType() {\n    return this.language.types[this.currentTypeId] || \"ERROR\";\n  }\n  /** Delete the lookahead iterator, freeing its resources. */\n  delete() {\n    C._ts_lookahead_iterator_delete(this[0]);\n    this[0] = 0;\n  }\n  /**\n   * Reset the lookahead iterator.\n   *\n   * This returns `true` if the language was set successfully and `false`\n   * otherwise.\n   */\n  reset(language, stateId) {\n    if (C._ts_lookahead_iterator_reset(this[0], language[0], stateId)) {\n      this.language = language;\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Reset the lookahead iterator to another state.\n   *\n   * This returns `true` if the iterator was reset to the given state and\n   * `false` otherwise.\n   */\n  resetState(stateId) {\n    return Boolean(C._ts_lookahead_iterator_reset_state(this[0], stateId));\n  }\n  /**\n   * Returns an iterator that iterates over the symbols of the lookahead iterator.\n   *\n   * The iterator will yield the current symbol name as a string for each step\n   * until there are no more symbols to iterate over.\n   */\n  [Symbol.iterator]() {\n    return {\n      next: /* @__PURE__ */ __name(() => {\n        if (C._ts_lookahead_iterator_next(this[0])) {\n          return { done: false, value: this.currentType };\n        }\n        return { done: true, value: \"\" };\n      }, \"next\")\n    };\n  }\n};\n\n// src/tree.ts\nfunction getText(tree, startIndex, endIndex, startPosition) {\n  const length = endIndex - startIndex;\n  let result = tree.textCallback(startIndex, startPosition);\n  if (result) {\n    startIndex += result.length;\n    while (startIndex < endIndex) {\n      const string = tree.textCallback(startIndex, startPosition);\n      if (string && string.length > 0) {\n        startIndex += string.length;\n        result += string;\n      } else {\n        break;\n      }\n    }\n    if (startIndex > endIndex) {\n      result = result.slice(0, length);\n    }\n  }\n  return result ?? \"\";\n}\n__name(getText, \"getText\");\nvar Tree = class _Tree {\n  static {\n    __name(this, \"Tree\");\n  }\n  /** @internal */\n  [0] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  textCallback;\n  /** The language that was used to parse the syntax tree. */\n  language;\n  /** @internal */\n  constructor(internal, address, language, textCallback) {\n    assertInternal(internal);\n    this[0] = address;\n    this.language = language;\n    this.textCallback = textCallback;\n  }\n  /** Create a shallow copy of the syntax tree. This is very fast. */\n  copy() {\n    const address = C._ts_tree_copy(this[0]);\n    return new _Tree(INTERNAL, address, this.language, this.textCallback);\n  }\n  /** Delete the syntax tree, freeing its resources. */\n  delete() {\n    C._ts_tree_delete(this[0]);\n    this[0] = 0;\n  }\n  /** Get the root node of the syntax tree. */\n  get rootNode() {\n    C._ts_tree_root_node_wasm(this[0]);\n    return unmarshalNode(this);\n  }\n  /**\n   * Get the root node of the syntax tree, but with its position shifted\n   * forward by the given offset.\n   */\n  rootNodeWithOffset(offsetBytes, offsetExtent) {\n    const address = TRANSFER_BUFFER + SIZE_OF_NODE;\n    C.setValue(address, offsetBytes, \"i32\");\n    marshalPoint(address + SIZE_OF_INT, offsetExtent);\n    C._ts_tree_root_node_with_offset_wasm(this[0]);\n    return unmarshalNode(this);\n  }\n  /**\n   * Edit the syntax tree to keep it in sync with source code that has been\n   * edited.\n   *\n   * You must describe the edit both in terms of byte offsets and in terms of\n   * row/column coordinates.\n   */\n  edit(edit) {\n    marshalEdit(edit);\n    C._ts_tree_edit_wasm(this[0]);\n  }\n  /** Create a new {@link TreeCursor} starting from the root of the tree. */\n  walk() {\n    return this.rootNode.walk();\n  }\n  /**\n   * Compare this old edited syntax tree to a new syntax tree representing\n   * the same document, returning a sequence of ranges whose syntactic\n   * structure has changed.\n   *\n   * For this to work correctly, this syntax tree must have been edited such\n   * that its ranges match up to the new tree. Generally, you'll want to\n   * call this method right after calling one of the [`Parser::parse`]\n   * functions. Call it on the old tree that was passed to parse, and\n   * pass the new tree that was returned from `parse`.\n   */\n  getChangedRanges(other) {\n    if (!(other instanceof _Tree)) {\n      throw new TypeError(\"Argument must be a Tree\");\n    }\n    C._ts_tree_get_changed_ranges_wasm(this[0], other[0]);\n    const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const buffer = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const result = new Array(count);\n    if (count > 0) {\n      let address = buffer;\n      for (let i2 = 0; i2 < count; i2++) {\n        result[i2] = unmarshalRange(address);\n        address += SIZE_OF_RANGE;\n      }\n      C._free(buffer);\n    }\n    return result;\n  }\n  /** Get the included ranges that were used to parse the syntax tree. */\n  getIncludedRanges() {\n    C._ts_tree_included_ranges_wasm(this[0]);\n    const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const buffer = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const result = new Array(count);\n    if (count > 0) {\n      let address = buffer;\n      for (let i2 = 0; i2 < count; i2++) {\n        result[i2] = unmarshalRange(address);\n        address += SIZE_OF_RANGE;\n      }\n      C._free(buffer);\n    }\n    return result;\n  }\n};\n\n// src/tree_cursor.ts\nvar TreeCursor = class _TreeCursor {\n  static {\n    __name(this, \"TreeCursor\");\n  }\n  /** @internal */\n  [0] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  [1] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  [2] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  [3] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  tree;\n  /** @internal */\n  constructor(internal, tree) {\n    assertInternal(internal);\n    this.tree = tree;\n    unmarshalTreeCursor(this);\n  }\n  /** Creates a deep copy of the tree cursor. This allocates new memory. */\n  copy() {\n    const copy = new _TreeCursor(INTERNAL, this.tree);\n    C._ts_tree_cursor_copy_wasm(this.tree[0]);\n    unmarshalTreeCursor(copy);\n    return copy;\n  }\n  /** Delete the tree cursor, freeing its resources. */\n  delete() {\n    marshalTreeCursor(this);\n    C._ts_tree_cursor_delete_wasm(this.tree[0]);\n    this[0] = this[1] = this[2] = 0;\n  }\n  /** Get the tree cursor's current {@link Node}. */\n  get currentNode() {\n    marshalTreeCursor(this);\n    C._ts_tree_cursor_current_node_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /**\n   * Get the numerical field id of this tree cursor's current node.\n   *\n   * See also {@link TreeCursor#currentFieldName}.\n   */\n  get currentFieldId() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_current_field_id_wasm(this.tree[0]);\n  }\n  /** Get the field name of this tree cursor's current node. */\n  get currentFieldName() {\n    return this.tree.language.fields[this.currentFieldId];\n  }\n  /**\n   * Get the depth of the cursor's current node relative to the original\n   * node that the cursor was constructed with.\n   */\n  get currentDepth() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_current_depth_wasm(this.tree[0]);\n  }\n  /**\n   * Get the index of the cursor's current node out of all of the\n   * descendants of the original node that the cursor was constructed with.\n   */\n  get currentDescendantIndex() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_current_descendant_index_wasm(this.tree[0]);\n  }\n  /** Get the type of the cursor's current node. */\n  get nodeType() {\n    return this.tree.language.types[this.nodeTypeId] || \"ERROR\";\n  }\n  /** Get the type id of the cursor's current node. */\n  get nodeTypeId() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_current_node_type_id_wasm(this.tree[0]);\n  }\n  /** Get the state id of the cursor's current node. */\n  get nodeStateId() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_current_node_state_id_wasm(this.tree[0]);\n  }\n  /** Get the id of the cursor's current node. */\n  get nodeId() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_current_node_id_wasm(this.tree[0]);\n  }\n  /**\n   * Check if the cursor's current node is *named*.\n   *\n   * Named nodes correspond to named rules in the grammar, whereas\n   * *anonymous* nodes correspond to string literals in the grammar.\n   */\n  get nodeIsNamed() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_current_node_is_named_wasm(this.tree[0]) === 1;\n  }\n  /**\n   * Check if the cursor's current node is *missing*.\n   *\n   * Missing nodes are inserted by the parser in order to recover from\n   * certain kinds of syntax errors.\n   */\n  get nodeIsMissing() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_current_node_is_missing_wasm(this.tree[0]) === 1;\n  }\n  /** Get the string content of the cursor's current node. */\n  get nodeText() {\n    marshalTreeCursor(this);\n    const startIndex = C._ts_tree_cursor_start_index_wasm(this.tree[0]);\n    const endIndex = C._ts_tree_cursor_end_index_wasm(this.tree[0]);\n    C._ts_tree_cursor_start_position_wasm(this.tree[0]);\n    const startPosition = unmarshalPoint(TRANSFER_BUFFER);\n    return getText(this.tree, startIndex, endIndex, startPosition);\n  }\n  /** Get the start position of the cursor's current node. */\n  get startPosition() {\n    marshalTreeCursor(this);\n    C._ts_tree_cursor_start_position_wasm(this.tree[0]);\n    return unmarshalPoint(TRANSFER_BUFFER);\n  }\n  /** Get the end position of the cursor's current node. */\n  get endPosition() {\n    marshalTreeCursor(this);\n    C._ts_tree_cursor_end_position_wasm(this.tree[0]);\n    return unmarshalPoint(TRANSFER_BUFFER);\n  }\n  /** Get the start index of the cursor's current node. */\n  get startIndex() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_start_index_wasm(this.tree[0]);\n  }\n  /** Get the end index of the cursor's current node. */\n  get endIndex() {\n    marshalTreeCursor(this);\n    return C._ts_tree_cursor_end_index_wasm(this.tree[0]);\n  }\n  /**\n   * Move this cursor to the first child of its current node.\n   *\n   * This returns `true` if the cursor successfully moved, and returns\n   * `false` if there were no children.\n   */\n  gotoFirstChild() {\n    marshalTreeCursor(this);\n    const result = C._ts_tree_cursor_goto_first_child_wasm(this.tree[0]);\n    unmarshalTreeCursor(this);\n    return result === 1;\n  }\n  /**\n   * Move this cursor to the last child of its current node.\n   *\n   * This returns `true` if the cursor successfully moved, and returns\n   * `false` if there were no children.\n   *\n   * Note that this function may be slower than\n   * {@link TreeCursor#gotoFirstChild} because it needs to\n   * iterate through all the children to compute the child's position.\n   */\n  gotoLastChild() {\n    marshalTreeCursor(this);\n    const result = C._ts_tree_cursor_goto_last_child_wasm(this.tree[0]);\n    unmarshalTreeCursor(this);\n    return result === 1;\n  }\n  /**\n   * Move this cursor to the parent of its current node.\n   *\n   * This returns `true` if the cursor successfully moved, and returns\n   * `false` if there was no parent node (the cursor was already on the\n   * root node).\n   *\n   * Note that the node the cursor was constructed with is considered the root\n   * of the cursor, and the cursor cannot walk outside this node.\n   */\n  gotoParent() {\n    marshalTreeCursor(this);\n    const result = C._ts_tree_cursor_goto_parent_wasm(this.tree[0]);\n    unmarshalTreeCursor(this);\n    return result === 1;\n  }\n  /**\n   * Move this cursor to the next sibling of its current node.\n   *\n   * This returns `true` if the cursor successfully moved, and returns\n   * `false` if there was no next sibling node.\n   *\n   * Note that the node the cursor was constructed with is considered the root\n   * of the cursor, and the cursor cannot walk outside this node.\n   */\n  gotoNextSibling() {\n    marshalTreeCursor(this);\n    const result = C._ts_tree_cursor_goto_next_sibling_wasm(this.tree[0]);\n    unmarshalTreeCursor(this);\n    return result === 1;\n  }\n  /**\n   * Move this cursor to the previous sibling of its current node.\n   *\n   * This returns `true` if the cursor successfully moved, and returns\n   * `false` if there was no previous sibling node.\n   *\n   * Note that this function may be slower than\n   * {@link TreeCursor#gotoNextSibling} due to how node\n   * positions are stored. In the worst case, this will need to iterate\n   * through all the children up to the previous sibling node to recalculate\n   * its position. Also note that the node the cursor was constructed with is\n   * considered the root of the cursor, and the cursor cannot walk outside this node.\n   */\n  gotoPreviousSibling() {\n    marshalTreeCursor(this);\n    const result = C._ts_tree_cursor_goto_previous_sibling_wasm(this.tree[0]);\n    unmarshalTreeCursor(this);\n    return result === 1;\n  }\n  /**\n   * Move the cursor to the node that is the nth descendant of\n   * the original node that the cursor was constructed with, where\n   * zero represents the original node itself.\n   */\n  gotoDescendant(goalDescendantIndex) {\n    marshalTreeCursor(this);\n    C._ts_tree_cursor_goto_descendant_wasm(this.tree[0], goalDescendantIndex);\n    unmarshalTreeCursor(this);\n  }\n  /**\n   * Move this cursor to the first child of its current node that contains or\n   * starts after the given byte offset.\n   *\n   * This returns `true` if the cursor successfully moved to a child node, and returns\n   * `false` if no such child was found.\n   */\n  gotoFirstChildForIndex(goalIndex) {\n    marshalTreeCursor(this);\n    C.setValue(TRANSFER_BUFFER + SIZE_OF_CURSOR, goalIndex, \"i32\");\n    const result = C._ts_tree_cursor_goto_first_child_for_index_wasm(this.tree[0]);\n    unmarshalTreeCursor(this);\n    return result === 1;\n  }\n  /**\n   * Move this cursor to the first child of its current node that contains or\n   * starts after the given byte offset.\n   *\n   * This returns the index of the child node if one was found, and returns\n   * `null` if no such child was found.\n   */\n  gotoFirstChildForPosition(goalPosition) {\n    marshalTreeCursor(this);\n    marshalPoint(TRANSFER_BUFFER + SIZE_OF_CURSOR, goalPosition);\n    const result = C._ts_tree_cursor_goto_first_child_for_position_wasm(this.tree[0]);\n    unmarshalTreeCursor(this);\n    return result === 1;\n  }\n  /**\n   * Re-initialize this tree cursor to start at the original node that the\n   * cursor was constructed with.\n   */\n  reset(node) {\n    marshalNode(node);\n    marshalTreeCursor(this, TRANSFER_BUFFER + SIZE_OF_NODE);\n    C._ts_tree_cursor_reset_wasm(this.tree[0]);\n    unmarshalTreeCursor(this);\n  }\n  /**\n   * Re-initialize a tree cursor to the same position as another cursor.\n   *\n   * Unlike {@link TreeCursor#reset}, this will not lose parent\n   * information and allows reusing already created cursors.\n   */\n  resetTo(cursor) {\n    marshalTreeCursor(this, TRANSFER_BUFFER);\n    marshalTreeCursor(cursor, TRANSFER_BUFFER + SIZE_OF_CURSOR);\n    C._ts_tree_cursor_reset_to_wasm(this.tree[0], cursor.tree[0]);\n    unmarshalTreeCursor(this);\n  }\n};\n\n// src/node.ts\nvar Node = class {\n  static {\n    __name(this, \"Node\");\n  }\n  /** @internal */\n  [0] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  _children;\n  /** @internal */\n  _namedChildren;\n  /** @internal */\n  constructor(internal, {\n    id,\n    tree,\n    startIndex,\n    startPosition,\n    other\n  }) {\n    assertInternal(internal);\n    this[0] = other;\n    this.id = id;\n    this.tree = tree;\n    this.startIndex = startIndex;\n    this.startPosition = startPosition;\n  }\n  /**\n   * The numeric id for this node that is unique.\n   *\n   * Within a given syntax tree, no two nodes have the same id. However:\n   *\n   * * If a new tree is created based on an older tree, and a node from the old tree is reused in\n   *   the process, then that node will have the same id in both trees.\n   *\n   * * A node not marked as having changes does not guarantee it was reused.\n   *\n   * * If a node is marked as having changed in the old tree, it will not be reused.\n   */\n  id;\n  /** The byte index where this node starts. */\n  startIndex;\n  /** The position where this node starts. */\n  startPosition;\n  /** The tree that this node belongs to. */\n  tree;\n  /** Get this node's type as a numerical id. */\n  get typeId() {\n    marshalNode(this);\n    return C._ts_node_symbol_wasm(this.tree[0]);\n  }\n  /**\n   * Get the node's type as a numerical id as it appears in the grammar,\n   * ignoring aliases.\n   */\n  get grammarId() {\n    marshalNode(this);\n    return C._ts_node_grammar_symbol_wasm(this.tree[0]);\n  }\n  /** Get this node's type as a string. */\n  get type() {\n    return this.tree.language.types[this.typeId] || \"ERROR\";\n  }\n  /**\n   * Get this node's symbol name as it appears in the grammar, ignoring\n   * aliases as a string.\n   */\n  get grammarType() {\n    return this.tree.language.types[this.grammarId] || \"ERROR\";\n  }\n  /**\n   * Check if this node is *named*.\n   *\n   * Named nodes correspond to named rules in the grammar, whereas\n   * *anonymous* nodes correspond to string literals in the grammar.\n   */\n  get isNamed() {\n    marshalNode(this);\n    return C._ts_node_is_named_wasm(this.tree[0]) === 1;\n  }\n  /**\n   * Check if this node is *extra*.\n   *\n   * Extra nodes represent things like comments, which are not required\n   * by the grammar, but can appear anywhere.\n   */\n  get isExtra() {\n    marshalNode(this);\n    return C._ts_node_is_extra_wasm(this.tree[0]) === 1;\n  }\n  /**\n   * Check if this node represents a syntax error.\n   *\n   * Syntax errors represent parts of the code that could not be incorporated\n   * into a valid syntax tree.\n   */\n  get isError() {\n    marshalNode(this);\n    return C._ts_node_is_error_wasm(this.tree[0]) === 1;\n  }\n  /**\n   * Check if this node is *missing*.\n   *\n   * Missing nodes are inserted by the parser in order to recover from\n   * certain kinds of syntax errors.\n   */\n  get isMissing() {\n    marshalNode(this);\n    return C._ts_node_is_missing_wasm(this.tree[0]) === 1;\n  }\n  /** Check if this node has been edited. */\n  get hasChanges() {\n    marshalNode(this);\n    return C._ts_node_has_changes_wasm(this.tree[0]) === 1;\n  }\n  /**\n   * Check if this node represents a syntax error or contains any syntax\n   * errors anywhere within it.\n   */\n  get hasError() {\n    marshalNode(this);\n    return C._ts_node_has_error_wasm(this.tree[0]) === 1;\n  }\n  /** Get the byte index where this node ends. */\n  get endIndex() {\n    marshalNode(this);\n    return C._ts_node_end_index_wasm(this.tree[0]);\n  }\n  /** Get the position where this node ends. */\n  get endPosition() {\n    marshalNode(this);\n    C._ts_node_end_point_wasm(this.tree[0]);\n    return unmarshalPoint(TRANSFER_BUFFER);\n  }\n  /** Get the string content of this node. */\n  get text() {\n    return getText(this.tree, this.startIndex, this.endIndex, this.startPosition);\n  }\n  /** Get this node's parse state. */\n  get parseState() {\n    marshalNode(this);\n    return C._ts_node_parse_state_wasm(this.tree[0]);\n  }\n  /** Get the parse state after this node. */\n  get nextParseState() {\n    marshalNode(this);\n    return C._ts_node_next_parse_state_wasm(this.tree[0]);\n  }\n  /** Check if this node is equal to another node. */\n  equals(other) {\n    return this.tree === other.tree && this.id === other.id;\n  }\n  /**\n   * Get the node's child at the given index, where zero represents the first child.\n   *\n   * This method is fairly fast, but its cost is technically log(n), so if\n   * you might be iterating over a long list of children, you should use\n   * {@link Node#children} instead.\n   */\n  child(index) {\n    marshalNode(this);\n    C._ts_node_child_wasm(this.tree[0], index);\n    return unmarshalNode(this.tree);\n  }\n  /**\n   * Get this node's *named* child at the given index.\n   *\n   * See also {@link Node#isNamed}.\n   * This method is fairly fast, but its cost is technically log(n), so if\n   * you might be iterating over a long list of children, you should use\n   * {@link Node#namedChildren} instead.\n   */\n  namedChild(index) {\n    marshalNode(this);\n    C._ts_node_named_child_wasm(this.tree[0], index);\n    return unmarshalNode(this.tree);\n  }\n  /**\n   * Get this node's child with the given numerical field id.\n   *\n   * See also {@link Node#childForFieldName}. You can\n   * convert a field name to an id using {@link Language#fieldIdForName}.\n   */\n  childForFieldId(fieldId) {\n    marshalNode(this);\n    C._ts_node_child_by_field_id_wasm(this.tree[0], fieldId);\n    return unmarshalNode(this.tree);\n  }\n  /**\n   * Get the first child with the given field name.\n   *\n   * If multiple children may have the same field name, access them using\n   * {@link Node#childrenForFieldName}.\n   */\n  childForFieldName(fieldName) {\n    const fieldId = this.tree.language.fields.indexOf(fieldName);\n    if (fieldId !== -1) return this.childForFieldId(fieldId);\n    return null;\n  }\n  /** Get the field name of this node's child at the given index. */\n  fieldNameForChild(index) {\n    marshalNode(this);\n    const address = C._ts_node_field_name_for_child_wasm(this.tree[0], index);\n    if (!address) return null;\n    return C.AsciiToString(address);\n  }\n  /** Get the field name of this node's named child at the given index. */\n  fieldNameForNamedChild(index) {\n    marshalNode(this);\n    const address = C._ts_node_field_name_for_named_child_wasm(this.tree[0], index);\n    if (!address) return null;\n    return C.AsciiToString(address);\n  }\n  /**\n   * Get an array of this node's children with a given field name.\n   *\n   * See also {@link Node#children}.\n   */\n  childrenForFieldName(fieldName) {\n    const fieldId = this.tree.language.fields.indexOf(fieldName);\n    if (fieldId !== -1 && fieldId !== 0) return this.childrenForFieldId(fieldId);\n    return [];\n  }\n  /**\n    * Get an array of this node's children with a given field id.\n    *\n    * See also {@link Node#childrenForFieldName}.\n    */\n  childrenForFieldId(fieldId) {\n    marshalNode(this);\n    C._ts_node_children_by_field_id_wasm(this.tree[0], fieldId);\n    const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const buffer = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const result = new Array(count);\n    if (count > 0) {\n      let address = buffer;\n      for (let i2 = 0; i2 < count; i2++) {\n        result[i2] = unmarshalNode(this.tree, address);\n        address += SIZE_OF_NODE;\n      }\n      C._free(buffer);\n    }\n    return result;\n  }\n  /** Get the node's first child that contains or starts after the given byte offset. */\n  firstChildForIndex(index) {\n    marshalNode(this);\n    const address = TRANSFER_BUFFER + SIZE_OF_NODE;\n    C.setValue(address, index, \"i32\");\n    C._ts_node_first_child_for_byte_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /** Get the node's first named child that contains or starts after the given byte offset. */\n  firstNamedChildForIndex(index) {\n    marshalNode(this);\n    const address = TRANSFER_BUFFER + SIZE_OF_NODE;\n    C.setValue(address, index, \"i32\");\n    C._ts_node_first_named_child_for_byte_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /** Get this node's number of children. */\n  get childCount() {\n    marshalNode(this);\n    return C._ts_node_child_count_wasm(this.tree[0]);\n  }\n  /**\n   * Get this node's number of *named* children.\n   *\n   * See also {@link Node#isNamed}.\n   */\n  get namedChildCount() {\n    marshalNode(this);\n    return C._ts_node_named_child_count_wasm(this.tree[0]);\n  }\n  /** Get this node's first child. */\n  get firstChild() {\n    return this.child(0);\n  }\n  /**\n   * Get this node's first named child.\n   *\n   * See also {@link Node#isNamed}.\n   */\n  get firstNamedChild() {\n    return this.namedChild(0);\n  }\n  /** Get this node's last child. */\n  get lastChild() {\n    return this.child(this.childCount - 1);\n  }\n  /**\n   * Get this node's last named child.\n   *\n   * See also {@link Node#isNamed}.\n   */\n  get lastNamedChild() {\n    return this.namedChild(this.namedChildCount - 1);\n  }\n  /**\n   * Iterate over this node's children.\n   *\n   * If you're walking the tree recursively, you may want to use the\n   * {@link TreeCursor} APIs directly instead.\n   */\n  get children() {\n    if (!this._children) {\n      marshalNode(this);\n      C._ts_node_children_wasm(this.tree[0]);\n      const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n      const buffer = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n      this._children = new Array(count);\n      if (count > 0) {\n        let address = buffer;\n        for (let i2 = 0; i2 < count; i2++) {\n          this._children[i2] = unmarshalNode(this.tree, address);\n          address += SIZE_OF_NODE;\n        }\n        C._free(buffer);\n      }\n    }\n    return this._children;\n  }\n  /**\n   * Iterate over this node's named children.\n   *\n   * See also {@link Node#children}.\n   */\n  get namedChildren() {\n    if (!this._namedChildren) {\n      marshalNode(this);\n      C._ts_node_named_children_wasm(this.tree[0]);\n      const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n      const buffer = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n      this._namedChildren = new Array(count);\n      if (count > 0) {\n        let address = buffer;\n        for (let i2 = 0; i2 < count; i2++) {\n          this._namedChildren[i2] = unmarshalNode(this.tree, address);\n          address += SIZE_OF_NODE;\n        }\n        C._free(buffer);\n      }\n    }\n    return this._namedChildren;\n  }\n  /**\n   * Get the descendants of this node that are the given type, or in the given types array.\n   *\n   * The types array should contain node type strings, which can be retrieved from {@link Language#types}.\n   *\n   * Additionally, a `startPosition` and `endPosition` can be passed in to restrict the search to a byte range.\n   */\n  descendantsOfType(types, startPosition = ZERO_POINT, endPosition = ZERO_POINT) {\n    if (!Array.isArray(types)) types = [types];\n    const symbols = [];\n    const typesBySymbol = this.tree.language.types;\n    for (let i2 = 0, n = typesBySymbol.length; i2 < n; i2++) {\n      if (types.includes(typesBySymbol[i2])) {\n        symbols.push(i2);\n      }\n    }\n    const symbolsAddress = C._malloc(SIZE_OF_INT * symbols.length);\n    for (let i2 = 0, n = symbols.length; i2 < n; i2++) {\n      C.setValue(symbolsAddress + i2 * SIZE_OF_INT, symbols[i2], \"i32\");\n    }\n    marshalNode(this);\n    C._ts_node_descendants_of_type_wasm(\n      this.tree[0],\n      symbolsAddress,\n      symbols.length,\n      startPosition.row,\n      startPosition.column,\n      endPosition.row,\n      endPosition.column\n    );\n    const descendantCount = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const descendantAddress = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const result = new Array(descendantCount);\n    if (descendantCount > 0) {\n      let address = descendantAddress;\n      for (let i2 = 0; i2 < descendantCount; i2++) {\n        result[i2] = unmarshalNode(this.tree, address);\n        address += SIZE_OF_NODE;\n      }\n    }\n    C._free(descendantAddress);\n    C._free(symbolsAddress);\n    return result;\n  }\n  /** Get this node's next sibling. */\n  get nextSibling() {\n    marshalNode(this);\n    C._ts_node_next_sibling_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /** Get this node's previous sibling. */\n  get previousSibling() {\n    marshalNode(this);\n    C._ts_node_prev_sibling_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /**\n   * Get this node's next *named* sibling.\n   *\n   * See also {@link Node#isNamed}.\n   */\n  get nextNamedSibling() {\n    marshalNode(this);\n    C._ts_node_next_named_sibling_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /**\n   * Get this node's previous *named* sibling.\n   *\n   * See also {@link Node#isNamed}.\n   */\n  get previousNamedSibling() {\n    marshalNode(this);\n    C._ts_node_prev_named_sibling_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /** Get the node's number of descendants, including one for the node itself. */\n  get descendantCount() {\n    marshalNode(this);\n    return C._ts_node_descendant_count_wasm(this.tree[0]);\n  }\n  /**\n   * Get this node's immediate parent.\n   * Prefer {@link Node#childWithDescendant} for iterating over this node's ancestors.\n   */\n  get parent() {\n    marshalNode(this);\n    C._ts_node_parent_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /**\n   * Get the node that contains `descendant`.\n   *\n   * Note that this can return `descendant` itself.\n   */\n  childWithDescendant(descendant) {\n    marshalNode(this);\n    marshalNode(descendant);\n    C._ts_node_child_with_descendant_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /** Get the smallest node within this node that spans the given byte range. */\n  descendantForIndex(start2, end = start2) {\n    if (typeof start2 !== \"number\" || typeof end !== \"number\") {\n      throw new Error(\"Arguments must be numbers\");\n    }\n    marshalNode(this);\n    const address = TRANSFER_BUFFER + SIZE_OF_NODE;\n    C.setValue(address, start2, \"i32\");\n    C.setValue(address + SIZE_OF_INT, end, \"i32\");\n    C._ts_node_descendant_for_index_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /** Get the smallest named node within this node that spans the given byte range. */\n  namedDescendantForIndex(start2, end = start2) {\n    if (typeof start2 !== \"number\" || typeof end !== \"number\") {\n      throw new Error(\"Arguments must be numbers\");\n    }\n    marshalNode(this);\n    const address = TRANSFER_BUFFER + SIZE_OF_NODE;\n    C.setValue(address, start2, \"i32\");\n    C.setValue(address + SIZE_OF_INT, end, \"i32\");\n    C._ts_node_named_descendant_for_index_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /** Get the smallest node within this node that spans the given point range. */\n  descendantForPosition(start2, end = start2) {\n    if (!isPoint(start2) || !isPoint(end)) {\n      throw new Error(\"Arguments must be {row, column} objects\");\n    }\n    marshalNode(this);\n    const address = TRANSFER_BUFFER + SIZE_OF_NODE;\n    marshalPoint(address, start2);\n    marshalPoint(address + SIZE_OF_POINT, end);\n    C._ts_node_descendant_for_position_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /** Get the smallest named node within this node that spans the given point range. */\n  namedDescendantForPosition(start2, end = start2) {\n    if (!isPoint(start2) || !isPoint(end)) {\n      throw new Error(\"Arguments must be {row, column} objects\");\n    }\n    marshalNode(this);\n    const address = TRANSFER_BUFFER + SIZE_OF_NODE;\n    marshalPoint(address, start2);\n    marshalPoint(address + SIZE_OF_POINT, end);\n    C._ts_node_named_descendant_for_position_wasm(this.tree[0]);\n    return unmarshalNode(this.tree);\n  }\n  /**\n   * Create a new {@link TreeCursor} starting from this node.\n   *\n   * Note that the given node is considered the root of the cursor,\n   * and the cursor cannot walk outside this node.\n   */\n  walk() {\n    marshalNode(this);\n    C._ts_tree_cursor_new_wasm(this.tree[0]);\n    return new TreeCursor(INTERNAL, this.tree);\n  }\n  /**\n   * Edit this node to keep it in-sync with source code that has been edited.\n   *\n   * This function is only rarely needed. When you edit a syntax tree with\n   * the {@link Tree#edit} method, all of the nodes that you retrieve from\n   * the tree afterward will already reflect the edit. You only need to\n   * use {@link Node#edit} when you have a specific {@link Node} instance that\n   * you want to keep and continue to use after an edit.\n   */\n  edit(edit) {\n    if (this.startIndex >= edit.oldEndIndex) {\n      this.startIndex = edit.newEndIndex + (this.startIndex - edit.oldEndIndex);\n      let subbedPointRow;\n      let subbedPointColumn;\n      if (this.startPosition.row > edit.oldEndPosition.row) {\n        subbedPointRow = this.startPosition.row - edit.oldEndPosition.row;\n        subbedPointColumn = this.startPosition.column;\n      } else {\n        subbedPointRow = 0;\n        subbedPointColumn = this.startPosition.column;\n        if (this.startPosition.column >= edit.oldEndPosition.column) {\n          subbedPointColumn = this.startPosition.column - edit.oldEndPosition.column;\n        }\n      }\n      if (subbedPointRow > 0) {\n        this.startPosition.row += subbedPointRow;\n        this.startPosition.column = subbedPointColumn;\n      } else {\n        this.startPosition.column += subbedPointColumn;\n      }\n    } else if (this.startIndex > edit.startIndex) {\n      this.startIndex = edit.newEndIndex;\n      this.startPosition.row = edit.newEndPosition.row;\n      this.startPosition.column = edit.newEndPosition.column;\n    }\n  }\n  /** Get the S-expression representation of this node. */\n  toString() {\n    marshalNode(this);\n    const address = C._ts_node_to_string_wasm(this.tree[0]);\n    const result = C.AsciiToString(address);\n    C._free(address);\n    return result;\n  }\n};\n\n// src/marshal.ts\nfunction unmarshalCaptures(query, tree, address, patternIndex, result) {\n  for (let i2 = 0, n = result.length; i2 < n; i2++) {\n    const captureIndex = C.getValue(address, \"i32\");\n    address += SIZE_OF_INT;\n    const node = unmarshalNode(tree, address);\n    address += SIZE_OF_NODE;\n    result[i2] = { patternIndex, name: query.captureNames[captureIndex], node };\n  }\n  return address;\n}\n__name(unmarshalCaptures, \"unmarshalCaptures\");\nfunction marshalNode(node) {\n  let address = TRANSFER_BUFFER;\n  C.setValue(address, node.id, \"i32\");\n  address += SIZE_OF_INT;\n  C.setValue(address, node.startIndex, \"i32\");\n  address += SIZE_OF_INT;\n  C.setValue(address, node.startPosition.row, \"i32\");\n  address += SIZE_OF_INT;\n  C.setValue(address, node.startPosition.column, \"i32\");\n  address += SIZE_OF_INT;\n  C.setValue(address, node[0], \"i32\");\n}\n__name(marshalNode, \"marshalNode\");\nfunction unmarshalNode(tree, address = TRANSFER_BUFFER) {\n  const id = C.getValue(address, \"i32\");\n  address += SIZE_OF_INT;\n  if (id === 0) return null;\n  const index = C.getValue(address, \"i32\");\n  address += SIZE_OF_INT;\n  const row = C.getValue(address, \"i32\");\n  address += SIZE_OF_INT;\n  const column = C.getValue(address, \"i32\");\n  address += SIZE_OF_INT;\n  const other = C.getValue(address, \"i32\");\n  const result = new Node(INTERNAL, {\n    id,\n    tree,\n    startIndex: index,\n    startPosition: { row, column },\n    other\n  });\n  return result;\n}\n__name(unmarshalNode, \"unmarshalNode\");\nfunction marshalTreeCursor(cursor, address = TRANSFER_BUFFER) {\n  C.setValue(address + 0 * SIZE_OF_INT, cursor[0], \"i32\");\n  C.setValue(address + 1 * SIZE_OF_INT, cursor[1], \"i32\");\n  C.setValue(address + 2 * SIZE_OF_INT, cursor[2], \"i32\");\n  C.setValue(address + 3 * SIZE_OF_INT, cursor[3], \"i32\");\n}\n__name(marshalTreeCursor, \"marshalTreeCursor\");\nfunction unmarshalTreeCursor(cursor) {\n  cursor[0] = C.getValue(TRANSFER_BUFFER + 0 * SIZE_OF_INT, \"i32\");\n  cursor[1] = C.getValue(TRANSFER_BUFFER + 1 * SIZE_OF_INT, \"i32\");\n  cursor[2] = C.getValue(TRANSFER_BUFFER + 2 * SIZE_OF_INT, \"i32\");\n  cursor[3] = C.getValue(TRANSFER_BUFFER + 3 * SIZE_OF_INT, \"i32\");\n}\n__name(unmarshalTreeCursor, \"unmarshalTreeCursor\");\nfunction marshalPoint(address, point) {\n  C.setValue(address, point.row, \"i32\");\n  C.setValue(address + SIZE_OF_INT, point.column, \"i32\");\n}\n__name(marshalPoint, \"marshalPoint\");\nfunction unmarshalPoint(address) {\n  const result = {\n    row: C.getValue(address, \"i32\") >>> 0,\n    column: C.getValue(address + SIZE_OF_INT, \"i32\") >>> 0\n  };\n  return result;\n}\n__name(unmarshalPoint, \"unmarshalPoint\");\nfunction marshalRange(address, range) {\n  marshalPoint(address, range.startPosition);\n  address += SIZE_OF_POINT;\n  marshalPoint(address, range.endPosition);\n  address += SIZE_OF_POINT;\n  C.setValue(address, range.startIndex, \"i32\");\n  address += SIZE_OF_INT;\n  C.setValue(address, range.endIndex, \"i32\");\n  address += SIZE_OF_INT;\n}\n__name(marshalRange, \"marshalRange\");\nfunction unmarshalRange(address) {\n  const result = {};\n  result.startPosition = unmarshalPoint(address);\n  address += SIZE_OF_POINT;\n  result.endPosition = unmarshalPoint(address);\n  address += SIZE_OF_POINT;\n  result.startIndex = C.getValue(address, \"i32\") >>> 0;\n  address += SIZE_OF_INT;\n  result.endIndex = C.getValue(address, \"i32\") >>> 0;\n  return result;\n}\n__name(unmarshalRange, \"unmarshalRange\");\nfunction marshalEdit(edit, address = TRANSFER_BUFFER) {\n  marshalPoint(address, edit.startPosition);\n  address += SIZE_OF_POINT;\n  marshalPoint(address, edit.oldEndPosition);\n  address += SIZE_OF_POINT;\n  marshalPoint(address, edit.newEndPosition);\n  address += SIZE_OF_POINT;\n  C.setValue(address, edit.startIndex, \"i32\");\n  address += SIZE_OF_INT;\n  C.setValue(address, edit.oldEndIndex, \"i32\");\n  address += SIZE_OF_INT;\n  C.setValue(address, edit.newEndIndex, \"i32\");\n  address += SIZE_OF_INT;\n}\n__name(marshalEdit, \"marshalEdit\");\nfunction unmarshalLanguageMetadata(address) {\n  const result = {};\n  result.major_version = C.getValue(address, \"i32\");\n  address += SIZE_OF_INT;\n  result.minor_version = C.getValue(address, \"i32\");\n  address += SIZE_OF_INT;\n  result.field_count = C.getValue(address, \"i32\");\n  return result;\n}\n__name(unmarshalLanguageMetadata, \"unmarshalLanguageMetadata\");\n\n// src/query.ts\nvar PREDICATE_STEP_TYPE_CAPTURE = 1;\nvar PREDICATE_STEP_TYPE_STRING = 2;\nvar QUERY_WORD_REGEX = /[\\w-]+/g;\nvar CaptureQuantifier = {\n  Zero: 0,\n  ZeroOrOne: 1,\n  ZeroOrMore: 2,\n  One: 3,\n  OneOrMore: 4\n};\nvar isCaptureStep = /* @__PURE__ */ __name((step) => step.type === \"capture\", \"isCaptureStep\");\nvar isStringStep = /* @__PURE__ */ __name((step) => step.type === \"string\", \"isStringStep\");\nvar QueryErrorKind = {\n  Syntax: 1,\n  NodeName: 2,\n  FieldName: 3,\n  CaptureName: 4,\n  PatternStructure: 5\n};\nvar QueryError = class _QueryError extends Error {\n  constructor(kind, info2, index, length) {\n    super(_QueryError.formatMessage(kind, info2));\n    this.kind = kind;\n    this.info = info2;\n    this.index = index;\n    this.length = length;\n    this.name = \"QueryError\";\n  }\n  static {\n    __name(this, \"QueryError\");\n  }\n  /** Formats an error message based on the error kind and info */\n  static formatMessage(kind, info2) {\n    switch (kind) {\n      case QueryErrorKind.NodeName:\n        return `Bad node name '${info2.word}'`;\n      case QueryErrorKind.FieldName:\n        return `Bad field name '${info2.word}'`;\n      case QueryErrorKind.CaptureName:\n        return `Bad capture name @${info2.word}`;\n      case QueryErrorKind.PatternStructure:\n        return `Bad pattern structure at offset ${info2.suffix}`;\n      case QueryErrorKind.Syntax:\n        return `Bad syntax at offset ${info2.suffix}`;\n    }\n  }\n};\nfunction parseAnyPredicate(steps, index, operator, textPredicates) {\n  if (steps.length !== 3) {\n    throw new Error(\n      `Wrong number of arguments to \\`#${operator}\\` predicate. Expected 2, got ${steps.length - 1}`\n    );\n  }\n  if (!isCaptureStep(steps[1])) {\n    throw new Error(\n      `First argument of \\`#${operator}\\` predicate must be a capture. Got \"${steps[1].value}\"`\n    );\n  }\n  const isPositive = operator === \"eq?\" || operator === \"any-eq?\";\n  const matchAll = !operator.startsWith(\"any-\");\n  if (isCaptureStep(steps[2])) {\n    const captureName1 = steps[1].name;\n    const captureName2 = steps[2].name;\n    textPredicates[index].push((captures) => {\n      const nodes1 = [];\n      const nodes2 = [];\n      for (const c of captures) {\n        if (c.name === captureName1) nodes1.push(c.node);\n        if (c.name === captureName2) nodes2.push(c.node);\n      }\n      const compare = /* @__PURE__ */ __name((n1, n2, positive) => {\n        return positive ? n1.text === n2.text : n1.text !== n2.text;\n      }, \"compare\");\n      return matchAll ? nodes1.every((n1) => nodes2.some((n2) => compare(n1, n2, isPositive))) : nodes1.some((n1) => nodes2.some((n2) => compare(n1, n2, isPositive)));\n    });\n  } else {\n    const captureName = steps[1].name;\n    const stringValue = steps[2].value;\n    const matches = /* @__PURE__ */ __name((n) => n.text === stringValue, \"matches\");\n    const doesNotMatch = /* @__PURE__ */ __name((n) => n.text !== stringValue, \"doesNotMatch\");\n    textPredicates[index].push((captures) => {\n      const nodes = [];\n      for (const c of captures) {\n        if (c.name === captureName) nodes.push(c.node);\n      }\n      const test = isPositive ? matches : doesNotMatch;\n      return matchAll ? nodes.every(test) : nodes.some(test);\n    });\n  }\n}\n__name(parseAnyPredicate, \"parseAnyPredicate\");\nfunction parseMatchPredicate(steps, index, operator, textPredicates) {\n  if (steps.length !== 3) {\n    throw new Error(\n      `Wrong number of arguments to \\`#${operator}\\` predicate. Expected 2, got ${steps.length - 1}.`\n    );\n  }\n  if (steps[1].type !== \"capture\") {\n    throw new Error(\n      `First argument of \\`#${operator}\\` predicate must be a capture. Got \"${steps[1].value}\".`\n    );\n  }\n  if (steps[2].type !== \"string\") {\n    throw new Error(\n      `Second argument of \\`#${operator}\\` predicate must be a string. Got @${steps[2].name}.`\n    );\n  }\n  const isPositive = operator === \"match?\" || operator === \"any-match?\";\n  const matchAll = !operator.startsWith(\"any-\");\n  const captureName = steps[1].name;\n  const regex = new RegExp(steps[2].value);\n  textPredicates[index].push((captures) => {\n    const nodes = [];\n    for (const c of captures) {\n      if (c.name === captureName) nodes.push(c.node.text);\n    }\n    const test = /* @__PURE__ */ __name((text, positive) => {\n      return positive ? regex.test(text) : !regex.test(text);\n    }, \"test\");\n    if (nodes.length === 0) return !isPositive;\n    return matchAll ? nodes.every((text) => test(text, isPositive)) : nodes.some((text) => test(text, isPositive));\n  });\n}\n__name(parseMatchPredicate, \"parseMatchPredicate\");\nfunction parseAnyOfPredicate(steps, index, operator, textPredicates) {\n  if (steps.length < 2) {\n    throw new Error(\n      `Wrong number of arguments to \\`#${operator}\\` predicate. Expected at least 1. Got ${steps.length - 1}.`\n    );\n  }\n  if (steps[1].type !== \"capture\") {\n    throw new Error(\n      `First argument of \\`#${operator}\\` predicate must be a capture. Got \"${steps[1].value}\".`\n    );\n  }\n  const isPositive = operator === \"any-of?\";\n  const captureName = steps[1].name;\n  const stringSteps = steps.slice(2);\n  if (!stringSteps.every(isStringStep)) {\n    throw new Error(\n      `Arguments to \\`#${operator}\\` predicate must be strings.\".`\n    );\n  }\n  const values = stringSteps.map((s) => s.value);\n  textPredicates[index].push((captures) => {\n    const nodes = [];\n    for (const c of captures) {\n      if (c.name === captureName) nodes.push(c.node.text);\n    }\n    if (nodes.length === 0) return !isPositive;\n    return nodes.every((text) => values.includes(text)) === isPositive;\n  });\n}\n__name(parseAnyOfPredicate, \"parseAnyOfPredicate\");\nfunction parseIsPredicate(steps, index, operator, assertedProperties, refutedProperties) {\n  if (steps.length < 2 || steps.length > 3) {\n    throw new Error(\n      `Wrong number of arguments to \\`#${operator}\\` predicate. Expected 1 or 2. Got ${steps.length - 1}.`\n    );\n  }\n  if (!steps.every(isStringStep)) {\n    throw new Error(\n      `Arguments to \\`#${operator}\\` predicate must be strings.\".`\n    );\n  }\n  const properties = operator === \"is?\" ? assertedProperties : refutedProperties;\n  if (!properties[index]) properties[index] = {};\n  properties[index][steps[1].value] = steps[2]?.value ?? null;\n}\n__name(parseIsPredicate, \"parseIsPredicate\");\nfunction parseSetDirective(steps, index, setProperties) {\n  if (steps.length < 2 || steps.length > 3) {\n    throw new Error(`Wrong number of arguments to \\`#set!\\` predicate. Expected 1 or 2. Got ${steps.length - 1}.`);\n  }\n  if (!steps.every(isStringStep)) {\n    throw new Error(`Arguments to \\`#set!\\` predicate must be strings.\".`);\n  }\n  if (!setProperties[index]) setProperties[index] = {};\n  setProperties[index][steps[1].value] = steps[2]?.value ?? null;\n}\n__name(parseSetDirective, \"parseSetDirective\");\nfunction parsePattern(index, stepType, stepValueId, captureNames, stringValues, steps, textPredicates, predicates, setProperties, assertedProperties, refutedProperties) {\n  if (stepType === PREDICATE_STEP_TYPE_CAPTURE) {\n    const name2 = captureNames[stepValueId];\n    steps.push({ type: \"capture\", name: name2 });\n  } else if (stepType === PREDICATE_STEP_TYPE_STRING) {\n    steps.push({ type: \"string\", value: stringValues[stepValueId] });\n  } else if (steps.length > 0) {\n    if (steps[0].type !== \"string\") {\n      throw new Error(\"Predicates must begin with a literal value\");\n    }\n    const operator = steps[0].value;\n    switch (operator) {\n      case \"any-not-eq?\":\n      case \"not-eq?\":\n      case \"any-eq?\":\n      case \"eq?\":\n        parseAnyPredicate(steps, index, operator, textPredicates);\n        break;\n      case \"any-not-match?\":\n      case \"not-match?\":\n      case \"any-match?\":\n      case \"match?\":\n        parseMatchPredicate(steps, index, operator, textPredicates);\n        break;\n      case \"not-any-of?\":\n      case \"any-of?\":\n        parseAnyOfPredicate(steps, index, operator, textPredicates);\n        break;\n      case \"is?\":\n      case \"is-not?\":\n        parseIsPredicate(steps, index, operator, assertedProperties, refutedProperties);\n        break;\n      case \"set!\":\n        parseSetDirective(steps, index, setProperties);\n        break;\n      default:\n        predicates[index].push({ operator, operands: steps.slice(1) });\n    }\n    steps.length = 0;\n  }\n}\n__name(parsePattern, \"parsePattern\");\nvar Query = class {\n  static {\n    __name(this, \"Query\");\n  }\n  /** @internal */\n  [0] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  exceededMatchLimit;\n  /** @internal */\n  textPredicates;\n  /** The names of the captures used in the query. */\n  captureNames;\n  /** The quantifiers of the captures used in the query. */\n  captureQuantifiers;\n  /**\n   * The other user-defined predicates associated with the given index.\n   *\n   * This includes predicates with operators other than:\n   * - `match?`\n   * - `eq?` and `not-eq?`\n   * - `any-of?` and `not-any-of?`\n   * - `is?` and `is-not?`\n   * - `set!`\n   */\n  predicates;\n  /** The properties for predicates with the operator `set!`. */\n  setProperties;\n  /** The properties for predicates with the operator `is?`. */\n  assertedProperties;\n  /** The properties for predicates with the operator `is-not?`. */\n  refutedProperties;\n  /** The maximum number of in-progress matches for this cursor. */\n  matchLimit;\n  /**\n   * Create a new query from a string containing one or more S-expression\n   * patterns.\n   *\n   * The query is associated with a particular language, and can only be run\n   * on syntax nodes parsed with that language. References to Queries can be\n   * shared between multiple threads.\n   *\n   * @link {@see https://tree-sitter.github.io/tree-sitter/using-parsers/queries}\n   */\n  constructor(language, source) {\n    const sourceLength = C.lengthBytesUTF8(source);\n    const sourceAddress = C._malloc(sourceLength + 1);\n    C.stringToUTF8(source, sourceAddress, sourceLength + 1);\n    const address = C._ts_query_new(\n      language[0],\n      sourceAddress,\n      sourceLength,\n      TRANSFER_BUFFER,\n      TRANSFER_BUFFER + SIZE_OF_INT\n    );\n    if (!address) {\n      const errorId = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n      const errorByte = C.getValue(TRANSFER_BUFFER, \"i32\");\n      const errorIndex = C.UTF8ToString(sourceAddress, errorByte).length;\n      const suffix = source.slice(errorIndex, errorIndex + 100).split(\"\\n\")[0];\n      const word = suffix.match(QUERY_WORD_REGEX)?.[0] ?? \"\";\n      C._free(sourceAddress);\n      switch (errorId) {\n        case QueryErrorKind.Syntax:\n          throw new QueryError(QueryErrorKind.Syntax, { suffix: `${errorIndex}: '${suffix}'...` }, errorIndex, 0);\n        case QueryErrorKind.NodeName:\n          throw new QueryError(errorId, { word }, errorIndex, word.length);\n        case QueryErrorKind.FieldName:\n          throw new QueryError(errorId, { word }, errorIndex, word.length);\n        case QueryErrorKind.CaptureName:\n          throw new QueryError(errorId, { word }, errorIndex, word.length);\n        case QueryErrorKind.PatternStructure:\n          throw new QueryError(errorId, { suffix: `${errorIndex}: '${suffix}'...` }, errorIndex, 0);\n      }\n    }\n    const stringCount = C._ts_query_string_count(address);\n    const captureCount = C._ts_query_capture_count(address);\n    const patternCount = C._ts_query_pattern_count(address);\n    const captureNames = new Array(captureCount);\n    const captureQuantifiers = new Array(patternCount);\n    const stringValues = new Array(stringCount);\n    for (let i2 = 0; i2 < captureCount; i2++) {\n      const nameAddress = C._ts_query_capture_name_for_id(\n        address,\n        i2,\n        TRANSFER_BUFFER\n      );\n      const nameLength = C.getValue(TRANSFER_BUFFER, \"i32\");\n      captureNames[i2] = C.UTF8ToString(nameAddress, nameLength);\n    }\n    for (let i2 = 0; i2 < patternCount; i2++) {\n      const captureQuantifiersArray = new Array(captureCount);\n      for (let j = 0; j < captureCount; j++) {\n        const quantifier = C._ts_query_capture_quantifier_for_id(address, i2, j);\n        captureQuantifiersArray[j] = quantifier;\n      }\n      captureQuantifiers[i2] = captureQuantifiersArray;\n    }\n    for (let i2 = 0; i2 < stringCount; i2++) {\n      const valueAddress = C._ts_query_string_value_for_id(\n        address,\n        i2,\n        TRANSFER_BUFFER\n      );\n      const nameLength = C.getValue(TRANSFER_BUFFER, \"i32\");\n      stringValues[i2] = C.UTF8ToString(valueAddress, nameLength);\n    }\n    const setProperties = new Array(patternCount);\n    const assertedProperties = new Array(patternCount);\n    const refutedProperties = new Array(patternCount);\n    const predicates = new Array(patternCount);\n    const textPredicates = new Array(patternCount);\n    for (let i2 = 0; i2 < patternCount; i2++) {\n      const predicatesAddress = C._ts_query_predicates_for_pattern(address, i2, TRANSFER_BUFFER);\n      const stepCount = C.getValue(TRANSFER_BUFFER, \"i32\");\n      predicates[i2] = [];\n      textPredicates[i2] = [];\n      const steps = new Array();\n      let stepAddress = predicatesAddress;\n      for (let j = 0; j < stepCount; j++) {\n        const stepType = C.getValue(stepAddress, \"i32\");\n        stepAddress += SIZE_OF_INT;\n        const stepValueId = C.getValue(stepAddress, \"i32\");\n        stepAddress += SIZE_OF_INT;\n        parsePattern(\n          i2,\n          stepType,\n          stepValueId,\n          captureNames,\n          stringValues,\n          steps,\n          textPredicates,\n          predicates,\n          setProperties,\n          assertedProperties,\n          refutedProperties\n        );\n      }\n      Object.freeze(textPredicates[i2]);\n      Object.freeze(predicates[i2]);\n      Object.freeze(setProperties[i2]);\n      Object.freeze(assertedProperties[i2]);\n      Object.freeze(refutedProperties[i2]);\n    }\n    C._free(sourceAddress);\n    this[0] = address;\n    this.captureNames = captureNames;\n    this.captureQuantifiers = captureQuantifiers;\n    this.textPredicates = textPredicates;\n    this.predicates = predicates;\n    this.setProperties = setProperties;\n    this.assertedProperties = assertedProperties;\n    this.refutedProperties = refutedProperties;\n    this.exceededMatchLimit = false;\n  }\n  /** Delete the query, freeing its resources. */\n  delete() {\n    C._ts_query_delete(this[0]);\n    this[0] = 0;\n  }\n  /**\n   * Iterate over all of the matches in the order that they were found.\n   *\n   * Each match contains the index of the pattern that matched, and a list of\n   * captures. Because multiple patterns can match the same set of nodes,\n   * one match may contain captures that appear *before* some of the\n   * captures from a previous match.\n   *\n   * @param {Node} node - The node to execute the query on.\n   *\n   * @param {QueryOptions} options - Options for query execution.\n   */\n  matches(node, options = {}) {\n    const startPosition = options.startPosition ?? ZERO_POINT;\n    const endPosition = options.endPosition ?? ZERO_POINT;\n    const startIndex = options.startIndex ?? 0;\n    const endIndex = options.endIndex ?? 0;\n    const matchLimit = options.matchLimit ?? 4294967295;\n    const maxStartDepth = options.maxStartDepth ?? 4294967295;\n    const timeoutMicros = options.timeoutMicros ?? 0;\n    const progressCallback = options.progressCallback;\n    if (typeof matchLimit !== \"number\") {\n      throw new Error(\"Arguments must be numbers\");\n    }\n    this.matchLimit = matchLimit;\n    if (endIndex !== 0 && startIndex > endIndex) {\n      throw new Error(\"`startIndex` cannot be greater than `endIndex`\");\n    }\n    if (endPosition !== ZERO_POINT && (startPosition.row > endPosition.row || startPosition.row === endPosition.row && startPosition.column > endPosition.column)) {\n      throw new Error(\"`startPosition` cannot be greater than `endPosition`\");\n    }\n    if (progressCallback) {\n      C.currentQueryProgressCallback = progressCallback;\n    }\n    marshalNode(node);\n    C._ts_query_matches_wasm(\n      this[0],\n      node.tree[0],\n      startPosition.row,\n      startPosition.column,\n      endPosition.row,\n      endPosition.column,\n      startIndex,\n      endIndex,\n      matchLimit,\n      maxStartDepth,\n      timeoutMicros\n    );\n    const rawCount = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const startAddress = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const didExceedMatchLimit = C.getValue(TRANSFER_BUFFER + 2 * SIZE_OF_INT, \"i32\");\n    const result = new Array(rawCount);\n    this.exceededMatchLimit = Boolean(didExceedMatchLimit);\n    let filteredCount = 0;\n    let address = startAddress;\n    for (let i2 = 0; i2 < rawCount; i2++) {\n      const patternIndex = C.getValue(address, \"i32\");\n      address += SIZE_OF_INT;\n      const captureCount = C.getValue(address, \"i32\");\n      address += SIZE_OF_INT;\n      const captures = new Array(captureCount);\n      address = unmarshalCaptures(this, node.tree, address, patternIndex, captures);\n      if (this.textPredicates[patternIndex].every((p) => p(captures))) {\n        result[filteredCount] = { pattern: patternIndex, patternIndex, captures };\n        const setProperties = this.setProperties[patternIndex];\n        result[filteredCount].setProperties = setProperties;\n        const assertedProperties = this.assertedProperties[patternIndex];\n        result[filteredCount].assertedProperties = assertedProperties;\n        const refutedProperties = this.refutedProperties[patternIndex];\n        result[filteredCount].refutedProperties = refutedProperties;\n        filteredCount++;\n      }\n    }\n    result.length = filteredCount;\n    C._free(startAddress);\n    C.currentQueryProgressCallback = null;\n    return result;\n  }\n  /**\n   * Iterate over all of the individual captures in the order that they\n   * appear.\n   *\n   * This is useful if you don't care about which pattern matched, and just\n   * want a single, ordered sequence of captures.\n   *\n   * @param {Node} node - The node to execute the query on.\n   *\n   * @param {QueryOptions} options - Options for query execution.\n   */\n  captures(node, options = {}) {\n    const startPosition = options.startPosition ?? ZERO_POINT;\n    const endPosition = options.endPosition ?? ZERO_POINT;\n    const startIndex = options.startIndex ?? 0;\n    const endIndex = options.endIndex ?? 0;\n    const matchLimit = options.matchLimit ?? 4294967295;\n    const maxStartDepth = options.maxStartDepth ?? 4294967295;\n    const timeoutMicros = options.timeoutMicros ?? 0;\n    const progressCallback = options.progressCallback;\n    if (typeof matchLimit !== \"number\") {\n      throw new Error(\"Arguments must be numbers\");\n    }\n    this.matchLimit = matchLimit;\n    if (endIndex !== 0 && startIndex > endIndex) {\n      throw new Error(\"`startIndex` cannot be greater than `endIndex`\");\n    }\n    if (endPosition !== ZERO_POINT && (startPosition.row > endPosition.row || startPosition.row === endPosition.row && startPosition.column > endPosition.column)) {\n      throw new Error(\"`startPosition` cannot be greater than `endPosition`\");\n    }\n    if (progressCallback) {\n      C.currentQueryProgressCallback = progressCallback;\n    }\n    marshalNode(node);\n    C._ts_query_captures_wasm(\n      this[0],\n      node.tree[0],\n      startPosition.row,\n      startPosition.column,\n      endPosition.row,\n      endPosition.column,\n      startIndex,\n      endIndex,\n      matchLimit,\n      maxStartDepth,\n      timeoutMicros\n    );\n    const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const startAddress = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const didExceedMatchLimit = C.getValue(TRANSFER_BUFFER + 2 * SIZE_OF_INT, \"i32\");\n    const result = new Array();\n    this.exceededMatchLimit = Boolean(didExceedMatchLimit);\n    const captures = new Array();\n    let address = startAddress;\n    for (let i2 = 0; i2 < count; i2++) {\n      const patternIndex = C.getValue(address, \"i32\");\n      address += SIZE_OF_INT;\n      const captureCount = C.getValue(address, \"i32\");\n      address += SIZE_OF_INT;\n      const captureIndex = C.getValue(address, \"i32\");\n      address += SIZE_OF_INT;\n      captures.length = captureCount;\n      address = unmarshalCaptures(this, node.tree, address, patternIndex, captures);\n      if (this.textPredicates[patternIndex].every((p) => p(captures))) {\n        const capture = captures[captureIndex];\n        const setProperties = this.setProperties[patternIndex];\n        capture.setProperties = setProperties;\n        const assertedProperties = this.assertedProperties[patternIndex];\n        capture.assertedProperties = assertedProperties;\n        const refutedProperties = this.refutedProperties[patternIndex];\n        capture.refutedProperties = refutedProperties;\n        result.push(capture);\n      }\n    }\n    C._free(startAddress);\n    C.currentQueryProgressCallback = null;\n    return result;\n  }\n  /** Get the predicates for a given pattern. */\n  predicatesForPattern(patternIndex) {\n    return this.predicates[patternIndex];\n  }\n  /**\n   * Disable a certain capture within a query.\n   *\n   * This prevents the capture from being returned in matches, and also\n   * avoids any resource usage associated with recording the capture.\n   */\n  disableCapture(captureName) {\n    const captureNameLength = C.lengthBytesUTF8(captureName);\n    const captureNameAddress = C._malloc(captureNameLength + 1);\n    C.stringToUTF8(captureName, captureNameAddress, captureNameLength + 1);\n    C._ts_query_disable_capture(this[0], captureNameAddress, captureNameLength);\n    C._free(captureNameAddress);\n  }\n  /**\n   * Disable a certain pattern within a query.\n   *\n   * This prevents the pattern from matching, and also avoids any resource\n   * usage associated with the pattern. This throws an error if the pattern\n   * index is out of bounds.\n   */\n  disablePattern(patternIndex) {\n    if (patternIndex >= this.predicates.length) {\n      throw new Error(\n        `Pattern index is ${patternIndex} but the pattern count is ${this.predicates.length}`\n      );\n    }\n    C._ts_query_disable_pattern(this[0], patternIndex);\n  }\n  /**\n   * Check if, on its last execution, this cursor exceeded its maximum number\n   * of in-progress matches.\n   */\n  didExceedMatchLimit() {\n    return this.exceededMatchLimit;\n  }\n  /** Get the byte offset where the given pattern starts in the query's source. */\n  startIndexForPattern(patternIndex) {\n    if (patternIndex >= this.predicates.length) {\n      throw new Error(\n        `Pattern index is ${patternIndex} but the pattern count is ${this.predicates.length}`\n      );\n    }\n    return C._ts_query_start_byte_for_pattern(this[0], patternIndex);\n  }\n  /** Get the byte offset where the given pattern ends in the query's source. */\n  endIndexForPattern(patternIndex) {\n    if (patternIndex >= this.predicates.length) {\n      throw new Error(\n        `Pattern index is ${patternIndex} but the pattern count is ${this.predicates.length}`\n      );\n    }\n    return C._ts_query_end_byte_for_pattern(this[0], patternIndex);\n  }\n  /** Get the number of patterns in the query. */\n  patternCount() {\n    return C._ts_query_pattern_count(this[0]);\n  }\n  /** Get the index for a given capture name. */\n  captureIndexForName(captureName) {\n    return this.captureNames.indexOf(captureName);\n  }\n  /** Check if a given pattern within a query has a single root node. */\n  isPatternRooted(patternIndex) {\n    return C._ts_query_is_pattern_rooted(this[0], patternIndex) === 1;\n  }\n  /** Check if a given pattern within a query has a single root node. */\n  isPatternNonLocal(patternIndex) {\n    return C._ts_query_is_pattern_non_local(this[0], patternIndex) === 1;\n  }\n  /**\n   * Check if a given step in a query is 'definite'.\n   *\n   * A query step is 'definite' if its parent pattern will be guaranteed to\n   * match successfully once it reaches the step.\n   */\n  isPatternGuaranteedAtStep(byteIndex) {\n    return C._ts_query_is_pattern_guaranteed_at_step(this[0], byteIndex) === 1;\n  }\n};\n\n// src/language.ts\nvar LANGUAGE_FUNCTION_REGEX = /^tree_sitter_\\w+$/;\nvar Language = class _Language {\n  static {\n    __name(this, \"Language\");\n  }\n  /** @internal */\n  [0] = 0;\n  // Internal handle for WASM\n  /**\n   * A list of all node types in the language. The index of each type in this\n   * array is its node type id.\n   */\n  types;\n  /**\n   * A list of all field names in the language. The index of each field name in\n   * this array is its field id.\n   */\n  fields;\n  /** @internal */\n  constructor(internal, address) {\n    assertInternal(internal);\n    this[0] = address;\n    this.types = new Array(C._ts_language_symbol_count(this[0]));\n    for (let i2 = 0, n = this.types.length; i2 < n; i2++) {\n      if (C._ts_language_symbol_type(this[0], i2) < 2) {\n        this.types[i2] = C.UTF8ToString(C._ts_language_symbol_name(this[0], i2));\n      }\n    }\n    this.fields = new Array(C._ts_language_field_count(this[0]) + 1);\n    for (let i2 = 0, n = this.fields.length; i2 < n; i2++) {\n      const fieldName = C._ts_language_field_name_for_id(this[0], i2);\n      if (fieldName !== 0) {\n        this.fields[i2] = C.UTF8ToString(fieldName);\n      } else {\n        this.fields[i2] = null;\n      }\n    }\n  }\n  /**\n   * Gets the name of the language.\n   */\n  get name() {\n    const ptr = C._ts_language_name(this[0]);\n    if (ptr === 0) return null;\n    return C.UTF8ToString(ptr);\n  }\n  /**\n   * @deprecated since version 0.25.0, use {@link Language#abiVersion} instead\n   * Gets the version of the language.\n   */\n  get version() {\n    return C._ts_language_version(this[0]);\n  }\n  /**\n   * Gets the ABI version of the language.\n   */\n  get abiVersion() {\n    return C._ts_language_abi_version(this[0]);\n  }\n  /**\n  * Get the metadata for this language. This information is generated by the\n  * CLI, and relies on the language author providing the correct metadata in\n  * the language's `tree-sitter.json` file.\n  */\n  get metadata() {\n    C._ts_language_metadata(this[0]);\n    const length = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const address = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    if (length === 0) return null;\n    return unmarshalLanguageMetadata(address);\n  }\n  /**\n   * Gets the number of fields in the language.\n   */\n  get fieldCount() {\n    return this.fields.length - 1;\n  }\n  /**\n   * Gets the number of states in the language.\n   */\n  get stateCount() {\n    return C._ts_language_state_count(this[0]);\n  }\n  /**\n   * Get the field id for a field name.\n   */\n  fieldIdForName(fieldName) {\n    const result = this.fields.indexOf(fieldName);\n    return result !== -1 ? result : null;\n  }\n  /**\n   * Get the field name for a field id.\n   */\n  fieldNameForId(fieldId) {\n    return this.fields[fieldId] ?? null;\n  }\n  /**\n   * Get the node type id for a node type name.\n   */\n  idForNodeType(type, named) {\n    const typeLength = C.lengthBytesUTF8(type);\n    const typeAddress = C._malloc(typeLength + 1);\n    C.stringToUTF8(type, typeAddress, typeLength + 1);\n    const result = C._ts_language_symbol_for_name(this[0], typeAddress, typeLength, named ? 1 : 0);\n    C._free(typeAddress);\n    return result || null;\n  }\n  /**\n   * Gets the number of node types in the language.\n   */\n  get nodeTypeCount() {\n    return C._ts_language_symbol_count(this[0]);\n  }\n  /**\n   * Get the node type name for a node type id.\n   */\n  nodeTypeForId(typeId) {\n    const name2 = C._ts_language_symbol_name(this[0], typeId);\n    return name2 ? C.UTF8ToString(name2) : null;\n  }\n  /**\n   * Check if a node type is named.\n   *\n   * @see {@link https://tree-sitter.github.io/tree-sitter/using-parsers/2-basic-parsing.html#named-vs-anonymous-nodes}\n   */\n  nodeTypeIsNamed(typeId) {\n    return C._ts_language_type_is_named_wasm(this[0], typeId) ? true : false;\n  }\n  /**\n   * Check if a node type is visible.\n   */\n  nodeTypeIsVisible(typeId) {\n    return C._ts_language_type_is_visible_wasm(this[0], typeId) ? true : false;\n  }\n  /**\n   * Get the supertypes ids of this language.\n   *\n   * @see {@link https://tree-sitter.github.io/tree-sitter/using-parsers/6-static-node-types.html?highlight=supertype#supertype-nodes}\n   */\n  get supertypes() {\n    C._ts_language_supertypes_wasm(this[0]);\n    const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const buffer = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const result = new Array(count);\n    if (count > 0) {\n      let address = buffer;\n      for (let i2 = 0; i2 < count; i2++) {\n        result[i2] = C.getValue(address, \"i16\");\n        address += SIZE_OF_SHORT;\n      }\n    }\n    return result;\n  }\n  /**\n   * Get the subtype ids for a given supertype node id.\n   */\n  subtypes(supertype) {\n    C._ts_language_subtypes_wasm(this[0], supertype);\n    const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const buffer = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const result = new Array(count);\n    if (count > 0) {\n      let address = buffer;\n      for (let i2 = 0; i2 < count; i2++) {\n        result[i2] = C.getValue(address, \"i16\");\n        address += SIZE_OF_SHORT;\n      }\n    }\n    return result;\n  }\n  /**\n   * Get the next state id for a given state id and node type id.\n   */\n  nextState(stateId, typeId) {\n    return C._ts_language_next_state(this[0], stateId, typeId);\n  }\n  /**\n   * Create a new lookahead iterator for this language and parse state.\n   *\n   * This returns `null` if state is invalid for this language.\n   *\n   * Iterating {@link LookaheadIterator} will yield valid symbols in the given\n   * parse state. Newly created lookahead iterators will return the `ERROR`\n   * symbol from {@link LookaheadIterator#currentType}.\n   *\n   * Lookahead iterators can be useful for generating suggestions and improving\n   * syntax error diagnostics. To get symbols valid in an `ERROR` node, use the\n   * lookahead iterator on its first leaf node state. For `MISSING` nodes, a\n   * lookahead iterator created on the previous non-extra leaf node may be\n   * appropriate.\n   */\n  lookaheadIterator(stateId) {\n    const address = C._ts_lookahead_iterator_new(this[0], stateId);\n    if (address) return new LookaheadIterator(INTERNAL, address, this);\n    return null;\n  }\n  /**\n   * @deprecated since version 0.25.0, call `new` on a {@link Query} instead\n   *\n   * Create a new query from a string containing one or more S-expression\n   * patterns.\n   *\n   * The query is associated with a particular language, and can only be run\n   * on syntax nodes parsed with that language. References to Queries can be\n   * shared between multiple threads.\n   *\n   * @link {@see https://tree-sitter.github.io/tree-sitter/using-parsers/queries}\n   */\n  query(source) {\n    console.warn(\"Language.query is deprecated. Use new Query(language, source) instead.\");\n    return new Query(this, source);\n  }\n  /**\n   * Load a language from a WebAssembly module.\n   * The module can be provided as a path to a file or as a buffer.\n   */\n  static async load(input) {\n    let bytes;\n    if (input instanceof Uint8Array) {\n      bytes = Promise.resolve(input);\n    } else {\n      if (globalThis.process?.versions.node) {\n        const fs2 = require(\"fs/promises\");\n        bytes = fs2.readFile(input);\n      } else {\n        bytes = fetch(input).then((response) => response.arrayBuffer().then((buffer) => {\n          if (response.ok) {\n            return new Uint8Array(buffer);\n          } else {\n            const body2 = new TextDecoder(\"utf-8\").decode(buffer);\n            throw new Error(`Language.load failed with status ${response.status}.\n\n${body2}`);\n          }\n        }));\n      }\n    }\n    const mod = await C.loadWebAssemblyModule(await bytes, { loadAsync: true });\n    const symbolNames = Object.keys(mod);\n    const functionName = symbolNames.find((key) => LANGUAGE_FUNCTION_REGEX.test(key) && !key.includes(\"external_scanner_\"));\n    if (!functionName) {\n      console.log(`Couldn't find language function in WASM file. Symbols:\n${JSON.stringify(symbolNames, null, 2)}`);\n      throw new Error(\"Language.load failed: no language function found in WASM file\");\n    }\n    const languageAddress = mod[functionName]();\n    return new _Language(INTERNAL, languageAddress);\n  }\n};\n\n// src/bindings.ts\nvar import_tree_sitter = __toESM(require_tree_sitter(), 1);\nvar Module2 = null;\nasync function initializeBinding(moduleOptions) {\n  if (!Module2) {\n    Module2 = await (0, import_tree_sitter.default)(moduleOptions);\n  }\n  return Module2;\n}\n__name(initializeBinding, \"initializeBinding\");\nfunction checkModule() {\n  return !!Module2;\n}\n__name(checkModule, \"checkModule\");\n\n// src/parser.ts\nvar TRANSFER_BUFFER;\nvar LANGUAGE_VERSION;\nvar MIN_COMPATIBLE_VERSION;\nvar Parser = class {\n  static {\n    __name(this, \"Parser\");\n  }\n  /** @internal */\n  [0] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  [1] = 0;\n  // Internal handle for WASM\n  /** @internal */\n  logCallback = null;\n  /** The parser's current language. */\n  language = null;\n  /**\n   * This must always be called before creating a Parser.\n   *\n   * You can optionally pass in options to configure the WASM module, the most common\n   * one being `locateFile` to help the module find the `.wasm` file.\n   */\n  static async init(moduleOptions) {\n    setModule(await initializeBinding(moduleOptions));\n    TRANSFER_BUFFER = C._ts_init();\n    LANGUAGE_VERSION = C.getValue(TRANSFER_BUFFER, \"i32\");\n    MIN_COMPATIBLE_VERSION = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n  }\n  /**\n   * Create a new parser.\n   */\n  constructor() {\n    this.initialize();\n  }\n  /** @internal */\n  initialize() {\n    if (!checkModule()) {\n      throw new Error(\"cannot construct a Parser before calling `init()`\");\n    }\n    C._ts_parser_new_wasm();\n    this[0] = C.getValue(TRANSFER_BUFFER, \"i32\");\n    this[1] = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n  }\n  /** Delete the parser, freeing its resources. */\n  delete() {\n    C._ts_parser_delete(this[0]);\n    C._free(this[1]);\n    this[0] = 0;\n    this[1] = 0;\n  }\n  /**\n   * Set the language that the parser should use for parsing.\n   *\n   * If the language was not successfully assigned, an error will be thrown.\n   * This happens if the language was generated with an incompatible\n   * version of the Tree-sitter CLI. Check the language's version using\n   * {@link Language#version} and compare it to this library's\n   * {@link LANGUAGE_VERSION} and {@link MIN_COMPATIBLE_VERSION} constants.\n   */\n  setLanguage(language) {\n    let address;\n    if (!language) {\n      address = 0;\n      this.language = null;\n    } else if (language.constructor === Language) {\n      address = language[0];\n      const version = C._ts_language_version(address);\n      if (version < MIN_COMPATIBLE_VERSION || LANGUAGE_VERSION < version) {\n        throw new Error(\n          `Incompatible language version ${version}. Compatibility range ${MIN_COMPATIBLE_VERSION} through ${LANGUAGE_VERSION}.`\n        );\n      }\n      this.language = language;\n    } else {\n      throw new Error(\"Argument must be a Language\");\n    }\n    C._ts_parser_set_language(this[0], address);\n    return this;\n  }\n  /**\n   * Parse a slice of UTF8 text.\n   *\n   * @param {string | ParseCallback} callback - The UTF8-encoded text to parse or a callback function.\n   *\n   * @param {Tree | null} [oldTree] - A previous syntax tree parsed from the same document. If the text of the\n   *   document has changed since `oldTree` was created, then you must edit `oldTree` to match\n   *   the new text using {@link Tree#edit}.\n   *\n   * @param {ParseOptions} [options] - Options for parsing the text.\n   *  This can be used to set the included ranges, or a progress callback.\n   *\n   * @returns {Tree | null} A {@link Tree} if parsing succeeded, or `null` if:\n   *  - The parser has not yet had a language assigned with {@link Parser#setLanguage}.\n   *  - The progress callback returned true.\n   */\n  parse(callback, oldTree, options) {\n    if (typeof callback === \"string\") {\n      C.currentParseCallback = (index) => callback.slice(index);\n    } else if (typeof callback === \"function\") {\n      C.currentParseCallback = callback;\n    } else {\n      throw new Error(\"Argument must be a string or a function\");\n    }\n    if (options?.progressCallback) {\n      C.currentProgressCallback = options.progressCallback;\n    } else {\n      C.currentProgressCallback = null;\n    }\n    if (this.logCallback) {\n      C.currentLogCallback = this.logCallback;\n      C._ts_parser_enable_logger_wasm(this[0], 1);\n    } else {\n      C.currentLogCallback = null;\n      C._ts_parser_enable_logger_wasm(this[0], 0);\n    }\n    let rangeCount = 0;\n    let rangeAddress = 0;\n    if (options?.includedRanges) {\n      rangeCount = options.includedRanges.length;\n      rangeAddress = C._calloc(rangeCount, SIZE_OF_RANGE);\n      let address = rangeAddress;\n      for (let i2 = 0; i2 < rangeCount; i2++) {\n        marshalRange(address, options.includedRanges[i2]);\n        address += SIZE_OF_RANGE;\n      }\n    }\n    const treeAddress = C._ts_parser_parse_wasm(\n      this[0],\n      this[1],\n      oldTree ? oldTree[0] : 0,\n      rangeAddress,\n      rangeCount\n    );\n    if (!treeAddress) {\n      C.currentParseCallback = null;\n      C.currentLogCallback = null;\n      C.currentProgressCallback = null;\n      return null;\n    }\n    if (!this.language) {\n      throw new Error(\"Parser must have a language to parse\");\n    }\n    const result = new Tree(INTERNAL, treeAddress, this.language, C.currentParseCallback);\n    C.currentParseCallback = null;\n    C.currentLogCallback = null;\n    C.currentProgressCallback = null;\n    return result;\n  }\n  /**\n   * Instruct the parser to start the next parse from the beginning.\n   *\n   * If the parser previously failed because of a timeout, cancellation,\n   * or callback, then by default, it will resume where it left off on the\n   * next call to {@link Parser#parse} or other parsing functions.\n   * If you don't want to resume, and instead intend to use this parser to\n   * parse some other document, you must call `reset` first.\n   */\n  reset() {\n    C._ts_parser_reset(this[0]);\n  }\n  /** Get the ranges of text that the parser will include when parsing. */\n  getIncludedRanges() {\n    C._ts_parser_included_ranges_wasm(this[0]);\n    const count = C.getValue(TRANSFER_BUFFER, \"i32\");\n    const buffer = C.getValue(TRANSFER_BUFFER + SIZE_OF_INT, \"i32\");\n    const result = new Array(count);\n    if (count > 0) {\n      let address = buffer;\n      for (let i2 = 0; i2 < count; i2++) {\n        result[i2] = unmarshalRange(address);\n        address += SIZE_OF_RANGE;\n      }\n      C._free(buffer);\n    }\n    return result;\n  }\n  /**\n   * @deprecated since version 0.25.0, prefer passing a progress callback to {@link Parser#parse}\n   *\n   * Get the duration in microseconds that parsing is allowed to take.\n   *\n   * This is set via {@link Parser#setTimeoutMicros}.\n   */\n  getTimeoutMicros() {\n    return C._ts_parser_timeout_micros(this[0]);\n  }\n  /**\n   * @deprecated since version 0.25.0, prefer passing a progress callback to {@link Parser#parse}\n   *\n   * Set the maximum duration in microseconds that parsing should be allowed\n   * to take before halting.\n   *\n   * If parsing takes longer than this, it will halt early, returning `null`.\n   * See {@link Parser#parse} for more information.\n   */\n  setTimeoutMicros(timeout) {\n    C._ts_parser_set_timeout_micros(this[0], 0, timeout);\n  }\n  /** Set the logging callback that a parser should use during parsing. */\n  setLogger(callback) {\n    if (!callback) {\n      this.logCallback = null;\n    } else if (typeof callback !== \"function\") {\n      throw new Error(\"Logger callback must be a function\");\n    } else {\n      this.logCallback = callback;\n    }\n    return this;\n  }\n  /** Get the parser's current logger. */\n  getLogger() {\n    return this.logCallback;\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  CaptureQuantifier,\n  LANGUAGE_VERSION,\n  Language,\n  LookaheadIterator,\n  MIN_COMPATIBLE_VERSION,\n  Node,\n  Parser,\n  Query,\n  Tree,\n  TreeCursor\n});\n//# sourceMappingURL=tree-sitter.cjs.map\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else {\n        return left instanceof right;\n    }\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _type_of(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar __typeError = function(msg) {\n    throw TypeError(msg);\n};\nvar __accessCheck = function(obj, member, msg) {\n    return member.has(obj) || __typeError(\"Cannot \" + msg);\n};\nvar __privateGet = function(obj, member, getter) {\n    return __accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = function(obj, member, value) {\n    return member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : _instanceof(member, WeakSet) ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = function(obj, member, value, setter) {\n    return __accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value;\n};\n// src/index.ts\nvar to_string = function(obj) {\n    return Object.prototype.toString.call(obj);\n};\nvar is_typed_array = function(value) {\n    return ArrayBuffer.isView(value) && !_instanceof(value, DataView);\n};\nvar is_date = function(obj) {\n    return to_string(obj) === \"[object Date]\";\n};\nvar is_regexp = function(obj) {\n    return to_string(obj) === \"[object RegExp]\";\n};\nvar is_error = function(obj) {\n    return to_string(obj) === \"[object Error]\";\n};\nvar is_boolean = function(obj) {\n    return to_string(obj) === \"[object Boolean]\";\n};\nvar is_number = function(obj) {\n    return to_string(obj) === \"[object Number]\";\n};\nvar is_string = function(obj) {\n    return to_string(obj) === \"[object String]\";\n};\nvar is_array = Array.isArray;\nvar gopd = Object.getOwnPropertyDescriptor;\nvar is_property_enumerable = Object.prototype.propertyIsEnumerable;\nvar get_own_property_symbols = Object.getOwnPropertySymbols;\nvar has_own_property = Object.prototype.hasOwnProperty;\nfunction own_enumerable_keys(obj) {\n    var res = Object.keys(obj);\n    var symbols = get_own_property_symbols(obj);\n    for(var i = 0; i < symbols.length; i++){\n        if (is_property_enumerable.call(obj, symbols[i])) {\n            res.push(symbols[i]);\n        }\n    }\n    return res;\n}\nfunction is_writable(object, key) {\n    var _gopd;\n    return !((_gopd = gopd(object, key)) === null || _gopd === void 0 ? void 0 : _gopd.writable);\n}\nfunction copy(src, options) {\n    if ((typeof src === \"undefined\" ? \"undefined\" : _type_of(src)) === \"object\" && src !== null) {\n        var dst;\n        if (is_array(src)) {\n            dst = [];\n        } else if (is_date(src)) {\n            dst = new Date(src.getTime ? src.getTime() : src);\n        } else if (is_regexp(src)) {\n            dst = new RegExp(src);\n        } else if (is_error(src)) {\n            dst = {\n                message: src.message\n            };\n        } else if (is_boolean(src) || is_number(src) || is_string(src)) {\n            dst = Object(src);\n        } else if (is_typed_array(src)) {\n            return src.slice();\n        } else {\n            dst = Object.create(Object.getPrototypeOf(src));\n        }\n        var iterator_function = options.includeSymbols ? own_enumerable_keys : Object.keys;\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = iterator_function(src)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var key = _step.value;\n                dst[key] = src[key];\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        return dst;\n    }\n    return src;\n}\nvar empty_null = {\n    includeSymbols: false,\n    immutable: false\n};\nfunction walk(root, cb) {\n    var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : empty_null;\n    var path = [];\n    var parents = [];\n    var alive = true;\n    var iterator_function = options.includeSymbols ? own_enumerable_keys : Object.keys;\n    var immutable = !!options.immutable;\n    return function walker(node_) {\n        var node = immutable ? copy(node_, options) : node_;\n        var modifiers = {};\n        var keep_going = true;\n        var state = {\n            node: node,\n            node_: node_,\n            path: [].concat(path),\n            parent: parents[parents.length - 1],\n            parents: parents,\n            key: path[path.length - 1],\n            isRoot: path.length === 0,\n            level: path.length,\n            circular: void 0,\n            isLeaf: false,\n            notLeaf: true,\n            notRoot: true,\n            isFirst: false,\n            isLast: false,\n            update: function update(x) {\n                var stopHere = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                if (!state.isRoot) {\n                    state.parent.node[state.key] = x;\n                }\n                state.node = x;\n                if (stopHere) {\n                    keep_going = false;\n                }\n            },\n            delete: function _delete(stopHere) {\n                delete state.parent.node[state.key];\n                if (stopHere) {\n                    keep_going = false;\n                }\n            },\n            remove: function remove(stopHere) {\n                if (is_array(state.parent.node)) {\n                    state.parent.node.splice(state.key, 1);\n                } else {\n                    delete state.parent.node[state.key];\n                }\n                if (stopHere) {\n                    keep_going = false;\n                }\n            },\n            keys: null,\n            before: function before(f) {\n                modifiers.before = f;\n            },\n            after: function after(f) {\n                modifiers.after = f;\n            },\n            pre: function pre(f) {\n                modifiers.pre = f;\n            },\n            post: function post(f) {\n                modifiers.post = f;\n            },\n            stop: function stop() {\n                alive = false;\n            },\n            block: function block() {\n                keep_going = false;\n            }\n        };\n        if (!alive) {\n            return state;\n        }\n        function update_state() {\n            if (_type_of(state.node) === \"object\" && state.node !== null) {\n                if (!state.keys || state.node_ !== state.node) {\n                    state.keys = iterator_function(state.node);\n                }\n                state.isLeaf = state.keys.length === 0;\n                for(var i = 0; i < parents.length; i++){\n                    if (parents[i].node_ === node_) {\n                        state.circular = parents[i];\n                        break;\n                    }\n                }\n            } else {\n                state.isLeaf = true;\n                state.keys = null;\n            }\n            state.notLeaf = !state.isLeaf;\n            state.notRoot = !state.isRoot;\n        }\n        update_state();\n        var ret = cb.call(state, state.node);\n        if (ret !== void 0 && state.update) {\n            state.update(ret);\n        }\n        if (modifiers.before) {\n            modifiers.before.call(state, state.node);\n        }\n        if (!keep_going) {\n            return state;\n        }\n        if (_type_of(state.node) === \"object\" && state.node !== null && !state.circular) {\n            parents.push(state);\n            update_state();\n            var _state_keys;\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = Object.entries((_state_keys = state.keys) !== null && _state_keys !== void 0 ? _state_keys : [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var _step_value = _sliced_to_array(_step.value, 2), index = _step_value[0], key = _step_value[1];\n                    var _state_keys1;\n                    path.push(key);\n                    if (modifiers.pre) {\n                        modifiers.pre.call(state, state.node[key], key);\n                    }\n                    var child = walker(state.node[key]);\n                    if (immutable && has_own_property.call(state.node, key) && !is_writable(state.node, key)) {\n                        state.node[key] = child.node;\n                    }\n                    child.isLast = ((_state_keys1 = state.keys) === null || _state_keys1 === void 0 ? void 0 : _state_keys1.length) ? +index === state.keys.length - 1 : false;\n                    child.isFirst = +index === 0;\n                    if (modifiers.post) {\n                        modifiers.post.call(state, child);\n                    }\n                    path.pop();\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            parents.pop();\n        }\n        if (modifiers.after) {\n            modifiers.after.call(state, state.node);\n        }\n        return state;\n    }(root).node;\n}\nvar _value, _options;\nvar Traverse = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Traverse(obj) {\n        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : empty_null;\n        _class_call_check(this, Traverse);\n        // ! Have to keep these public as legacy mode requires them\n        __privateAdd(this, _value);\n        __privateAdd(this, _options);\n        __privateSet(this, _value, obj);\n        __privateSet(this, _options, options);\n    }\n    _create_class(Traverse, [\n        {\n            /**\n   * Get the element at the array `path`.\n   */ key: \"get\",\n            value: function get(paths) {\n                var node = __privateGet(this, _value);\n                for(var i = 0; node && i < paths.length; i++){\n                    var key = paths[i];\n                    if (!has_own_property.call(node, key) || !__privateGet(this, _options).includeSymbols && (typeof key === \"undefined\" ? \"undefined\" : _type_of(key)) === \"symbol\") {\n                        return void 0;\n                    }\n                    node = node[key];\n                }\n                return node;\n            }\n        },\n        {\n            /**\n   * Return whether the element at the array `path` exists.\n   */ key: \"has\",\n            value: function has(paths) {\n                var node = __privateGet(this, _value);\n                for(var i = 0; node && i < paths.length; i++){\n                    var key = paths[i];\n                    if (!has_own_property.call(node, key) || !__privateGet(this, _options).includeSymbols && (typeof key === \"undefined\" ? \"undefined\" : _type_of(key)) === \"symbol\") {\n                        return false;\n                    }\n                    node = node[key];\n                }\n                return true;\n            }\n        },\n        {\n            /**\n   * Set the element at the array `path` to `value`.\n   */ key: \"set\",\n            value: function set(path, value) {\n                var node = __privateGet(this, _value);\n                var i = 0;\n                for(i = 0; i < path.length - 1; i++){\n                    var key = path[i];\n                    if (!has_own_property.call(node, key)) {\n                        node[key] = {};\n                    }\n                    node = node[key];\n                }\n                node[path[i]] = value;\n                return value;\n            }\n        },\n        {\n            /**\n   * Execute `fn` for each node in the object and return a new object with the results of the walk. To update nodes in the result use `this.update(value)`.\n   */ key: \"map\",\n            value: function map(cb) {\n                return walk(__privateGet(this, _value), cb, {\n                    immutable: true,\n                    includeSymbols: !!__privateGet(this, _options).includeSymbols\n                });\n            }\n        },\n        {\n            /**\n   * Execute `fn` for each node in the object but unlike `.map()`, when `this.update()` is called it updates the object in-place.\n   */ key: \"forEach\",\n            value: function forEach(cb) {\n                __privateSet(this, _value, walk(__privateGet(this, _value), cb, __privateGet(this, _options)));\n                return __privateGet(this, _value);\n            }\n        },\n        {\n            /**\n   * For each node in the object, perform a [left-fold](http://en.wikipedia.org/wiki/Fold_(higher-order_function)) with the return value of `fn(acc, node)`.\n   *\n   * If `init` isn't specified, `init` is set to the root object for the first step and the root element is skipped.\n   */ key: \"reduce\",\n            value: function reduce(cb, init) {\n                var skip = arguments.length === 1;\n                var acc = skip ? __privateGet(this, _value) : init;\n                this.forEach(function(x) {\n                    if (!this.isRoot || !skip) {\n                        acc = cb.call(this, acc, x);\n                    }\n                });\n                return acc;\n            }\n        },\n        {\n            /**\n   * Return an `Array` of every possible non-cyclic path in the object.\n   * Paths are `Array`s of string keys.\n   */ key: \"paths\",\n            value: function paths() {\n                var acc = [];\n                this.forEach(function() {\n                    acc.push(this.path);\n                });\n                return acc;\n            }\n        },\n        {\n            /**\n   * Return an `Array` of every node in the object.\n   */ key: \"nodes\",\n            value: function nodes() {\n                var acc = [];\n                this.forEach(function() {\n                    acc.push(this.node);\n                });\n                return acc;\n            }\n        },\n        {\n            /**\n   * Create a deep clone of the object.\n   */ key: \"clone\",\n            value: function clone() {\n                var parents = [];\n                var nodes = [];\n                var options = __privateGet(this, _options);\n                if (is_typed_array(__privateGet(this, _value))) {\n                    return __privateGet(this, _value).slice();\n                }\n                return function clone(src) {\n                    for(var i = 0; i < parents.length; i++){\n                        if (parents[i] === src) {\n                            return nodes[i];\n                        }\n                    }\n                    if ((typeof src === \"undefined\" ? \"undefined\" : _type_of(src)) === \"object\" && src !== null) {\n                        var dst = copy(src, options);\n                        parents.push(src);\n                        nodes.push(dst);\n                        var iteratorFunction = options.includeSymbols ? own_enumerable_keys : Object.keys;\n                        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                        try {\n                            for(var _iterator = iteratorFunction(src)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                                var key = _step.value;\n                                dst[key] = clone(src[key]);\n                            }\n                        } catch (err) {\n                            _didIteratorError = true;\n                            _iteratorError = err;\n                        } finally{\n                            try {\n                                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                                    _iterator.return();\n                                }\n                            } finally{\n                                if (_didIteratorError) {\n                                    throw _iteratorError;\n                                }\n                            }\n                        }\n                        parents.pop();\n                        nodes.pop();\n                        return dst;\n                    }\n                    return src;\n                }(__privateGet(this, _value));\n            }\n        }\n    ]);\n    return Traverse;\n}();\n_value = new WeakMap();\n_options = new WeakMap();\nvar traverse = function(obj, options) {\n    return new Traverse(obj, options);\n};\ntraverse.get = function(obj, paths, options) {\n    return new Traverse(obj, options).get(paths);\n};\ntraverse.set = function(obj, path, value, options) {\n    return new Traverse(obj, options).set(path, value);\n};\ntraverse.has = function(obj, paths, options) {\n    return new Traverse(obj, options).has(paths);\n};\ntraverse.map = function(obj, cb, options) {\n    return new Traverse(obj, options).map(cb);\n};\ntraverse.forEach = function(obj, cb, options) {\n    return new Traverse(obj, options).forEach(cb);\n};\ntraverse.reduce = function(obj, cb, init, options) {\n    return new Traverse(obj, options).reduce(cb, init);\n};\ntraverse.paths = function(obj, options) {\n    return new Traverse(obj, options).paths();\n};\ntraverse.nodes = function(obj, options) {\n    return new Traverse(obj, options).nodes();\n};\ntraverse.clone = function(obj, options) {\n    return new Traverse(obj, options).clone();\n};\nvar src_default = traverse;\n// src/legacy.cts\n\nexport { src_default as default };\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {connection} from \"./connection\"\nimport {DocumentStore, getOffsetFromPosition} from \"./document-store\"\nimport {createTactParser, initParser} from \"./parser\"\nimport {asLspRange, asNullableLspRange, asParserPoint} from \"@server/utils/position\"\nimport {TypeInferer} from \"./TypeInferer\"\nimport {LocalSearchScope, Referent} from \"@server/psi/Referent\"\nimport {index, IndexKey, IndexRoot} from \"./indexes\"\nimport {AsmInstr, CallLike, Expression, NamedNode, Node} from \"@server/psi/Node\"\nimport {Reference, ResolveState, ScopeProcessor} from \"@server/psi/Reference\"\nimport {File} from \"@server/psi/File\"\nimport {CompletionContext} from \"./completion/CompletionContext\"\nimport * as lsp from \"vscode-languageserver\"\nimport {\n    DidChangeWatchedFilesParams,\n    FileChangeType,\n    ParameterInformation,\n    SymbolKind,\n} from \"vscode-languageserver\"\nimport * as docs from \"./documentation/documentation\"\nimport * as inlays from \"./inlays/collect\"\nimport * as foldings from \"./foldings/collect\"\nimport * as semantic from \"./semantic_tokens/collect\"\nimport * as lens from \"./lens/collect\"\nimport * as search from \"./search/implementations\"\nimport * as path from \"node:path\"\nimport {existsSync} from \"node:fs\"\nimport type {ClientOptions} from \"@shared/config-scheme\"\nimport {\n    GetDocumentationAtPositionRequest,\n    GetDocumentationAtPositionResponse,\n    GetTypeAtPositionParams,\n    GetTypeAtPositionRequest,\n    GetTypeAtPositionResponse,\n    SetToolchainVersionNotification,\n    SetToolchainVersionParams,\n} from \"@shared/shared-msgtypes\"\nimport {KeywordsCompletionProvider} from \"./completion/providers/KeywordsCompletionProvider\"\nimport type {CompletionProvider} from \"./completion/CompletionProvider\"\nimport {SelfCompletionProvider} from \"./completion/providers/SelfCompletionProvider\"\nimport {ReturnCompletionProvider} from \"./completion/providers/ReturnCompletionProvider\"\nimport {BaseTy, FieldsOwnerTy, Ty} from \"./types/BaseTy\"\nimport type {PrepareRenameResult} from \"vscode-languageserver-protocol/lib/common/protocol\"\nimport {\n    Constant,\n    Contract,\n    Field,\n    Fun,\n    InitFunction,\n    Message,\n    MessageFunction,\n    Primitive,\n    StorageMembersOwner,\n    Struct,\n    Trait,\n} from \"@server/psi/Decls\"\nimport {ReferenceCompletionProvider} from \"./completion/providers/ReferenceCompletionProvider\"\nimport {OverrideCompletionProvider} from \"./completion/providers/OverrideCompletionProvider\"\nimport {TraitOrContractFieldsCompletionProvider} from \"./completion/providers/TraitOrContractFieldsCompletionProvider\"\nimport {TlbSerializationCompletionProvider} from \"./completion/providers/TlbSerializationCompletionProvider\"\nimport {MessageMethodCompletionProvider} from \"./completion/providers/MessageMethodCompletionProvider\"\nimport {MemberFunctionCompletionProvider} from \"./completion/providers/MemberFunctionCompletionProvider\"\nimport {TopLevelFunctionCompletionProvider} from \"./completion/providers/TopLevelFunctionCompletionProvider\"\nimport {measureTime, parentOfType} from \"@server/psi/utils\"\nimport {Logger} from \"@server/utils/logger\"\nimport {MapTypeCompletionProvider} from \"./completion/providers/MapTypeCompletionProvider\"\nimport {UnusedParameterInspection} from \"./inspections/UnusedParameterInspection\"\nimport {EmptyBlockInspection} from \"./inspections/EmptyBlockInspection\"\nimport {UnusedVariableInspection} from \"./inspections/UnusedVariableInspection\"\nimport {CACHE} from \"./cache\"\nimport {\n    FIFT_PARSED_FILES_CACHE,\n    findFiftFile,\n    findFile,\n    IndexingRoot,\n    IndexingRootKind,\n    PARSED_FILES_CACHE,\n} from \"./indexing-root\"\nimport {StructInitializationInspection} from \"./inspections/StructInitializationInspection\"\nimport {AsmInstructionCompletionProvider} from \"./completion/providers/AsmInstructionCompletionProvider\"\nimport {generateAsmDoc} from \"./documentation/asm_documentation\"\nimport {clearDocumentSettings, getDocumentSettings, TactSettings} from \"@server/utils/settings\"\nimport {ContractDeclCompletionProvider} from \"./completion/providers/ContractDeclCompletionProvider\"\nimport {collectFift} from \"./fift/foldings/collect\"\nimport {collectFift as collectFiftSemanticTokens} from \"./fift/semantic_tokens/collect\"\nimport {FiftReference} from \"@server/fift/psi/FiftReference\"\nimport {collectFift as collectFiftInlays} from \"./fift/inlays/collect\"\nimport {FiftReferent} from \"@server/fift/psi/FiftReferent\"\nimport {generateFiftDocFor} from \"./fift/documentation/documentation\"\nimport {UnusedContractMembersInspection} from \"./inspections/UnusedContractMembersInspection\"\nimport {generateKeywordDoc} from \"@server/documentation/keywords_documentation\"\nimport {UnusedImportInspection} from \"./inspections/UnusedImportInspection\"\nimport {ImportResolver} from \"@server/psi/ImportResolver\"\nimport {SnippetsCompletionProvider} from \"@server/completion/providers/SnippetsCompletionProvider\"\nimport {CompletionResult} from \"@server/completion/WeightedCompletionItem\"\nimport type {DocumentUri, TextEdit} from \"vscode-languageserver-types\"\nimport {MissedFieldInContractInspection} from \"@server/inspections/MissedFieldInContractInspection\"\nimport type {Node as SyntaxNode} from \"web-tree-sitter\"\nimport {TraitOrContractConstantsCompletionProvider} from \"@server/completion/providers/TraitOrContractConstantsCompletionProvider\"\nimport {generateTlBTypeDoc} from \"@server/documentation/tlb_type_documentation\"\nimport {BouncedTypeCompletionProvider} from \"@server/completion/providers/BouncedTypeCompletionProvider\"\nimport {TopLevelCompletionProvider} from \"@server/completion/providers/TopLevelCompletionProvider\"\nimport type {Intention, IntentionArguments, IntentionContext} from \"@server/intentions/Intention\"\nimport {AddExplicitType} from \"@server/intentions/AddExplicitType\"\nimport {AddImport} from \"@server/intentions/AddImport\"\nimport {NotImportedSymbolInspection} from \"@server/inspections/NotImportedSymbolInspection\"\nimport {FillFieldsStructInit, FillRequiredStructInit} from \"@server/intentions/FillFieldsStructInit\"\nimport {generateInitDoc, generateReceiverDoc} from \"@server/documentation/receivers_documentation\"\nimport {AsKeywordCompletionProvider} from \"@server/completion/providers/AsKeywordCompletionProvider\"\nimport {AddFieldInitialization} from \"@server/intentions/AddFieldInitialization\"\nimport {\n    WrapSelectedToRepeat,\n    WrapSelectedToTry,\n    WrapSelectedToTryCatch,\n} from \"@server/intentions/WrapSelected\"\nimport {PostfixCompletionProvider} from \"@server/completion/providers/PostfixCompletionProvider\"\nimport {InvalidToolchainError, setProjectStdlibPath, Toolchain} from \"@server/toolchain/toolchain\"\nimport {ImportPathCompletionProvider} from \"@server/completion/providers/ImportPathCompletionProvider\"\nimport {FileDiff} from \"@server/utils/FileDiff\"\nimport {CompletionItemAdditionalInformation} from \"@server/completion/ReferenceCompletionProcessor\"\nimport {GetterCompletionProvider} from \"@server/completion/providers/GetterCompletionProvider\"\nimport {CompilerInspection} from \"@server/inspections/CompilerInspection\"\nimport {setToolchain, setWorkspaceRoot, toolchain} from \"@server/toolchain\"\nimport {MistiInspection} from \"@server/inspections/MistInspection\"\nimport {DontUseTextReceiversInspection} from \"@server/inspections/DontUseTextReceiversInspection\"\nimport {ReplaceTextReceiverWithBinary} from \"@server/intentions/ReplaceTextReceiverWithBinary\"\nimport {generateExitCodeDocumentation} from \"@server/documentation/exit_code_documentation\"\nimport {RewriteInspection} from \"@server/inspections/RewriteInspection\"\nimport {TypeTlbSerializationCompletionProvider} from \"@server/completion/providers/TypeTlbSerializationCompletionProvider\"\nimport {DontUseDeployableInspection} from \"@server/inspections/DontUseDeployableInspection\"\nimport {createVfs} from \"@server/vfs/vfs\"\n\n/**\n * Whenever LS is initialized.\n *\n * @see initialize\n * @see initializeFallback\n */\nlet initialized = false\n\nlet clientInfo: {name?: string; version?: string} = {name: \"\", version: \"\"}\n\n/**\n * Root folders for project.\n * Used to find files to index.\n */\nlet workspaceFolders: lsp.WorkspaceFolder[] | null = null\n\nconst showErrorMessage = (msg: string): void => {\n    void connection.sendNotification(lsp.ShowMessageNotification.type, {\n        type: lsp.MessageType.Error,\n        message: msg,\n    })\n}\n\nfunction findStdlib(settings: TactSettings, rootDir: string): string | null {\n    if (settings.stdlib.path !== null && settings.stdlib.path.length > 0) {\n        return settings.stdlib.path\n    }\n\n    if (process.env[\"TACT_LS_SKIP_STDLIB_IN_TESTS\"] === \"true\") {\n        return null\n    }\n\n    const searchDirs = [\n        \"node_modules/@tact-lang/compiler/src/stdlib/stdlib\",\n        \"node_modules/@tact-lang/compiler/src/stdlib\",\n        \"node_modules/@tact-lang/compiler/stdlib\",\n        \"node_modules/@tact-lang/compiler/dist/src/stdlib/stdlib\",\n        \"node_modules/@tact-lang/compiler/dist/src/stdlib\",\n        \"node_modules/@tact-lang/compiler/dist/stdlib\",\n        \"src/stdlib/stdlib\", // path in compiler repo\n        \"stdlib\",\n    ]\n\n    const localFolder =\n        searchDirs.find(searchDir => {\n            return existsSync(path.join(rootDir, searchDir))\n        }) ?? null\n\n    if (localFolder === null) {\n        console.error(\n            \"Standard library not found! Searched in:\\n\",\n            searchDirs.map(dir => path.join(rootDir, dir)).join(\"\\n\"),\n        )\n\n        showErrorMessage(\n            \"Tact standard library is missing! Try installing dependencies with `yarn/npm install` or specify `tact.stdlib.path` in settings\",\n        )\n        return null\n    }\n\n    const stdlibPath = path.join(rootDir, localFolder)\n    console.info(`Using Standard library from ${stdlibPath}`)\n    return stdlibPath\n}\n\nfunction findStubs(): string | null {\n    if (process.env[\"TACT_LS_SKIP_STDLIB_IN_TESTS\"] === \"true\") {\n        return null\n    }\n\n    return path.join(__dirname, \"stubs\")\n}\n\nasync function initialize(): Promise<void> {\n    if (!workspaceFolders || workspaceFolders.length === 0 || initialized) {\n        // use fallback later, see `initializeFallback`\n        return\n    }\n    initialized = true\n\n    const reporter = await connection.window.createWorkDoneProgress()\n\n    reporter.begin(\"Tact Language Server\", 0)\n\n    const rootUri = workspaceFolders[0].uri\n    const rootDir = rootUri.slice(7)\n\n    setWorkspaceRoot(rootDir)\n\n    const settings = await getDocumentSettings(rootUri)\n\n    try {\n        setToolchain(\n            settings.toolchain.compilerPath === \"\"\n                ? Toolchain.autoDetect(rootDir)\n                : Toolchain.fromPath(settings.toolchain.compilerPath),\n        )\n        console.info(`using toolchain ${toolchain.toString()}`)\n\n        await connection.sendNotification(SetToolchainVersionNotification, {\n            version: toolchain.version,\n        } satisfies SetToolchainVersionParams)\n    } catch (error) {\n        if (error instanceof InvalidToolchainError) {\n            console.info(`toolchain is invalid ${error.message}`)\n            showErrorMessage(error.message)\n        }\n    }\n\n    const stdlibPath = findStdlib(settings, rootDir)\n    if (stdlibPath !== null) {\n        reporter.report(50, \"Indexing: (1/3) Standard Library\")\n        const stdlibUri = `file://${stdlibPath}`\n        index.withStdlibRoot(new IndexRoot(\"stdlib\", stdlibUri))\n\n        const stdlibRoot = new IndexingRoot(stdlibUri, IndexingRootKind.Stdlib)\n        await stdlibRoot.index()\n    }\n\n    setProjectStdlibPath(stdlibPath)\n\n    reporter.report(55, \"Indexing: (2/3) Stubs\")\n    const stubsPath = findStubs()\n    if (stubsPath !== null) {\n        const stubsUri = `file://${stubsPath}`\n        index.withStubsRoot(new IndexRoot(\"stubs\", stubsUri))\n\n        const stubsRoot = new IndexingRoot(stubsUri, IndexingRootKind.Stdlib)\n        await stubsRoot.index()\n    }\n\n    reporter.report(80, \"Indexing: (3/3) Workspace\")\n    index.withRoots([new IndexRoot(\"workspace\", rootUri)])\n    const workspaceRoot = new IndexingRoot(rootUri, IndexingRootKind.Workspace)\n    await workspaceRoot.index()\n\n    reporter.report(100, \"Ready\")\n\n    // When we are ready, just reload all applied highlighting and hints and clear cache\n    // This way we support fast local resolving and then full resolving after indexing.\n\n    // Only run this in VS Code, as other editors may not handle these requests (like Helix)\n    if (clientInfo.name?.includes(\"Code\") || clientInfo.name?.includes(\"Codium\")) {\n        await connection.sendRequest(lsp.SemanticTokensRefreshRequest.type)\n        await connection.sendRequest(lsp.InlayHintRefreshRequest.type)\n    }\n    CACHE.clear()\n\n    reporter.done()\n}\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nconnection.onInitialized(async () => {\n    await initialize()\n})\n\nfunction findConfigFileDir(startPath: string, fileName: string): string | null {\n    let currentPath = startPath\n\n    // search only at depths up to 20\n    for (let i = 0; i < 20; i++) {\n        const potentialPath = path.join(currentPath, fileName)\n        if (existsSync(potentialPath)) return currentPath\n\n        const parentPath = path.dirname(currentPath)\n        if (parentPath === currentPath) break\n\n        currentPath = parentPath\n    }\n\n    return null\n}\n\n// For some reason some editors (like Neovim) doesn't pass workspace folders to initialization.\n// So we need to find root first and then call initialize.\nasync function initializeFallback(uri: string): Promise<void> {\n    // let's try to initialize with this way\n    const filepath = uri.slice(7)\n    const projectDir = findConfigFileDir(path.dirname(filepath), \"tact.config.json\")\n    if (projectDir === null) {\n        console.info(`project directory not found, using file directory`)\n        const dir = path.dirname(filepath)\n        workspaceFolders = [\n            {\n                uri: `file://${dir}`,\n                name: path.basename(dir),\n            },\n        ]\n        await initialize()\n        return\n    }\n\n    console.info(`found project directory: ${projectDir}`)\n    workspaceFolders = [\n        {\n            uri: `file://${projectDir}`,\n            name: path.basename(projectDir),\n        },\n    ]\n    await initialize()\n}\n\nasync function runInspections(uri: string, file: File): Promise<void> {\n    const inspections = [\n        new UnusedParameterInspection(),\n        new EmptyBlockInspection(),\n        new UnusedVariableInspection(),\n        new StructInitializationInspection(),\n        new UnusedContractMembersInspection(),\n        new UnusedImportInspection(),\n        new MissedFieldInContractInspection(),\n        new NotImportedSymbolInspection(),\n        new DontUseTextReceiversInspection(),\n        new DontUseDeployableInspection(),\n        new RewriteInspection(),\n    ]\n\n    const settings = await getDocumentSettings(uri)\n    const diagnostics: lsp.Diagnostic[] = []\n\n    for (const inspection of inspections) {\n        if (settings.inspections.disabled.includes(inspection.id)) {\n            continue\n        }\n        diagnostics.push(...inspection.inspect(file))\n    }\n\n    const asyncInspections = [\n        ...(settings.linters.compiler.enable ? [new CompilerInspection()] : []),\n        ...(settings.linters.misti.enable ? [new MistiInspection()] : []),\n    ]\n\n    for (const inspection of asyncInspections) {\n        if (settings.inspections.disabled.includes(inspection.id)) {\n            continue\n        }\n\n        const allDiagnostics = diagnostics\n\n        void inspection.inspect(file).then(diagnostics => {\n            allDiagnostics.push(...diagnostics)\n            void connection.sendDiagnostics({uri, diagnostics: allDiagnostics})\n        })\n    }\n\n    await connection.sendDiagnostics({uri, diagnostics})\n}\n\nconnection.onInitialize(async (initParams: lsp.InitializeParams): Promise<lsp.InitializeResult> => {\n    console.info(\"Started new session\")\n    console.info(\"Running in\", initParams.clientInfo?.name)\n    console.info(\"workspaceFolders:\", initParams.workspaceFolders)\n\n    if (initParams.clientInfo) {\n        clientInfo = initParams.clientInfo\n    }\n\n    createVfs(clientInfo.name)\n\n    workspaceFolders = initParams.workspaceFolders ?? []\n    const opts = initParams.initializationOptions as ClientOptions | undefined\n    const treeSitterUri = opts?.treeSitterWasmUri ?? `${__dirname}/tree-sitter.wasm`\n    const tactLangUri = opts?.tactLangWasmUri ?? `${__dirname}/tree-sitter-tact.wasm`\n    const fiftLangUri = opts?.fiftLangWasmUri ?? `${__dirname}/tree-sitter-fift.wasm`\n    await initParser(treeSitterUri, tactLangUri, fiftLangUri)\n\n    const documents = new DocumentStore(connection)\n\n    documents.onDidOpen(async event => {\n        const uri = event.document.uri\n        console.info(\"open:\", uri)\n\n        if (!initialized) {\n            await initializeFallback(uri)\n        }\n\n        const text = event.document.getText()\n        const file = findFile(uri, text)\n        index.addFile(uri, file)\n\n        if (event.document.languageId === \"tact\" || uri.endsWith(\".tact\")) {\n            await runInspections(uri, file)\n        }\n    })\n\n    documents.onDidChangeContent(async event => {\n        if (event.document.version === 1) {\n            return\n        }\n\n        const uri = event.document.uri\n        console.info(\"changed:\", uri)\n\n        if (uri.endsWith(\".fif\")) {\n            FIFT_PARSED_FILES_CACHE.delete(uri)\n            findFiftFile(uri, event.document.getText())\n            return\n        }\n\n        index.fileChanged(uri)\n        const file = findFile(uri, event.document.getText(), true)\n        index.addFile(uri, file, false)\n\n        if (event.document.languageId === \"tact\" || uri.endsWith(\".tact\")) {\n            await runInspections(uri, file)\n        }\n    })\n\n    connection.onDidChangeWatchedFiles((params: DidChangeWatchedFilesParams) => {\n        for (const change of params.changes) {\n            const uri = change.uri\n            if (!uri.endsWith(\".tact\")) continue\n\n            if (change.type === FileChangeType.Created) {\n                console.info(`Find external create of ${uri}`)\n                const file = findFile(uri)\n                index.addFile(uri, file)\n                continue\n            }\n\n            if (!PARSED_FILES_CACHE.has(uri)) {\n                // we don't care about this file\n                continue\n            }\n\n            if (change.type === FileChangeType.Changed) {\n                console.info(`Find external change of ${uri}`)\n                index.fileChanged(uri)\n                const file = findFile(uri, undefined, true)\n                index.addFile(uri, file, false)\n            }\n\n            if (change.type === FileChangeType.Deleted) {\n                console.info(`Find external delete of ${uri}`)\n                index.removeFile(uri)\n            }\n        }\n    })\n\n    connection.onDidChangeConfiguration(() => {\n        clearDocumentSettings()\n\n        void connection.sendRequest(lsp.InlayHintRefreshRequest.type)\n        void connection.sendRequest(lsp.CodeLensRefreshRequest.type)\n    })\n\n    function nodeAtPosition(params: lsp.TextDocumentPositionParams, file: File): SyntaxNode | null {\n        const cursorPosition = asParserPoint(params.position)\n        return file.rootNode.descendantForPosition(cursorPosition)\n    }\n\n    async function provideDocumentation(\n        uri: string,\n        params: lsp.HoverParams,\n    ): Promise<lsp.Hover | null> {\n        if (uri.endsWith(\".fif\")) {\n            const file = findFiftFile(uri)\n            const hoverNode = nodeAtPosition(params, file)\n            if (!hoverNode || hoverNode.type !== \"identifier\") return null\n\n            const doc = generateFiftDocFor(hoverNode, file)\n            if (doc === null) return null\n\n            return {\n                range: asLspRange(hoverNode),\n                contents: {\n                    kind: \"markdown\",\n                    value: doc,\n                },\n            }\n        }\n\n        const file = findFile(params.textDocument.uri)\n        const hoverNode = nodeAtPosition(params, file)\n        if (!hoverNode) return null\n\n        if (hoverNode.type === \"initOf\") {\n            const doc = generateKeywordDoc(\"initOf\")\n            if (doc === null) return null\n\n            return {\n                range: asLspRange(hoverNode),\n                contents: {\n                    kind: \"markdown\",\n                    value: doc,\n                },\n            }\n        }\n\n        if (hoverNode.type === \"tvm_instruction\") {\n            const asmExpression = hoverNode.parent\n            if (!asmExpression) return null\n\n            const instr = new AsmInstr(asmExpression, file)\n            const info = instr.info()\n            if (!info) return null\n\n            const doc = generateAsmDoc(info)\n            if (doc === null) return null\n\n            return {\n                range: asLspRange(hoverNode),\n                contents: {\n                    kind: \"markdown\",\n                    value: doc,\n                },\n            }\n        }\n\n        const parent = hoverNode.parent\n        if (parent?.type === \"tlb_serialization\") {\n            const doc = generateTlBTypeDoc(hoverNode.text)\n            if (doc === null) return null\n\n            return {\n                range: asLspRange(hoverNode),\n                contents: {\n                    kind: \"markdown\",\n                    value: doc,\n                },\n            }\n        }\n\n        if (\n            hoverNode.type === \"receive\" ||\n            hoverNode.type === \"external\" ||\n            hoverNode.type === \"bounced\"\n        ) {\n            const parent = hoverNode.parent\n            if (!parent) return null\n            const func = new MessageFunction(parent, file)\n            const doc = generateReceiverDoc(func)\n            if (doc === null) return null\n\n            return {\n                range: asLspRange(hoverNode),\n                contents: {\n                    kind: \"markdown\",\n                    value: doc,\n                },\n            }\n        }\n\n        if (hoverNode.type === \"init\") {\n            const parent = hoverNode.parent\n            if (!parent) return null\n            const func = new InitFunction(parent, file)\n            const doc = generateInitDoc(func)\n            if (doc === null) return null\n\n            return {\n                range: asLspRange(hoverNode),\n                contents: {\n                    kind: \"markdown\",\n                    value: doc,\n                },\n            }\n        }\n\n        // Hover documentation for 10 in `throwIf(10, cond)\n        if (hoverNode.type === \"integer\" && hoverNode.parent?.type === \"argument\") {\n            const call = hoverNode.parent.parent?.parent\n            if (!call) return null\n            if (call.type !== \"static_call_expression\") return null\n            const name = call.childForFieldName(\"name\")?.text\n            if (!name) return null\n\n            if (\n                ![\n                    \"throw\",\n                    \"throwIf\",\n                    \"throwUnless\",\n                    \"nativeThrow\",\n                    \"nativeThrowIf\",\n                    \"nativeThrowUnless\",\n                ].includes(name)\n            ) {\n                return null\n            }\n\n            const doc = generateExitCodeDocumentation(Number.parseInt(hoverNode.text))\n            if (doc === null) return null\n\n            return {\n                range: asLspRange(hoverNode),\n                contents: {\n                    kind: \"markdown\",\n                    value: doc,\n                },\n            }\n        }\n\n        if (\n            hoverNode.type !== \"identifier\" &&\n            hoverNode.type !== \"type_identifier\" &&\n            hoverNode.type !== \"self\"\n        ) {\n            return null\n        }\n\n        const res = Reference.resolve(NamedNode.create(hoverNode, file))\n        if (res === null) {\n            if (process.env[\"TACT_LS_DEV\"] !== \"true\") {\n                return null\n            }\n\n            return {\n                range: asLspRange(hoverNode),\n                contents: {\n                    kind: \"plaintext\",\n                    value: hoverNode.type,\n                },\n            }\n        }\n\n        const doc = await docs.generateDocFor(res, hoverNode)\n        if (doc === null) return null\n\n        return {\n            range: asLspRange(hoverNode),\n            contents: {\n                kind: \"markdown\",\n                value: doc,\n            },\n        }\n    }\n\n    connection.onRequest(\n        lsp.HoverRequest.type,\n        async (params: lsp.HoverParams): Promise<lsp.Hover | null> => {\n            const uri = params.textDocument.uri\n            return provideDocumentation(uri, params)\n        },\n    )\n\n    connection.onRequest(\n        lsp.DefinitionRequest.type,\n        (params: lsp.DefinitionParams): lsp.Location[] | lsp.LocationLink[] => {\n            const uri = params.textDocument.uri\n\n            if (uri.endsWith(\".fif\")) {\n                const file = findFiftFile(uri)\n                const node = nodeAtPosition(params, file)\n                if (!node || node.type !== \"identifier\") return []\n\n                const definition = FiftReference.resolve(node, file)\n                if (!definition) return []\n\n                return [\n                    {\n                        uri: file.uri,\n                        range: asLspRange(definition),\n                    },\n                ]\n            }\n\n            const file = findFile(uri)\n            const hoverNode = nodeAtPosition(params, file)\n            if (!hoverNode) return []\n\n            if (hoverNode.type === \"string\" && hoverNode.parent?.type === \"import\") {\n                const importedFile = ImportResolver.resolveNode(file, hoverNode)\n                if (!importedFile) return []\n\n                const startOfFile = {\n                    start: {line: 0, character: 0},\n                    end: {line: 0, character: 0},\n                }\n\n                const hoverRange = asLspRange(hoverNode)\n                return [\n                    {\n                        targetUri: `file://${importedFile}`,\n                        targetRange: startOfFile,\n                        targetSelectionRange: startOfFile,\n                        originSelectionRange: {\n                            start: {\n                                line: hoverRange.start.line,\n                                character: hoverRange.start.character + 1,\n                            },\n                            end: {\n                                line: hoverRange.end.line,\n                                character: hoverRange.end.character - 1,\n                            },\n                        },\n                    } as lsp.LocationLink,\n                ]\n            }\n\n            // resolve `initOf Foo()`\n            //          ^^^^^^ this\n            // to `init` function of the contract or contract name\n            if (hoverNode.type === \"initOf\") {\n                const resolved = Reference.resolveInitOf(hoverNode, file)\n                if (!resolved) return []\n\n                return [\n                    {\n                        uri: resolved.file.uri,\n                        range: asLspRange(resolved.node),\n                    },\n                ]\n            }\n\n            if (\n                hoverNode.type !== \"identifier\" &&\n                hoverNode.type !== \"self\" &&\n                hoverNode.type !== \"type_identifier\"\n            ) {\n                return []\n            }\n\n            const element = NamedNode.create(hoverNode, file)\n            const res = Reference.resolve(element)\n            if (res === null) {\n                console.warn(`Cannot find definition for: ${hoverNode.text}`)\n                return []\n            }\n\n            const ident = res.nameIdentifier()\n            if (ident === null) return []\n\n            return [\n                {\n                    uri: res.file.uri,\n                    range: asLspRange(ident),\n                },\n            ]\n        },\n    )\n\n    connection.onRequest(\n        lsp.TypeDefinitionRequest.type,\n        (params: lsp.TypeDefinitionParams): lsp.Definition | lsp.DefinitionLink[] => {\n            const uri = params.textDocument.uri\n            const file = findFile(uri)\n            const hoverNode = nodeAtPosition(params, file)\n            if (!hoverNode) return []\n            if (\n                hoverNode.type !== \"identifier\" &&\n                hoverNode.type !== \"self\" &&\n                hoverNode.type !== \"type_identifier\"\n            ) {\n                return []\n            }\n\n            const type = TypeInferer.inferType(new Expression(hoverNode, file))\n            if (type === null) {\n                console.warn(`Cannot infer type for Go to Type Definition for: ${hoverNode.text}`)\n                return []\n            }\n\n            if (type instanceof BaseTy) {\n                const anchor = type.anchor as NamedNode\n                const name = anchor.nameIdentifier()\n                if (name === null) return []\n                return [\n                    {\n                        uri: anchor.file.uri,\n                        range: asLspRange(name),\n                    },\n                ]\n            }\n\n            return []\n        },\n    )\n\n    connection.onRequest(\n        lsp.CompletionResolveRequest.type,\n        async (item: lsp.CompletionItem): Promise<lsp.CompletionItem> => {\n            if (!item.data) return item\n            const data = item.data as CompletionItemAdditionalInformation\n            if (\n                data.file === undefined ||\n                data.elementFile === undefined ||\n                data.name === undefined\n            ) {\n                return item\n            }\n\n            const settings = await getDocumentSettings(data.file.uri)\n            if (!settings.completion.addImports) return item\n\n            const file = findFile(data.file.uri)\n            const elementFile = findFile(data.elementFile.uri)\n\n            // skip the same file element\n            if (file.uri === elementFile.uri) return item\n            const importPath = elementFile.importPath(file)\n            // already imported\n            if (file.alreadyImport(importPath)) return item\n            // some files like stubs or stdlib imported implicitly\n            if (elementFile.isImportedImplicitly()) return item\n            // guard for multi projects\n            if (index.hasSeveralDeclarations(data.name)) return item\n\n            const positionToInsert = file.positionForNextImport()\n\n            const extraLine = positionToInsert.line === 0 && file.imports().length === 0 ? \"\\n\" : \"\"\n\n            const diff = FileDiff.forFile(elementFile.uri)\n            diff.appendAsPrevLine(positionToInsert.line, `import \"${importPath}\";${extraLine}`)\n\n            return {\n                ...item,\n                additionalTextEdits: diff.toTextEdits(),\n            }\n        },\n    )\n\n    connection.onRequest(\n        lsp.CompletionRequest.type,\n        async (params: lsp.CompletionParams): Promise<lsp.CompletionItem[]> => {\n            const uri = params.textDocument.uri\n            const file = findFile(uri)\n            const content = file.content\n            const parser = createTactParser()\n\n            const offset = getOffsetFromPosition(\n                content,\n                params.position.line,\n                params.position.character + 1,\n            )\n            const start = content.slice(0, offset)\n            const end = content.slice(offset)\n\n            // Let's say we want to get autocompletion in the following code:\n            //\n            //   fun foo(p: Builder) {\n            //      p.\n            //   } // ^ caret here\n            //\n            // Regular parsers, including those that can recover from errors, will not\n            // be able to parse this code well enough for us to recognize this situation.\n            // Some Language Servers try to do this, but they end up with a lot of\n            // incomprehensible and complex code that doesn't work well.\n            //\n            // The approach we use is very simple, instead of parsing the code above,\n            // we transform it into:\n            //\n            //    fun foo(p: Builder) {\n            //       p.dummyIdentifier\n            //    } // ^ caret here\n            //\n            // Which will be parsed without any problems now.\n            //\n            // Now that we have valid code, we can use `Reference.processResolveVariants`\n            // to resolve `DummyIdentifier` into a list of possible variants, which will\n            // become the autocompletion list. See `Reference` class documentation.\n            const newContent = `${start}DummyIdentifier${end}`\n            const tree = parser.parse(newContent)\n            if (!tree) return []\n\n            const cursorPosition = asParserPoint(params.position)\n            const cursorNode = tree.rootNode.descendantForPosition(cursorPosition)\n            if (\n                cursorNode === null ||\n                (cursorNode.type !== \"identifier\" &&\n                    cursorNode.type !== \"type_identifier\" &&\n                    cursorNode.type !== \"string\" &&\n                    cursorNode.type !== \"tvm_instruction\")\n            ) {\n                return []\n            }\n\n            const element = new NamedNode(cursorNode, new File(uri, tree, newContent))\n            const ref = new Reference(element)\n\n            const ctx = new CompletionContext(\n                newContent,\n                element,\n                params.position,\n                params.context?.triggerKind ?? lsp.CompletionTriggerKind.Invoked,\n                await getDocumentSettings(uri),\n            )\n\n            const result = new CompletionResult()\n            const providers: CompletionProvider[] = [\n                new SnippetsCompletionProvider(),\n                new KeywordsCompletionProvider(),\n                new AsKeywordCompletionProvider(),\n                new ImportPathCompletionProvider(),\n                new MapTypeCompletionProvider(),\n                new BouncedTypeCompletionProvider(),\n                new GetterCompletionProvider(),\n                new ContractDeclCompletionProvider(),\n                new TopLevelFunctionCompletionProvider(),\n                new TopLevelCompletionProvider(),\n                new MemberFunctionCompletionProvider(),\n                new MessageMethodCompletionProvider(),\n                new TlbSerializationCompletionProvider(),\n                new OverrideCompletionProvider(),\n                new TraitOrContractFieldsCompletionProvider(),\n                new TraitOrContractConstantsCompletionProvider(),\n                new SelfCompletionProvider(),\n                new ReturnCompletionProvider(),\n                new ReferenceCompletionProvider(ref),\n                new AsmInstructionCompletionProvider(),\n                new PostfixCompletionProvider(),\n                new TypeTlbSerializationCompletionProvider(),\n            ]\n\n            providers.forEach((provider: CompletionProvider) => {\n                if (!provider.isAvailable(ctx)) return\n                provider.addCompletion(ctx, result)\n            })\n\n            return result.sorted()\n        },\n    )\n\n    connection.onRequest(\n        lsp.InlayHintRequest.type,\n        async (params: lsp.InlayHintParams): Promise<lsp.InlayHint[] | null> => {\n            const uri = params.textDocument.uri\n            if (uri.endsWith(\".fif\")) {\n                const file = findFiftFile(uri)\n                const settings = await getDocumentSettings(uri)\n                return collectFiftInlays(file, settings.hints.gasFormat, settings.fift.hints)\n            }\n\n            const file = findFile(uri)\n            const settings = await getDocumentSettings(uri)\n            return inlays.collect(file, settings.hints, settings.gas)\n        },\n    )\n\n    connection.onRequest(\n        lsp.ImplementationRequest.type,\n        (params: lsp.ImplementationParams): lsp.Definition | lsp.LocationLink[] => {\n            const uri = params.textDocument.uri\n            const file = findFile(uri)\n\n            const elementNode = nodeAtPosition(params, file)\n            if (!elementNode) return []\n            if (\n                elementNode.type !== \"identifier\" &&\n                elementNode.type !== \"self\" &&\n                elementNode.type !== \"type_identifier\"\n            ) {\n                return []\n            }\n\n            const element = NamedNode.create(elementNode, file)\n            const res = Reference.resolve(element)\n            if (res === null) return []\n\n            if (res instanceof Trait) {\n                return search.implementations(res).map(impl => ({\n                    uri: impl.file.uri,\n                    range: asNullableLspRange(impl.nameIdentifier()),\n                }))\n            }\n\n            if (res instanceof Fun) {\n                return search.implementationsFun(res).map(impl => ({\n                    uri: impl.file.uri,\n                    range: asNullableLspRange(impl.nameIdentifier()),\n                }))\n            }\n\n            return []\n        },\n    )\n\n    connection.onRequest(lsp.RenameRequest.type, (params: lsp.RenameParams) => {\n        const uri = params.textDocument.uri\n        const file = findFile(uri)\n\n        const renameNode = nodeAtPosition(params, file)\n        if (!renameNode) return null\n\n        const result = new Referent(renameNode, file).findReferences(true, false, false)\n        if (result.length === 0) return null\n\n        const changes: Record<DocumentUri, TextEdit[]> = {}\n\n        result.forEach(node => {\n            const uri = node.file.uri\n            const element = {\n                range: asLspRange(node.node),\n                newText: params.newName,\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            if (changes[uri]) {\n                changes[uri].push(element)\n            } else {\n                changes[uri] = [element]\n            }\n        })\n\n        return {changes}\n    })\n\n    connection.onRequest(\n        lsp.PrepareRenameRequest.type,\n        (params: lsp.PrepareRenameParams): PrepareRenameResult | null => {\n            const uri = params.textDocument.uri\n            const file = findFile(uri)\n\n            const renameNode = nodeAtPosition(params, file)\n            if (!renameNode) return null\n            if (renameNode.type !== \"identifier\" && renameNode.type !== \"type_identifier\") {\n                return null\n            }\n\n            const element = NamedNode.create(renameNode, file)\n            const res = Reference.resolve(element)\n            if (res === null) return null\n\n            if (res.file.fromStdlib || res.file.fromStubs) {\n                showErrorMessage(`Can not rename element from Standard Library`)\n                return null\n            }\n\n            return {\n                range: asLspRange(renameNode),\n                defaultBehavior: true,\n                placeholder: renameNode.text,\n            }\n        },\n    )\n\n    connection.onRequest(\n        lsp.DocumentHighlightRequest.type,\n        (params: lsp.DocumentHighlightParams): lsp.DocumentHighlight[] | null => {\n            const file = findFile(params.textDocument.uri)\n            const highlightNode = nodeAtPosition(params, file)\n            if (!highlightNode) return null\n            if (\n                highlightNode.type !== \"identifier\" &&\n                highlightNode.type !== \"self\" &&\n                highlightNode.type !== \"type_identifier\"\n            ) {\n                return []\n            }\n\n            const result = new Referent(highlightNode, file).findReferences(true, true, true)\n            if (result.length === 0) return null\n\n            const usageKind = (value: Node): lsp.DocumentHighlightKind => {\n                const parent = value.node.parent\n                if (\n                    parent?.type === \"assignment_statement\" ||\n                    parent?.type === \"augmented_assignment_statement\"\n                ) {\n                    if (parent.childForFieldName(\"left\")?.equals(value.node)) {\n                        // left = 10\n                        // ^^^^\n                        return lsp.DocumentHighlightKind.Write\n                    }\n                }\n\n                return lsp.DocumentHighlightKind.Read\n            }\n\n            return result.map(value => ({\n                range: asLspRange(value.node),\n                kind: usageKind(value),\n            }))\n        },\n    )\n\n    connection.onRequest(\n        lsp.ReferencesRequest.type,\n        async (params: lsp.ReferenceParams): Promise<lsp.Location[] | null> => {\n            const uri = params.textDocument.uri\n\n            if (uri.endsWith(\".fif\")) {\n                const file = findFiftFile(uri)\n                const node = nodeAtPosition(params, file)\n                if (!node || node.type !== \"identifier\") return []\n\n                const result = new FiftReferent(node, file).findReferences(false)\n                if (result.length === 0) return null\n\n                return result.map(n => ({\n                    uri: n.file.uri,\n                    range: asLspRange(n.node),\n                }))\n            }\n\n            const file = findFile(uri)\n            const referenceNode = nodeAtPosition(params, file)\n            if (!referenceNode) return null\n\n            if (\n                referenceNode.type !== \"identifier\" &&\n                referenceNode.type !== \"type_identifier\" &&\n                referenceNode.type !== \"init\"\n            ) {\n                return []\n            }\n\n            const result = new Referent(referenceNode, file).findReferences(false)\n            if (result.length === 0) return null\n\n            const settings = await getDocumentSettings(file.uri)\n            if (settings.findUsages.scope === \"workspace\") {\n                // filter out references from stdlib\n                return result\n                    .filter(value => !value.file.fromStdlib && !value.file.fromStubs)\n                    .map(value => ({\n                        uri: value.file.uri,\n                        range: asLspRange(value.node),\n                    }))\n            }\n\n            return result.map(value => ({\n                uri: value.file.uri,\n                range: asLspRange(value.node),\n            }))\n        },\n    )\n\n    const findSignatureHelpTarget = (\n        hoverNode: SyntaxNode,\n        file: File,\n    ): {\n        rawArguments: SyntaxNode[]\n        parametersInfo: lsp.ParameterInformation[]\n        presentation: string\n        isMethod: boolean\n        isStructField: boolean\n        structFieldIndex: number\n    } | null => {\n        const findParameters = (element: NamedNode): Node[] => {\n            if (element instanceof Contract) {\n                const initFunction = element.initFunction()\n                if (initFunction) {\n                    return initFunction.parameters()\n                }\n                return element.parameters()\n            }\n\n            const parameters = element.node.childForFieldName(\"parameters\")\n            if (!parameters) return []\n\n            return parameters.children\n                .filter(param => param?.type === \"parameter\")\n                .filter(param => param !== null)\n                .map(param => new Node(param, element.file))\n        }\n\n        const findSignatureHelpNode = (node: SyntaxNode): SyntaxNode | null => {\n            const targetNodes = [\n                \"static_call_expression\",\n                \"method_call_expression\",\n                \"initOf\",\n                \"instance_expression\",\n                \"instance_argument\",\n                \"instance_argument_list\",\n            ]\n            const callNode = parentOfType(node, ...targetNodes)\n            if (!callNode) return null\n\n            // Foo { some: 10 }\n            //     ^ this\n            const isOpenBrace =\n                callNode.type === \"instance_argument_list\" && callNode.firstChild?.equals(node)\n\n            // Foo { some: 10 }\n            // ^^^ this\n            const isInstanceName =\n                callNode.type === \"instance_expression\" &&\n                callNode.childForFieldName(\"name\")?.equals(node)\n\n            // Search for parent call for the following case\n            // ```\n            // foo(Fo<caret>o { value: 10 })\n            // ```\n            if (isInstanceName || isOpenBrace) {\n                return findSignatureHelpNode(callNode)\n            }\n\n            return callNode\n        }\n\n        const callNode = findSignatureHelpNode(hoverNode)\n        if (!callNode) return null\n\n        if (callNode.type === \"instance_argument_list\" || callNode.type === \"instance_argument\") {\n            let name =\n                callNode.childForFieldName(\"name\") ??\n                (hoverNode.type === \"instance_argument\"\n                    ? hoverNode.firstChild\n                    : hoverNode.previousNamedSibling)\n\n            if (!name) return null\n            if (name.type === \"instance_argument\") {\n                name = name.firstChild\n            }\n            if (!name) return null\n\n            const type = new Expression(name, file).type()\n            if (!type) return null\n\n            const instanceExpression = parentOfType(callNode, \"instance_expression\")\n            if (!instanceExpression) return null\n\n            const instanceName = instanceExpression.childForFieldName(\"name\")\n            if (!instanceName) return null\n\n            const instanceType = new Expression(instanceName, file).type()\n            if (!instanceType) return null\n            if (!(instanceType instanceof FieldsOwnerTy)) return null\n\n            const fields = instanceType.fields()\n            const fieldPresentations = fields.map(\n                field => `${field.name()}: ${field.typeNode()?.node.text ?? \"\"}`,\n            )\n\n            const fieldsInfo = fieldPresentations.map(\n                name =>\n                    ({\n                        label: name,\n                    }) as ParameterInformation,\n            )\n\n            const presentation = instanceType.name() + \"{ \" + fieldPresentations.join(\", \") + \" }\"\n\n            return {\n                rawArguments: [],\n                parametersInfo: fieldsInfo,\n                presentation: presentation,\n                isMethod: false,\n                isStructField: true,\n                structFieldIndex: fields.findIndex(f => f.name() === name.text),\n            }\n        }\n\n        const call = new CallLike(callNode, file)\n\n        const res = Reference.resolve(call.nameNode())\n        if (res === null) return null\n\n        const parameters = findParameters(res)\n        const parametersInfo: lsp.ParameterInformation[] = parameters.map(param => ({\n            label: param.node.text,\n        }))\n        const parametersString = parametersInfo.map(el => el.label).join(\", \")\n\n        const rawArguments = call.rawArguments()\n\n        if (callNode.type === \"initOf\") {\n            return {\n                rawArguments,\n                parametersInfo,\n                presentation: `init(${parametersString})`,\n                isMethod: false,\n                isStructField: false,\n                structFieldIndex: 0,\n            }\n        }\n\n        if (!(res instanceof Fun)) return null\n\n        return {\n            rawArguments,\n            parametersInfo,\n            presentation: `fun ${call.name()}(${parametersString})`,\n            isMethod: callNode.type === \"method_call_expression\" && res.withSelf(),\n            isStructField: false,\n            structFieldIndex: 0,\n        }\n    }\n\n    connection.onRequest(\n        lsp.SignatureHelpRequest.type,\n        (params: lsp.SignatureHelpParams): lsp.SignatureHelp | null => {\n            const file = findFile(params.textDocument.uri)\n\n            const hoverNode = nodeAtPosition(params, file)\n            if (!hoverNode) return null\n\n            const res = findSignatureHelpTarget(hoverNode, file)\n            if (!res) return null\n\n            const {\n                parametersInfo,\n                rawArguments,\n                isMethod,\n                presentation,\n                isStructField,\n                structFieldIndex,\n            } = res\n\n            if (isStructField) {\n                return {\n                    signatures: [\n                        {\n                            label: presentation,\n                            parameters: parametersInfo,\n                            activeParameter: structFieldIndex,\n                        },\n                    ],\n                }\n            }\n\n            // The algorithm below uses the positions of commas and parentheses to findTo find the active parameter, it is enough to find the last comma, which has a position in the line less than the cursor position. In order not to complicate the algorithm, we consider the opening bracket as a kind of comma for the zero element. If the cursor position is greater than the position of any comma, then we consider that this is the last element. the active parameter.\n            //\n            // foo(1000, 2000, 3000)\n            //    ^    ^     ^\n            //    |    |     |______ argsCommas\n            //    |    |____________|\n            //    |_________________|\n            //\n            // To find the active parameter, it is enough to find the last comma, which has a position in\n            // the line less than the cursor position. To simplify the algorithm, we consider the opening\n            // bracket as a kind of comma for the zero element.\n            // If the cursor position is greater than the position of any comma, then we consider that this\n            // is the last parameter.\n            //\n            // TODO: support multiline calls and functions with self\n\n            const argsCommas = rawArguments.filter(\n                value => value.text === \",\" || value.text === \"(\",\n            )\n\n            let currentIndex = 0\n            for (const [i, argComma] of argsCommas.entries()) {\n                if (argComma.endPosition.column > params.position.character) {\n                    // found comma after cursor\n                    break\n                }\n                currentIndex = i\n            }\n\n            if (isMethod) {\n                // skip self\n                currentIndex++\n            }\n\n            return {\n                signatures: [\n                    {\n                        label: presentation,\n                        parameters: parametersInfo,\n                        activeParameter: currentIndex,\n                    },\n                ],\n            }\n        },\n    )\n\n    connection.onRequest(\n        lsp.FoldingRangeRequest.type,\n        (params: lsp.FoldingRangeParams): lsp.FoldingRange[] => {\n            const uri = params.textDocument.uri\n            if (uri.endsWith(\".fif\")) {\n                const file = findFiftFile(uri)\n                return collectFift(file)\n            }\n\n            const file = findFile(uri)\n            return measureTime(\"folding range\", () => foldings.collect(file))\n        },\n    )\n\n    connection.onRequest(\n        lsp.SemanticTokensRequest.type,\n        async (params: lsp.SemanticTokensParams): Promise<lsp.SemanticTokens | null> => {\n            const uri = params.textDocument.uri\n            const settings = await getDocumentSettings(uri)\n\n            if (uri.endsWith(\".fif\")) {\n                const file = findFiftFile(uri)\n                return collectFiftSemanticTokens(file, settings.fift.semanticHighlighting)\n            }\n\n            const file = findFile(uri)\n            return semantic.collect(file, settings.highlighting)\n        },\n    )\n\n    connection.onRequest(\n        lsp.CodeLensRequest.type,\n        async (params: lsp.CodeLensParams): Promise<lsp.CodeLens[]> => {\n            const uri = params.textDocument.uri\n            const file = findFile(uri)\n            const settings = await getDocumentSettings(uri)\n            return lens.collect(file, settings.codeLens)\n        },\n    )\n\n    const intentions: Intention[] = [\n        new AddExplicitType(),\n        new AddImport(),\n        new ReplaceTextReceiverWithBinary(),\n        new FillFieldsStructInit(),\n        new FillRequiredStructInit(),\n        new AddFieldInitialization(),\n        new WrapSelectedToTry(),\n        new WrapSelectedToTryCatch(),\n        new WrapSelectedToRepeat(),\n    ]\n\n    connection.onRequest(\n        lsp.ExecuteCommandRequest.type,\n        async (params: lsp.ExecuteCommandParams) => {\n            if (params.command === \"tact/executeGetScopeProvider\") {\n                const commandParams = params.arguments?.[0] as\n                    | lsp.TextDocumentPositionParams\n                    | undefined\n                if (!commandParams) return \"Invalid parameters\"\n\n                const file = PARSED_FILES_CACHE.get(commandParams.textDocument.uri)\n                if (!file) {\n                    return \"File not found\"\n                }\n\n                const node = nodeAtPosition(commandParams, file)\n                if (!node) {\n                    return \"Node not found\"\n                }\n\n                const referent = new Referent(node, file)\n                const scope = referent.useScope()\n                if (!scope) return \"Scope not found\"\n\n                if (scope instanceof LocalSearchScope) return scope.toString()\n                return \"GlobalSearchScope\"\n            }\n\n            if (!params.arguments || params.arguments.length === 0) return null\n\n            const intention = intentions.find(it => it.id === params.command)\n            if (!intention) return null\n\n            const args = params.arguments[0] as IntentionArguments\n\n            const file = findFile(args.fileUri)\n\n            const ctx: IntentionContext = {\n                file: file,\n                range: args.range,\n                position: args.position,\n                noSelection:\n                    args.range.start.line === args.range.end.line &&\n                    args.range.start.character === args.range.end.character,\n            }\n\n            const edits = intention.invoke(ctx)\n            if (!edits) return null\n\n            await connection.sendRequest(lsp.ApplyWorkspaceEditRequest.method, {\n                label: `Intention \"${intention.name}\"`,\n                edit: edits,\n            } as lsp.ApplyWorkspaceEditParams)\n\n            return null\n        },\n    )\n\n    connection.onRequest(\n        lsp.CodeActionRequest.type,\n        (params: lsp.CodeActionParams): lsp.CodeAction[] | null => {\n            const uri = params.textDocument.uri\n            if (uri.endsWith(\".fif\")) {\n                return null\n            }\n\n            const file = findFile(uri)\n\n            const ctx: IntentionContext = {\n                file: file,\n                range: params.range,\n                position: params.range.start,\n                noSelection:\n                    params.range.start.line === params.range.end.line &&\n                    params.range.start.character === params.range.end.character,\n            }\n\n            const actions: lsp.CodeAction[] = []\n\n            intentions.forEach(intention => {\n                if (!intention.isAvailable(ctx)) return\n\n                actions.push({\n                    title: intention.name,\n                    kind: lsp.CodeActionKind.QuickFix,\n                    command: {\n                        title: intention.name,\n                        command: intention.id,\n                        arguments: [\n                            {\n                                fileUri: file.uri,\n                                range: params.range,\n                                position: params.range.start,\n                            } as IntentionArguments,\n                        ],\n                    },\n                })\n            })\n\n            for (const diagnostic of params.context.diagnostics) {\n                const data = diagnostic.data as undefined | lsp.CodeAction\n                if (data === undefined || !(\"title\" in data) || !(\"edit\" in data)) {\n                    continue\n                }\n\n                actions.push(data)\n            }\n\n            return actions\n        },\n    )\n\n    function getAdjustedNodeForType(node: SyntaxNode): SyntaxNode {\n        const parent = node.parent\n        if (\n            parent?.type === \"method_call_expression\" ||\n            parent?.type === \"static_call_expression\" ||\n            parent?.type === \"instance_expression\"\n        ) {\n            return parent\n        }\n\n        return node\n    }\n\n    function findTypeForNode(node: SyntaxNode, file: File): {ty: Ty; node: SyntaxNode} | null {\n        let nodeForType: SyntaxNode | null = node\n        while (nodeForType) {\n            const ty = TypeInferer.inferType(new Expression(nodeForType, file))\n            if (ty) return {ty, node: nodeForType}\n            nodeForType = nodeForType.parent\n            if (nodeForType?.type.includes(\"statement\")) break\n        }\n\n        return null\n    }\n\n    connection.onRequest(\n        GetTypeAtPositionRequest,\n        (params: GetTypeAtPositionParams): GetTypeAtPositionResponse => {\n            const file = findFile(params.textDocument.uri)\n            const cursorPosition = asParserPoint(params.position)\n\n            const node = file.rootNode.descendantForPosition(cursorPosition)\n            if (!node) return {type: null, range: null}\n\n            const adjustedNode = getAdjustedNodeForType(node)\n\n            const res = findTypeForNode(adjustedNode, file)\n            if (!res) {\n                return {\n                    type: \"void or unknown\",\n                    range: asLspRange(node),\n                }\n            }\n\n            const {ty, node: actualNode} = res\n\n            return {\n                type: ty.qualifiedName(),\n                range: asLspRange(actualNode),\n            }\n        },\n    )\n\n    connection.onRequest(\n        GetDocumentationAtPositionRequest,\n        async (\n            params: GetTypeAtPositionParams,\n        ): Promise<GetDocumentationAtPositionResponse | null> => {\n            const uri = params.textDocument.uri\n            return provideDocumentation(uri, params)\n        },\n    )\n\n    function symbolKind(node: NamedNode): lsp.SymbolKind {\n        if (node instanceof Fun) {\n            return lsp.SymbolKind.Function\n        }\n        if (node instanceof Contract) {\n            return lsp.SymbolKind.Class\n        }\n        if (node instanceof Message) {\n            return lsp.SymbolKind.Struct\n        }\n        if (node instanceof Struct) {\n            return lsp.SymbolKind.Struct\n        }\n        if (node instanceof Trait) {\n            return lsp.SymbolKind.TypeParameter\n        }\n        if (node instanceof Primitive) {\n            return lsp.SymbolKind.Property\n        }\n        if (node instanceof Constant) {\n            return lsp.SymbolKind.Constant\n        }\n        if (node instanceof Field) {\n            return lsp.SymbolKind.Field\n        }\n        return lsp.SymbolKind.Object\n    }\n\n    connection.onRequest(\n        lsp.DocumentSymbolRequest.type,\n        async (params: lsp.DocumentSymbolParams): Promise<lsp.DocumentSymbol[]> => {\n            const uri = params.textDocument.uri\n            const file = findFile(uri)\n\n            const settings = await getDocumentSettings(file.uri)\n\n            const result: lsp.DocumentSymbol[] = []\n\n            function symbolDetail(element: NamedNode | Fun | Field | Constant): string {\n                if (element instanceof Fun) {\n                    return element.signaturePresentation()\n                }\n                if (element instanceof Field) {\n                    const type = element.typeNode()?.node.text ?? \"unknown\"\n                    return `: ${type}`\n                }\n                if (element instanceof Constant) {\n                    const type = element.typeNode()?.node.text ?? \"unknown\"\n                    const value = element.value()?.node.text ?? \"unknown\"\n                    return `: ${type} = ${value}`\n                }\n                return \"\"\n            }\n\n            function createSymbol(element: NamedNode): lsp.DocumentSymbol {\n                const detail = symbolDetail(element)\n                const kind = symbolKind(element)\n                const children = symbolChildren(element)\n\n                return {\n                    name: element.name(),\n                    kind: kind,\n                    range: asLspRange(element.node),\n                    detail: detail,\n                    selectionRange: asNullableLspRange(element.nameIdentifier()),\n                    children: children,\n                }\n            }\n\n            function addMessageFunctions(\n                element: StorageMembersOwner,\n                to: lsp.DocumentSymbol[],\n            ): void {\n                const messageFunctions = element.messageFunctions()\n                messageFunctions.forEach(messageFunction => {\n                    to.push({\n                        name: messageFunction.nameLike(),\n                        range: asLspRange(messageFunction.node),\n                        selectionRange: asNullableLspRange(messageFunction.kindIdentifier()),\n                        kind: SymbolKind.Method,\n                    })\n                })\n            }\n\n            function symbolChildren(element: NamedNode): lsp.DocumentSymbol[] {\n                const children: NamedNode[] = []\n                const additionalChildren: lsp.DocumentSymbol[] = []\n\n                if (element instanceof Struct && settings.documentSymbols.showStructFields) {\n                    children.push(...element.fields())\n                }\n\n                if (element instanceof Message && settings.documentSymbols.showMessageFields) {\n                    children.push(...element.fields())\n                }\n\n                if (element instanceof Contract) {\n                    children.push(\n                        ...element.ownConstants(),\n                        ...element.ownFields(),\n                        ...element.ownMethods(),\n                    )\n\n                    const initFunction = element.initFunction()\n                    if (initFunction) {\n                        additionalChildren.push({\n                            name: initFunction.nameLike(),\n                            range: asNullableLspRange(initFunction.node),\n                            selectionRange: asNullableLspRange(initFunction.initIdentifier()),\n                            kind: SymbolKind.Constructor,\n                        })\n                    }\n\n                    addMessageFunctions(element, additionalChildren)\n                }\n\n                if (element instanceof Trait) {\n                    children.push(\n                        ...element.ownConstants(),\n                        ...element.ownFields(),\n                        ...element.ownMethods(),\n                    )\n\n                    addMessageFunctions(element, additionalChildren)\n                }\n\n                return [...children.map(el => createSymbol(el)), ...additionalChildren]\n            }\n\n            file.imports().forEach(imp => {\n                result.push({\n                    name: imp.text,\n                    range: asLspRange(imp),\n                    selectionRange: asLspRange(imp),\n                    kind: SymbolKind.Module,\n                })\n            })\n\n            file.getFuns().forEach(n => result.push(createSymbol(n)))\n            file.getStructs().forEach(n => result.push(createSymbol(n)))\n            file.getMessages().forEach(n => result.push(createSymbol(n)))\n            file.getTraits().forEach(n => result.push(createSymbol(n)))\n            file.getConstants().forEach(n => result.push(createSymbol(n)))\n            file.getContracts().forEach(n => result.push(createSymbol(n)))\n            file.getPrimitives().forEach(n => result.push(createSymbol(n)))\n\n            return result.sort((a, b) => a.range.start.line - b.range.start.line)\n        },\n    )\n\n    connection.onRequest(\n        lsp.WorkspaceSymbolRequest.type,\n        (_params: lsp.WorkspaceSymbolParams): lsp.WorkspaceSymbol[] => {\n            const result: lsp.WorkspaceSymbol[] = []\n\n            const state = new ResolveState()\n            const proc = new (class implements ScopeProcessor {\n                public execute(node: Node, _state: ResolveState): boolean {\n                    if (!(node instanceof NamedNode)) return true\n                    const nameIdentifier = node.nameIdentifier()\n                    if (!nameIdentifier) return true\n\n                    result.push({\n                        name: node.name(),\n                        containerName: \"\",\n                        kind: symbolKind(node),\n                        location: {\n                            uri: node.file.uri,\n                            range: asLspRange(nameIdentifier),\n                        },\n                    })\n                    return true\n                }\n            })()\n\n            index.processElementsByKey(IndexKey.Contracts, proc, state)\n            index.processElementsByKey(IndexKey.Funs, proc, state)\n            index.processElementsByKey(IndexKey.Messages, proc, state)\n            index.processElementsByKey(IndexKey.Structs, proc, state)\n            index.processElementsByKey(IndexKey.Traits, proc, state)\n            index.processElementsByKey(IndexKey.Primitives, proc, state)\n            index.processElementsByKey(IndexKey.Constants, proc, state)\n\n            return result\n        },\n    )\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const _needed = TypeInferer.inferType\n\n    console.info(\"Tact language server is ready!\")\n\n    return {\n        capabilities: {\n            textDocumentSync: lsp.TextDocumentSyncKind.Incremental,\n            documentSymbolProvider: true,\n            workspaceSymbolProvider: true,\n            definitionProvider: true,\n            typeDefinitionProvider: true,\n            renameProvider: {\n                prepareProvider: true,\n            },\n            hoverProvider: true,\n            inlayHintProvider: true,\n            referencesProvider: true,\n            documentHighlightProvider: true,\n            foldingRangeProvider: true,\n            implementationProvider: true,\n            completionProvider: {\n                resolveProvider: true,\n                triggerCharacters: [\".\"],\n            },\n            signatureHelpProvider: {\n                triggerCharacters: [\"(\", \",\"],\n                retriggerCharacters: [\",\", \" \"],\n            },\n            semanticTokensProvider: {\n                legend: {\n                    tokenTypes: Object.keys(lsp.SemanticTokenTypes),\n                    tokenModifiers: Object.keys(lsp.SemanticTokenModifiers),\n                },\n                range: false,\n                full: true,\n            },\n            codeLensProvider: {\n                resolveProvider: false,\n            },\n            codeActionProvider: {\n                codeActionKinds: [lsp.CodeActionKind.QuickFix],\n            },\n            executeCommandProvider: {\n                commands: [\"tact/executeGetScopeProvider\", ...intentions.map(it => it.id)],\n            },\n        },\n    }\n})\n\nLogger.initialize(connection, `${__dirname}/tact-language-server.log`)\n\nconnection.listen()\n"],"names":[],"sourceRoot":""}